[
    {
        "premises-NL": [
            "There exists a student who excels in mathematics.",
            "All students who study regularly perform well in exams.",
            "If a student understands the concepts, they can solve complex problems.",
            "If a student does not practice, then they struggle with problem-solving.",
            "If a student attends lectures, then they gain a better understanding of the subject.",
            "If every student gets proper guidance, then their performance improves.",
            "If a student participates in group discussions, then their analytical skills enhance.",
            "If a school has experienced teachers, then students learn effectively.",
            "Every student who takes mock tests scores higher in final exams.",
            "There exists at least one student who actively engages in class discussions."
        ],
        "premises-FOL": [
            "Exists(x, Student(x) ∧ ExcelsMath(x))",
            "ForAll(x, Student(x) ∧ StudiesRegularly(x) → PerformsWellExams(x))",
            "ForAll(x, Student(x) ∧ UnderstandsConcepts(x) → SolvesComplexProblems(x))",
            "ForAll(x, Student(x) ∧ ¬Practices(x) → StrugglesProblemSolving(x))",
            "ForAll(x, Student(x) ∧ AttendsLectures(x) → BetterUnderstanding(x))",
            "ForAll(x, Student(x) → ProperGuidance(x)) → PerformanceImproves()",
            "ForAll(x, Student(x) ∧ GroupDiscussions(x) → AnalyticalSkillsEnhanced(x))",
            "ForAll(x, School(x) ∧ ExperiencedTeachers(x) → LearnEffectively(x))",
            "ForAll(x, Student(x) ∧ TakesMockTests(x) → ScoresHigherExams(x))",
            "Exists(x, Student(x) ∧ EngagesClassDiscussions(x))"
        ],
        "questions": [
            "Which can be inferred about students who attend lectures?\nA. Some students solve complex problems.\nB. All students solve complex problems.\nC. No students solve complex problems.\nD. Problem-solving depends on mock tests.",
            "Do students who practice excel in exams?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                3,
                5,
                10
            ],
            [
                2,
                4
            ]
        ],
        "explanation": [
            "Premise 5 states that attending lectures leads to better understanding, premise 3 says understanding concepts enables complex problem-solving, and premise 10 suggests some students are engaged, implying some attend lectures. Thus, some students solve complex problems, making A correct.",
            "Premise 4 implies that students who don’t struggle with problem-solving practice, and premise 2 states that regular study, which includes practice, leads to good exam performance. Thus, students who practice excel in exams."
        ]
    },
    {
        "premises-NL": [
            "There exists at least one university that implements a hybrid learning model.",
            "Every accredited university follows a standard curriculum.",
            "If a university offers online courses, then it increases accessibility.",
            "If a university does not provide scholarships, then some students cannot afford tuition.",
            "If a university has strong research programs, then it attracts top faculty.",
            "If every student has access to digital learning tools, then their learning experience improves.",
            "If a university collaborates with industries, then students gain practical experience.",
            "If a university provides mentorship programs, then student career readiness improves.",
            "Every well-ranked university has high student satisfaction.",
            "There exists at least one university that supports interdisciplinary studies."
        ],
        "premises-FOL": [
            "Exists(x, University(x) ∧ HybridLearning(x))",
            "ForAll(x, University(x) ∧ Accredited(x) → StandardCurriculum(x))",
            "ForAll(x, University(x) ∧ OnlineCourses(x) → IncreasesAccessibility(x))",
            "ForAll(x, University(x) ∧ ¬Scholarships(x) → ¬AffordableTuition(x))",
            "ForAll(x, University(x) ∧ StrongResearch(x) → TopFaculty(x))",
            "ForAll(x, Student(x) → DigitalTools(x)) → LearningExperienceImproves()",
            "ForAll(x, University(x) ∧ IndustryCollaboration(x) → PracticalExperience(x))",
            "ForAll(x, University(x) ∧ MentorshipPrograms(x) → CareerReadiness(x))",
            "ForAll(x, University(x) ∧ WellRanked(x) → HighSatisfaction(x))",
            "Exists(x, University(x) ∧ InterdisciplinaryStudies(x))"
        ],
        "questions": [
            "Which can be inferred about universities with online courses?\nA. Some universities increase accessibility.\nB. All universities increase accessibility.\nC. No universities increase accessibility.\nD. Accessibility depends on research programs.",
            "Do well-ranked universities improve student satisfaction?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1,
                3
            ],
            [
                9,
                10
            ]
        ],
        "explanation": [
            "Premise 1 states there exists a university with hybrid learning, and premise 3 says offering online courses increases accessibility. Assuming hybrid learning includes online courses, some universities increase accessibility, making A correct.",
            "Premise 9 states that well-ranked universities have high student satisfaction, and premise 10 suggests some universities with advanced features like interdisciplinary studies are likely well-ranked, supporting improved student satisfaction."
        ]
    },
    {
        "premises-NL": [
            "If students engage in active learning, they retain information more effectively.",
            "If students have access to diverse learning materials, they develop a broader understanding of subjects.",
            "If students participate in group projects, they enhance teamwork and communication skills.",
            "If students receive constructive feedback, they can improve their academic performance.",
            "If students rely solely on rote memorization, they may struggle with critical thinking.",
            "If students are exposed to real-world applications of knowledge, they gain a deeper appreciation for learning.",
            "If students lack proper time management skills, they may experience academic burnout.",
            "If teachers provide personalized support, students feel more motivated to learn.",
            "If students practice self-discipline, they develop better study habits and consistency.",
            "If schools encourage a growth mindset, students are more resilient to academic challenges."
        ],
        "premises-FOL": [
            "ForAll(x, Student(x) ∧ ActiveLearning(x) → BetterRetention(x))",
            "ForAll(x, Student(x) ∧ AccessToDiverseMaterials(x) → BroaderUnderstanding(x))",
            "ForAll(x, Student(x) ∧ GroupProjects(x) → TeamworkSkills(x) ∧ CommunicationSkills(x))",
            "ForAll(x, Student(x) ∧ ConstructiveFeedback(x) → ImprovedPerformance(x))",
            "ForAll(x, Student(x) ∧ RoteMemorization(x) → ¬CriticalThinking(x))",
            "ForAll(x, Student(x) ∧ RealWorldApplications(x) → DeeperAppreciation(x))",
            "ForAll(x, Student(x) ∧ ¬TimeManagementSkills(x) → AcademicBurnout(x))",
            "ForAll(x, Student(x) ∧ PersonalizedSupport(x) → HigherMotivation(x))",
            "ForAll(x, Student(x) ∧ SelfDiscipline(x) → BetterStudyHabits(x) ∧ Consistency(x))",
            "ForAll(x, School(x) ∧ GrowthMindsetEncouraged(x) → MoreResilientStudents(x))"
        ],
        "questions": [
            "Which can be inferred about students with personalized support?\nA. Some students improve academic performance.\nB. All students develop teamwork skills.\nC. No students are motivated.\nD. Students struggle with critical thinking.",
            "Can students avoid burnout by managing time effectively?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                4,
                8
            ],
            [
                7,
                9
            ]
        ],
        "explanation": [
            "Premise 8 states that personalized support increases motivation, and premise 4 says constructive feedback improves performance. If personalized support includes feedback, some students improve academically, making A the correct inference.",
            "Premise 7 states that lacking time management skills leads to burnout, implying good time management prevents it. Premise 9 suggests self-discipline fosters habits that include time management, so students managing time effectively avoid burnout."
        ]
    },
    {
        "premises-NL": [
            "If students participate in extracurricular activities, they develop better social skills.",
            "If students engage in project-based learning, they enhance problem-solving abilities.",
            "If students receive timely academic support, they are less likely to fall behind in their studies.",
            "If students are exposed to interdisciplinary learning, they gain a more holistic understanding of concepts.",
            "If students rely solely on test scores, they may neglect creativity and innovation.",
            "If students collaborate with peers from diverse backgrounds, they improve cultural awareness and adaptability.",
            "If students experience high academic pressure, they are more prone to anxiety and decreased motivation.",
            "If teachers use interactive teaching methods, students are more engaged in learning.",
            "If students develop metacognitive skills, they become more effective independent learners.",
            "If educational institutions promote lifelong learning habits, students continue to grow beyond formal education."
        ],
        "premises-FOL": [
            "ForAll(x, Student(x) ∧ ExtracurricularActivities(x) → BetterSocialSkills(x))",
            "ForAll(x, Student(x) ∧ ProjectBasedLearning(x) → EnhancedProblemSolving(x))",
            "ForAll(x, Student(x) ∧ TimelyAcademicSupport(x) → LessLikelihoodFallingBehind(x))",
            "ForAll(x, Student(x) ∧ InterdisciplinaryLearning(x) → HolisticUnderstanding(x))",
            "ForAll(x, Student(x) ∧ SolelyTestScores(x) → ¬Creativity(x) ∧ ¬Innovation(x))",
            "ForAll(x, Student(x) ∧ PeerDiversity(x) → ImprovedCulturalAwareness(x) ∧ BetterAdaptability(x))",
            "ForAll(x, Student(x) ∧ HighAcademicPressure(x) → IncreasedAnxiety(x) ∧ DecreasedMotivation(x))",
            "ForAll(x, Student(x) ∧ InteractiveTeaching(x) → HigherEngagement(x))",
            "ForAll(x, Student(x) ∧ MetacognitiveSkills(x) → MoreEffectiveIndependentLearning(x))",
            "ForAll(x, Institution(x) ∧ PromoteLifelongLearning(x) → ContinuedGrowthBeyondEducation(x))"
        ],
        "questions": [
            "Which can be inferred about students in interactive learning environments?\nA. Some students develop better problem-solving skills.\nB. All students lack engagement.\nC. No students improve cultural awareness.\nD. Students neglect creativity.",
            "Can students with metacognitive skills avoid academic pressure’s negative effects?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                2,
                8
            ],
            [
                7,
                9
            ]
        ],
        "explanation": [
            "Premise 8 states that interactive teaching increases engagement, and premise 2 says project-based learning enhances problem-solving. If interactive teaching includes project-based learning, some students develop better problem-solving skills, making A the correct inference.",
            "Premise 7 states that high academic pressure causes anxiety and reduced motivation, while premise 9 says metacognitive skills improve independent learning. If metacognitive skills help manage pressure, students can avoid negative effects like anxiety."
        ]
    },
    {
        "premises-NL": [
            "If students engage in self-directed learning, they develop stronger critical thinking skills.",
            "If students receive frequent formative assessments, they can track their academic progress effectively.",
            "If students participate in classroom debates, they improve their reasoning and argumentation skills.",
            "If students engage in hands-on experiments, they gain a deeper understanding of scientific concepts.",
            "If students face rigid curriculum structures, they may struggle to explore their personal interests.",
            "If students work on open-ended projects, they enhance their creativity and innovation skills.",
            "If students lack access to quality educational resources, their academic performance may suffer.",
            "If teachers provide differentiated instruction, students with diverse learning needs perform better.",
            "If students are encouraged to ask questions, they develop a stronger sense of curiosity and inquiry.",
            "If schools integrate technology in learning, students gain better digital literacy skills."
        ],
        "premises-FOL": [
            "ForAll(x, Student(x) ∧ SelfDirectedLearning(x) → StrongerCriticalThinking(x))",
            "ForAll(x, Student(x) ∧ FrequentFormativeAssessments(x) → EffectiveProgressTracking(x))",
            "ForAll(x, Student(x) ∧ ClassroomDebates(x) → ImprovedReasoning(x) ∧ BetterArgumentation(x))",
            "ForAll(x, Student(x) ∧ HandsOnExperiments(x) → DeeperUnderstanding(x))",
            "ForAll(x, Student(x) ∧ RigidCurriculum(x) → StruggleToExploreInterests(x))",
            "ForAll(x, Student(x) ∧ OpenEndedProjects(x) → EnhancedCreativity(x) ∧ StrongerInnovation(x))",
            "ForAll(x, Student(x) ∧ ¬QualityResources(x) → LowerAcademicPerformance(x))",
            "ForAll(x, Student(x) ∧ DifferentiatedInstruction(x) → BetterPerformanceDiverseNeeds(x))",
            "ForAll(x, Student(x) ∧ EncouragedToAskQuestions(x) → StrongerCuriosity(x) ∧ InquirySkills(x))",
            "ForAll(x, Institution(x) ∧ TechnologyIntegratedLearning(x) → ImprovedDigitalLiteracy(x))"
        ],
        "questions": [
            "Which can be inferred about students with self-directed learning?\nA. Some students enhance creativity.\nB. Some students improve reasoning.\nC. No students improve reasoning.\nD. Students struggle with progress tracking.",
            "Can students with open-ended projects avoid rigid curriculum struggles?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                1,
                3
            ],
            [
                5,
                6
            ]
        ],
        "explanation": [
            "Premise 1 states that self-directed learning develops critical thinking, and premise 3 says classroom debates improve reasoning. If self-directed learning includes activities like debates, some students improve reasoning, making B the correct inference.",
            "Premise 5 states that rigid curricula cause struggles with personal interests, while premise 6 says open-ended projects enhance creativity. If open-ended projects allow exploration, students can avoid rigid curriculum struggles."
        ]
    },
    {
        "premises-NL": [
            "If students engage in collaborative learning, they develop better teamwork skills.",
            "If students receive constructive feedback, they can improve their academic performance.",
            "If students participate in extracurricular leadership roles, they enhance their decision-making abilities.",
            "If students have access to personalized learning plans, they achieve better learning outcomes.",
            "If students experience flexible learning environments, they adapt more effectively to different challenges.",
            "If students rely solely on rote memorization, they may struggle with critical thinking.",
            "If students engage in interdisciplinary projects, they build connections between different fields of knowledge.",
            "If students are taught time management strategies, they can handle academic workloads more efficiently.",
            "If students receive mentorship from experienced educators, they develop stronger career readiness skills.",
            "If schools promote inclusive education, students from diverse backgrounds have equal learning opportunities."
        ],
        "premises-FOL": [
            "ForAll(x, Student(x) ∧ CollaborativeLearning(x) → BetterTeamworkSkills(x))",
            "ForAll(x, Student(x) ∧ ConstructiveFeedback(x) → ImprovedAcademicPerformance(x))",
            "ForAll(x, Student(x) ∧ ExtracurricularLeadership(x) → EnhancedDecisionMaking(x))",
            "ForAll(x, Student(x) ∧ PersonalizedLearningPlans(x) → BetterLearningOutcomes(x))",
            "ForAll(x, Student(x) ∧ FlexibleLearning(x) → EffectiveAdaptation(x))",
            "ForAll(x, Student(x) ∧ SolelyRoteMemorization(x) → StrugglesWithCriticalThinking(x))",
            "ForAll(x, Student(x) ∧ InterdisciplinaryProjects(x) → KnowledgeConnections(x))",
            "ForAll(x, Student(x) ∧ TimeManagementStrategies(x) → EfficientWorkloadHandling(x))",
            "ForAll(x, Student(x) ∧ ExperiencedMentorship(x) → StrongerCareerReadiness(x))",
            "ForAll(x, Institution(x) ∧ PromotesInclusiveEducation(x) → EqualLearningOpportunities(x))"
        ],
        "questions": [
            "Which can be inferred about students with personalized learning plans?\nA. Some students handle workloads efficiently.\nB. All students struggle with critical thinking.\nC. No students achieve better outcomes.\nD. Some students improve academic performance.",
            "Can students in flexible learning environments improve decision-making?"
        ],
        "answers": [
            "D",
            "Yes"
        ],
        "idx": [
            [
                2,
                4
            ],
            [
                3,
                5
            ]
        ],
        "explanation": [
            "Premise 4 states that personalized learning plans lead to better outcomes, and premise 2 says constructive feedback improves performance. If personalized plans include feedback, some students improve academically, making D the correct inference.",
            "Premise 5 states that flexible learning environments improve adaptation, and premise 3 says leadership roles enhance decision-making. If flexible environments enable leadership activities, students can improve decision-making."
        ]
    },
    {
        "premises-NL": [
            "If students engage in problem-based learning, they develop stronger analytical skills.",
            "If students have access to diverse learning materials, they gain a broader perspective on subjects.",
            "If students participate in peer tutoring, both tutors and learners reinforce their knowledge.",
            "If students experience project-based assessments, they apply theoretical knowledge to practical situations.",
            "If students lack motivation, their academic performance may decline.",
            "If students engage in digital learning platforms, they enhance their technological proficiency.",
            "If students practice metacognitive strategies, they become more effective self-learners.",
            "If students receive clear learning objectives, they can set better academic goals.",
            "If students engage in physical activities during school hours, they improve their cognitive function.",
            "If schools implement competency-based education, students progress based on mastery rather than time spent."
        ],
        "premises-FOL": [
            "ForAll(x, Student(x) ∧ ProblemBasedLearning(x) → StrongerAnalyticalSkills(x))",
            "ForAll(x, Student(x) ∧ DiverseLearningMaterials(x) → BroaderSubjectPerspective(x))",
            "ForAll(x, Student(x) ∧ PeerTutoring(x) → ReinforcedKnowledge(x))",
            "ForAll(x, Student(x) ∧ ProjectBasedAssessments(x) → PracticalApplication(x))",
            "ForAll(x, Student(x) ∧ LackMotivation(x) → DeclinedAcademicPerformance(x))",
            "ForAll(x, Student(x) ∧ DigitalLearningPlatforms(x) → EnhancedTechProficiency(x))",
            "ForAll(x, Student(x) ∧ MetacognitiveStrategies(x) → EffectiveSelfLearner(x))",
            "ForAll(x, Student(x) ∧ ClearLearningObjectives(x) → BetterAcademicGoals(x))",
            "ForAll(x, Student(x) ∧ SchoolPhysicalActivity(x) → ImprovedCognitiveFunction(x))",
            "ForAll(x, Institution(x) ∧ CompetencyBasedEducation(x) → MasteryBasedProgression(x))"
        ],
        "questions": [
            "Which can be inferred about students with clear learning objectives?\nA. Some students improve cognitive function.\nB. All students lack motivation.\nC. No students apply practical knowledge.\nD. Some students set better academic goals.",
            "Can students in problem-based learning improve self-learning?"
        ],
        "answers": [
            "D",
            "Yes"
        ],
        "idx": [
            [
                5,
                8
            ],
            [
                1,
                7
            ]
        ],
        "explanation": [
            "Premise 8 states that clear learning objectives help students set better academic goals, and premise 5 implies that avoiding performance decline involves motivation. If goal-setting sustains motivation, some students set better goals, making D the correct inference.",
            "Premise 1 states that problem-based learning develops analytical skills, and premise 7 says metacognitive strategies improve self-learning. If analytical skills involve metacognition, students in problem-based learning can improve self-learning."
        ]
    },
    {
        "premises-NL": [
            "Every student attends tutoring.",
            "If a student completes assignments on time, then they understand the course material.",
            "If a student understands the material, then they are prepared for the final exam.",
            "If a student completes assignments on time, then they submit assignments on time.",
            "If a student completes assignments on time, then they are prepared for the final exam."
        ],
        "premises-FOL": [
            "∀x (Student(x) → AttendsTutoring(x))",
            "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → UnderstandsMaterial(x))",
            "∀x (Student(x) ∧ UnderstandsMaterial(x) → PreparedForExam(x))",
            "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → SubmitsAssignmentsOnTime(x))",
            "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → PreparedForExam(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. Some students understand the material but are not prepared for the exam.\nB. If completing assignments on time means understanding the material, then all students are prepared for the exam.\nC. All students who complete assignments on time do not understand the material.\nD. No student who attends tutoring is prepared for the exam.",
            "Is it true that not submitting assignments on time means a student is not prepared for the exam?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                1,
                2,
                3
            ],
            [
                4,
                5
            ]
        ],
        "explanation": [
            "All students attend tutoring (premise 1), leading to completing assignments on time. If completing assignments implies understanding the material (premise 2), and understanding implies preparation for the exam (premise 3), then all students are prepared, making option B true.",
            "Completing assignments on time means submitting them on time (premise 4) and being prepared for the exam (premise 5). Thus, not submitting assignments implies not completing them, so the student is not prepared."
        ]
    },
    {
        "premises-NL": [
            "If a student installs the software from the university’s repository, then the software is functional.",
            "There exists at least one student who has installed the software from the university’s repository.",
            "There exists at least one student who is using the software.",
            "If a student does not update the software, then the software is not secure.",
            "If a student does not install the software from the university’s repository, then the software is not functional.",
            "If a student installs the software, it implies that if they do not update it, the software will be insecure.",
            "If a student installs the software, then they have access to the latest features from the university's system.",
            "There exists at least one student who has updated the software.",
            "If a student does not update the software, then they do not have access to the latest features."
        ],
        "premises-FOL": [
            "(InstallsSoftware(x) → FunctionalSoftware(x))",
            "Exists(x, InstallsSoftware(x))",
            "Exists(x, UsesSoftware(x))",
            "(¬UpdatesSoftware(x) → ¬SecureSoftware(x))",
            "(¬InstallsSoftware(x) → ¬FunctionalSoftware(x))",
            "(InstallsSoftware(x) → (¬UpdatesSoftware(x) → ¬SecureSoftware(x)))",
            "(InstallsSoftware(x) → HasAccessToLatestFeatures(x))",
            "Exists(x, UpdatesSoftware(x))",
            "(¬UpdatesSoftware(x) → ¬HasAccessToLatestFeatures(x))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. All students install the software.\nB. All students update the software.\nC. There exists a student with access to the latest features.\nD. All students’ software is secure.",
            "Based on the above premises, is the statement true?\nStatement: (Exists(x, InstallsSoftware(x)) → (¬UpdatesSoftware(x) → ¬SecureSoftware(x)))"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                2,
                7
            ],
            [
                4
            ]
        ],
        "explanation": [
            "There exists a student with access to the latest features because at least one student installs the software from the university’s repository, and installing the software implies having access to the latest features.",
            "The statement is true because not updating the software implies it is not secure, and since at least one student installs the software, the implication holds."
        ]
    },
    {
        "premises-NL": [
            "Every student attends tutoring.",
            "If a student completes assignments on time, then they understand the course material.",
            "If a student understands the material, then they are prepared for the final exam.",
            "If a student completes assignments on time, then they submit assignments on time.",
            "If a student completes assignments on time, then they are prepared for the final exam."
        ],
        "premises-FOL": [
            "∀x (Student(x) → AttendsTutoring(x))",
            "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → UnderstandsMaterial(x))",
            "∀x (Student(x) ∧ UnderstandsMaterial(x) → PreparedForExam(x))",
            "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → SubmitsAssignmentsOnTime(x))",
            "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → PreparedForExam(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. Some students understand the material but are not prepared for the exam.\nB. If completing assignments on time means understanding the material, then all students are prepared for the exam.\nC. All students who complete assignments on time do not understand the material.\nD. No student who attends tutoring is prepared for the exam.",
            "Is it true that not submitting assignments on time means a student is not prepared for the exam?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                1,
                2,
                3
            ],
            [
                4,
                5
            ]
        ],
        "explanation": [
            "All students attend tutoring (premise 1), leading to completing assignments on time. If completing assignments implies understanding the material (premise 2), and understanding implies preparation for the exam (premise 3), then all students are prepared, making option B true.",
            "Completing assignments on time means submitting them on time (premise 4) and being prepared for the exam (premise 5). Thus, not submitting assignments implies not completing them, so the student is not prepared."
        ]
    },
    {
        "premises-NL": [
            "There exists at least one student who is enrolled in the course.",
            "If a student studies consistently, then the student understands the subject.",
            "If a student does not study consistently, then the student does not perform well in exams.",
            "All students are enrolled in the course.",
            "If a student does not attend lectures, then the student does not complete assignments.",
            "If studying consistently leads to understanding the subject, then all students are enrolled in the course.",
            "All students complete their assignments.",
            "If a student does not perform well in exams, then the student did not study consistently.",
            "If a student is not enrolled in the course, then the student does not complete assignments."
        ],
        "premises-FOL": [
            "Exists(x, Enrolled(x))",
            "ForAll(x, (StudiesConsistently(x) → UnderstandsSubject(x)))",
            "ForAll(x, (¬StudiesConsistently(x) → ¬PerformsWell(x)))",
            "ForAll(x, Enrolled(x))",
            "ForAll(x, (¬AttendsLectures(x) → ¬CompletesAssignments(x)))",
            "((ForAll(x, (StudiesConsistently(x) → UnderstandsSubject(x))) → ForAll(x, Enrolled(x)))",
            "ForAll(x, CompletesAssignments(x))",
            "ForAll(x, (¬PerformsWell(x) → ¬StudiesConsistently(x)))",
            "ForAll(x, (¬Enrolled(x) → ¬CompletesAssignments(x)))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. There exists a student who is not enrolled.\nB. There exists a student who does not complete assignments.\nC. All students attend lectures.\nD. There exists a student who does not study consistently.",
            "Based on the above premises, is the statement true?\nStatement: (¬AttendsLectures(x) → ¬CompletesAssignments(x))"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                5,
                7
            ],
            [
                5
            ]
        ],
        "explanation": [
            "All students attend lectures because all students complete their assignments, and not attending lectures implies not completing assignments.",
            "The statement is true because it is explicitly stated that if a student does not attend lectures, they do not complete assignments."
        ]
    },
    {
        "premises-NL": [
            "Every student attends tutoring.",
            "If a student completes assignments on time, then they understand the course material.",
            "If a student understands the material, then they are prepared for the final exam.",
            "If a student completes assignments on time, then they submit assignments on time.",
            "If a student completes assignments on time, then they are prepared for the final exam."
        ],
        "premises-FOL": [
            "∀x (Student(x) → AttendsTutoring(x))",
            "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → UnderstandsMaterial(x))",
            "∀x (Student(x) ∧ UnderstandsMaterial(x) → PreparedForExam(x))",
            "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → SubmitsAssignmentsOnTime(x))",
            "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → PreparedForExam(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. Some students understand the material but are not prepared for the exam.\nB. If completing assignments on time means understanding the material, then all students are prepared for the exam.\nC. All students who complete assignments on time do not understand the material.\nD. No student who attends tutoring is prepared for the exam.",
            "Is it true that not submitting assignments on time means a student is not prepared for the exam?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                1,
                2,
                3
            ],
            [
                4,
                5
            ]
        ],
        "explanation": [
            "All students attend tutoring (premise 1), leading to completing assignments on time. If completing assignments implies understanding the material (premise 2), and understanding implies preparation for the exam (premise 3), then all students are prepared, making option B true.",
            "Completing assignments on time means submitting them on time (premise 4) and being prepared for the exam (premise 5). Thus, not submitting assignments implies not completing them, so the student is not prepared."
        ]
    },
    {
        "premises-NL": [
            "All books in the library are cataloged.",
            "There exists at least one book that is cataloged.",
            "If a book is reserved, then it is not available for borrowing.",
            "If a book is not returned, then it is not available.",
            "All users of the library follow the library rules.",
            "There exists at least one book that is available.",
            "All books in the reference section cannot be borrowed.",
            "If all reference books cannot be borrowed, then there exists at least one available book.",
            "If a book is not reserved, then it is cataloged.",
            "If a book is available, then it is cataloged.",
            "If a book is not cataloged, then it is not in the reference section."
        ],
        "premises-FOL": [
            "ForAll(x, Cataloged(x))",
            "Exists(x, Cataloged(x))",
            "ForAll(x, (Reserved(x) → ¬Borrowable(x)))",
            "ForAll(x, (¬Returned(x) → ¬Available(x)))",
            "ForAll(x, FollowsRules(x))",
            "Exists(x, Available(x))",
            "ForAll(x, (ReferenceSection(x) → ¬Borrowable(x)))",
            "((ForAll(x, (ReferenceSection(x) → ¬Borrowable(x))) → Exists(x, Available(x)))",
            "ForAll(x, (¬Reserved(x) → Cataloged(x)))",
            "ForAll(x, (Available(x) → Cataloged(x)))",
            "ForAll(x, (¬Cataloged(x) → ¬ReferenceSection(x)))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. All books are available.\nB. There exists a book that is not cataloged.\nC. There exists a book that is returned.\nD. All books are borrowable.",
            "Based on the above premises, is the statement true?\nStatement: ForAll(x, Cataloged(x))"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                4,
                6
            ],
            [
                1
            ]
        ],
        "explanation": [
            "There exists a book that is returned because at least one book is available, and if a book is not returned, it is not available, implying that an available book must be returned.",
            "The statement is true because it is explicitly stated that all books in the library are cataloged."
        ]
    },
    {
        "premises-NL": [
            "All members provide support to their teammates.",
            "If a member supports their teammates, they take initiative.",
            "If a team member takes initiative, they collaborate.",
            "If a team member does not communicate, they do not receive feedback."
        ],
        "premises-FOL": [
            "∀x (TeamMember(x) → SupportsTeammates(x))",
            "∀x (TeamMember(x) ∧ SupportsTeammates(x) → TakesInitiative(x))",
            "∀x (TeamMember(x) ∧ TakesInitiative(x) → Collaborates(x))",
            "∀x (TeamMember(x) ∧ ¬Communicates(x) → ¬ReceivesFeedback(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. Some team members take initiative but do not collaborate.\nB. If taking initiative means contributing effectively, then assuming it again means all members collaborate.\nC. No team member supports their teammates.\nD. All team members contribute effectively but do not collaborate.",
            "Is it true that team members who don’t communicate don’t receive feedback?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                1,
                2,
                3
            ],
            [
                4
            ]
        ],
        "explanation": [
            "All team members support their teammates (premise 1), which means they take initiative (premise 2). Taking initiative leads to collaboration (premise 3). Thus, if initiative implies effective contribution, all members collaborate, making option B true.",
            "If a team member doesn’t communicate, they don’t receive feedback (premise 4), so the statement is true."
        ]
    },
    {
        "premises-NL": [
            "If a student does not practice Calculus exercises, they will not understand the concepts.",
            "If a student does not attend Calculus lectures, they will not understand the definitions.",
            "There exists at least one student who has mastered Calculus.",
            "All students have mastered Calculus.",
            "If a student does not attend lectures, they will not practice exercises.",
            "If a student does not master Calculus, they will not practice exercises.",
            "If a student practices exercises, they will perform well in exams.",
            "All students are required to submit assignments.",
            "If a student does not take notes, they will not practice exercises.",
            "If not attending lectures leads to not understanding definitions, then all students have mastered Calculus.",
            "If a student does not attend lectures, they will not master Calculus.",
            "If a student takes notes, they will perform well in exams.",
            "If a student does not practice exercises, they will not take notes.",
            "All students practice exercises.",
            "All students perform well in exams.",
            "If a student does not perform well in exams, they will not master Calculus."
        ],
        "premises-FOL": [
            "ForAll(x, (¬PracticeExercises(x) → ¬UnderstandConcepts(x)))",
            "ForAll(x, (¬AttendLectures(x) → ¬UnderstandDefinitions(x)))",
            "Exists(x, MasterCalculus(x))",
            "ForAll(x, MasterCalculus(x))",
            "ForAll(x, (¬AttendLectures(x) → ¬PracticeExercises(x)))",
            "ForAll(x, (¬MasterCalculus(x) → ¬PracticeExercises(x)))",
            "ForAll(x, (PracticeExercises(x) → PerformWell(x)))",
            "ForAll(x, SubmitAssignments(x))",
            "ForAll(x, (¬TakeNotes(x) → ¬PracticeExercises(x)))",
            "((ForAll(x, (¬AttendLectures(x) → ¬UnderstandDefinitions(x))) → ForAll(x, MasterCalculus(x)))",
            "ForAll(x, (¬AttendLectures(x) → ¬MasterCalculus(x)))",
            "ForAll(x, (TakeNotes(x) → PerformWell(x)))",
            "ForAll(x, (¬PracticeExercises(x) → ¬TakeNotes(x)))",
            "ForAll(x, PracticeExercises(x))",
            "ForAll(x, PerformWell(x))",
            "ForAll(x, (¬PerformWell(x) → ¬MasterCalculus(x)))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. There exists a student who has not mastered Calculus.\nB. There exists a student who does not practice exercises.\nC. All students attend lectures.\nD. There exists a student who does not perform well in exams.",
            "Based on the above premises, is the statement true?\nStatement: (PracticeExercises(x) → PerformWell(x))"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                5,
                14
            ],
            [
                7
            ]
        ],
        "explanation": [
            "All students attend lectures because all students practice exercises, and not attending lectures implies not practicing exercises.",
            "The statement is true because it is explicitly stated that if a student practices exercises, they will perform well in exams."
        ]
    },
    {
        "premises-NL": [
            "If a student attends tutoring, then that student improves exam scores.",
            "If a student improves exam scores, then that student has an opportunity to succeed.",
            "If a student participates in group discussions, then that student attends tutoring.",
            "There exists at least one student who participates in group discussions.",
            "If a student does not submit assignments on time, then that student does not attend tutoring."
        ],
        "premises-FOL": [
            "∀x (Student(x) ∧ AttendsTutoring(x) → ImprovesExamScores(x))",
            "∀x (Student(x) ∧ ImprovesExamScores(x) → HasOpportunityToSucceed(x))",
            "∀x (Student(x) ∧ ParticipatesGroupDiscussion(x) → AttendsTutoring(x))",
            "∃x (Student(x) ∧ ParticipatesGroupDiscussion(x))",
            "∀x (Student(x) ∧ ¬SubmitsOnTime(x) → ¬AttendsTutoring(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. Some students attend tutoring but don’t have an opportunity to succeed.\nB. If not submitting assignments means not attending tutoring, then some student has an opportunity to succeed.\nC. No student participates in group discussions.\nD. All students who improve exam scores don’t attend tutoring.",
            "Is it true that some student has an opportunity to succeed?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                1,
                2,
                3,
                4,
                5
            ],
            [
                1,
                2,
                3,
                4
            ]
        ],
        "explanation": [
            "Some student participates in group discussions (premise 4), which means they attend tutoring (premise 3). Tutoring leads to improved exam scores (premise 1) and an opportunity to succeed (premise 2). Thus, even if not submitting assignments implies not tutoring (premise 5), some student has an opportunity to succeed, making option B true.",
            "At least one student participates in group discussions (premise 4), leading to tutoring (premise 3), improved exam scores (premise 1), and an opportunity to succeed (premise 2). Thus, some student has an opportunity to succeed."
        ]
    },
    {
        "premises-NL": [
            "There exists at least one student who submits assignments.",
            "If a student completes the project, then they pass the test.",
            "If a student completes the project, then they attend lectures.",
            "Every student passes the test.",
            "Every student submits assignments.",
            "If at least one student submits assignments, then every student passes the test.",
            "There exists at least one student who participates in discussions.",
            "There exists at least one student who passes the test.",
            "If a student participates in discussions, then they attend lectures."
        ],
        "premises-FOL": [
            "Exists(x, SubmitsAssignments(x))",
            "ForAll(x, (CompletesProject(x) → PassesTest(x)))",
            "ForAll(x, (CompletesProject(x) → AttendsLectures(x)))",
            "ForAll(x, PassesTest(x))",
            "ForAll(x, SubmitsAssignments(x))",
            "(Exists(x, SubmitsAssignments(x)) → ForAll(x, PassesTest(x)))",
            "Exists(x, ParticipatesInDiscussions(x))",
            "Exists(x, PassesTest(x))",
            "ForAll(x, (ParticipatesInDiscussions(x) → AttendsLectures(x)))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. There exists a student who does not pass the test.\nB. There exists a student who does not submit assignments.\nC. There exists a student who attends lectures.\nD. Every student completes the project.",
            "Based on the above premises, is the statement true?\nStatement: ((Exists(x, SubmitsAssignments(x)) → ForAll(x, PassesTest(x))) → ForAll(x, SubmitsAssignments(x)))"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                7,
                9
            ],
            [
                4,
                5
            ]
        ],
        "explanation": [
            "There exists a student who attends lectures because at least one student participates in discussions, and participating in discussions implies attending lectures.",
            "The statement is true because every student submits assignments and every student passes the test, making the implication from at least one student submitting assignments to all passing the test true, and all students submitting assignments satisfies the consequent."
        ]
    },
    {
        "premises-NL": [
            "If a student attends tutoring, then that student improves exam scores.",
            "If a student improves exam scores, then that student has an opportunity to succeed.",
            "If a student participates in group discussions, then that student attends tutoring.",
            "There exists at least one student who participates in group discussions.",
            "If a student does not submit assignments on time, then that student does not attend tutoring."
        ],
        "premises-FOL": [
            "∀x (Student(x) ∧ AttendsTutoring(x) → ImprovesExamScores(x))",
            "∀x (Student(x) ∧ ImprovesExamScores(x) → HasOpportunityToSucceed(x))",
            "∀x (Student(x) ∧ ParticipatesGroupDiscussion(x) → AttendsTutoring(x))",
            "∃x (Student(x) ∧ ParticipatesGroupDiscussion(x))",
            "∀x (Student(x) ∧ ¬SubmitsOnTime(x) → ¬AttendsTutoring(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. Some students attend tutoring but don’t have an opportunity to succeed.\nB. If not submitting assignments means not attending tutoring, then some student has an opportunity to succeed.\nC. No student participates in group discussions.\nD. All students who improve exam scores don’t attend tutoring.",
            "Is it true that some student has an opportunity to succeed?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                1,
                2,
                3,
                4,
                5
            ],
            [
                1,
                2,
                3,
                4
            ]
        ],
        "explanation": [
            "Some student participates in group discussions (premise 4), which means they attend tutoring (premise 3). Tutoring leads to improved exam scores (premise 1) and an opportunity to succeed (premise 2). Thus, even if not submitting assignments implies not tutoring (premise 5), some student has an opportunity to succeed, making option B true.",
            "At least one student participates in group discussions (premise 4), leading to tutoring (premise 3), improved exam scores (premise 1), and an opportunity to succeed (premise 2). Thus, some student has an opportunity to succeed."
        ]
    },
    {
        "premises-NL": [
            "There exists at least one student who asks questions during class.",
            "If a student does not engage in class discussions, then they do not understand the material.",
            "Not every student participates in a study group.",
            "If a student does not submit assignments on time, then they do not receive full credit.",
            "If a student attends office hours, then they understand the material better.",
            "If a student completes all coursework, then they have a good chance to pass the exam.",
            "If a student attends office hours, then they are likely to pass the exam.",
            "There exists at least one student who attends office hours.",
            "If a student completes the project, then they are prepared for the final exam."
        ],
        "premises-FOL": [
            "Exists(x, AsksQuestionsDuringClass(x))",
            "ForAll(x, (¬EngagesInDiscussions(x) → ¬UnderstandsMaterial(x)))",
            "¬ForAll(x, ParticipatesInStudyGroup(x))",
            "ForAll(x, (¬SubmitsAssignmentsOnTime(x) → ¬ReceivesFullCredit(x)))",
            "ForAll(x, (AttendsOfficeHours(x) → UnderstandsMaterialBetter(x)))",
            "ForAll(x, (CompletesAllCoursework(x) ↔ HasGoodChanceToPassExam(x)))",
            "ForAll(x, (AttendsOfficeHours(x) → LikelyToPassExam(x)))",
            "Exists(x, AttendsOfficeHours(x))",
            "ForAll(x, (CompletesProject(x) → PreparedForFinalExam(x)))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. Every student attends office hours.\nB. There exists a student with no good chance to pass the exam.\nC. There exists a student likely to pass the exam.\nD. Every student participates in a study group.",
            "Based on the above premises, is the statement true?\nStatement: Exists(x, ParticipatesInStudyGroup(x))"
        ],
        "answers": [
            "C",
            "No"
        ],
        "idx": [
            [
                7,
                8
            ],
            [
                3
            ]
        ],
        "explanation": [
            "There exists a student likely to pass the exam because at least one student attends office hours, and attending office hours implies being likely to pass the exam.",
            "The statement is not necessarily true because, while not every student participates in a study group, no premise confirms that at least one student does participate."
        ]
    },
    {
        "premises-NL": [
            "If a student does not use online documents from the library, then that student does not gain more knowledge.",
            "There exists a student who gains more knowledge."
        ],
        "premises-FOL": [
            "∀x (Student(x) ∧ ¬UsesOnlineDocuments(x) → ¬GainsKnowledge(x))",
            "∃x (Student(x) ∧ GainsKnowledge(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. If not using online documents means not gaining knowledge, then some student gains knowledge.\nB. All students use online documents.\nC. No student gains knowledge.\nD. Some students don’t use online documents.",
            "Is it true that some student uses online documents from the library?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1,
                2
            ],
            [
                1,
                2
            ]
        ],
        "explanation": [
            "There exists a student who gains knowledge (premise 2). If not using online documents prevents gaining knowledge (premise 1), the existence of a knowledge-gaining student satisfies the implication, making option A true.",
            "Some student gains knowledge (premise 2), and not using online documents prevents knowledge gain (premise 1), so that student must use online documents, confirming the statement."
        ]
    },
    {
        "premises-NL": [
            "If a Python script does not have error handling, then it does not handle exceptions.",
            "If a Python script does not have error handling, then it does not produce reliable outputs.",
            "If a Python program follows best practices, then it is optimized.",
            "There exists at least one Python script with error handling.",
            "All well-structured Python programs are optimized.",
            "All Python projects adhere to best practices.",
            "There exists at least one optimized Python program.",
            "If a Python script does not have error handling, then it does not follow best practices.",
            "If a Python program is optimized, then it has error handling.",
            "If a Python script has error handling, then it handles exceptions.",
            "If a Python script has error handling, then it follows best practices.",
            "All Python scripts have error handling.",
            "There exists at least one Python project that follows best practices.",
            "All Python programs produce reliable outputs.",
            "If a Python project follows best practices, then it produces reliable outputs.",
            "If all well-structured Python programs are optimized, then a script without error handling does not handle exceptions.",
            "If a Python program is not optimized, then it does not follow best practices.",
            "If a Python script does not have error handling, then it does not follow PEP 8.",
            "If a Python program produces reliable outputs, then it is optimized."
        ],
        "premises-FOL": [
            "ForAll(x, (PythonScript(x) → (¬HasErrorHandling(x) → ¬HandlesExceptions(x))))",
            "ForAll(x, (PythonScript(x) → (¬HasErrorHandling(x) → ¬ReliableOutputs(x))))",
            "ForAll(x, (BestPractices(x) → Optimized(x)))",
            "Exists(x, (PythonScript(x) ∧ HasErrorHandling(x)))",
            "ForAll(x, (WellStructured(x) → Optimized(x)))",
            "ForAll(x, (PythonProject(x) → BestPractices(x)))",
            "Exists(x, OptimizedPythonProgram(x))",
            "ForAll(x, (PythonScript(x) → (¬HasErrorHandling(x) → ¬BestPractices(x))))",
            "ForAll(x, (OptimizedPythonProgram(x) → HasErrorHandling(x)))",
            "ForAll(x, (PythonScript(x) → (HasErrorHandling(x) → HandlesExceptions(x))))",
            "ForAll(x, (PythonScript(x) → (HasErrorHandling(x) → BestPractices(x))))",
            "ForAll(x, (PythonScript(x) → HasErrorHandling(x)))",
            "Exists(x, (PythonProject(x) ∧ BestPractices(x)))",
            "ForAll(x, ReliableOutputs(x))",
            "ForAll(x, (PythonProject(x) → (BestPractices(x) → ReliableOutputs(x))))",
            "((ForAll(x, (WellStructured(x) → Optimized(x))) → ForAll(x, (PythonScript(x) → (¬HasErrorHandling(x) → ¬HandlesExceptions(x)))))",
            "ForAll(x, (¬Optimized(x) → ¬BestPractices(x)))",
            "ForAll(x, (PythonScript(x) → (¬HasErrorHandling(x) → ¬FollowsPEP8(x))))",
            "ForAll(x, (ReliableOutputs(x) → Optimized(x)))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. There exists a script without error handling.\nB. There exists a program that does not produce reliable outputs.\nC. All Python programs are optimized.\nD. There exists a program that does not follow best practices.",
            "Based on the above premises, is the statement true?\nStatement: ForAll(x, (PythonScript(x) → HasErrorHandling(x)))"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                14,
                19
            ],
            [
                12
            ]
        ],
        "explanation": [
            "All Python programs are optimized because all programs produce reliable outputs, and producing reliable outputs implies being optimized.",
            "The statement is true because it is explicitly stated that all Python scripts have error handling."
        ]
    },
    {
        "premises-NL": [
            "If a dataset has missing values, then it affects model convergence.",
            "If a dataset requires preprocessing, then missing values affect model convergence.",
            "There exists at least one dataset with missing values."
        ],
        "premises-FOL": [
            "∀x (Dataset(x) ∧ MissingValues(x) → AffectsConvergence(x))",
            "∀x (Dataset(x) ∧ PreprocessingRequired(x) → (MissingValues(x) → AffectsConvergence(x)))",
            "∃x (Dataset(x) ∧ MissingValues(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. Some datasets have missing values but don’t affect model convergence.\nB. If all datasets require preprocessing, then missing values in any dataset affect model convergence.\nC. No dataset has missing values.\nD. All datasets require preprocessing.",
            "Is it true that some dataset’s missing values affect model convergence?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                1,
                2
            ],
            [
                1,
                3
            ]
        ],
        "explanation": [
            "If a dataset has missing values, it affects model convergence (premise 1). If a dataset requires preprocessing, missing values also affect convergence (premise 2). Thus, if all datasets require preprocessing, missing values in any dataset affect convergence, making option B true.",
            "There exists a dataset with missing values (premise 3), and missing values cause convergence issues (premise 1), so some dataset’s missing values affect model convergence."
        ]
    },
    {
        "premises-NL": [
            "If a function is differentiable, then it is continuous.",
            "There exists at least one function that is integrable.",
            "There exists at least one function that is differentiable.",
            "If a function is twice differentiable, then it is differentiable.",
            "All continuous functions satisfy the Intermediate Value Theorem.",
            "If a function is differentiable, then it is integrable.",
            "If a function is not continuous, then it is not differentiable.",
            "All differentiable functions satisfy the Mean Value Theorem.",
            "All polynomials are differentiable.",
            "There exists at least one polynomial function.",
            "There exists at least one continuous function.",
            "If a function is not differentiable, then it is not a polynomial.",
            "All integrable functions satisfy the Fundamental Theorem of Calculus.",
            "If all differentiable functions satisfy the Mean Value Theorem, then there exists at least one continuous function."
        ],
        "premises-FOL": [
            "ForAll(x, (Differentiable(x) → Continuous(x)))",
            "Exists(x, Integrable(x))",
            "Exists(x, Differentiable(x))",
            "ForAll(x, (TwiceDifferentiable(x) → Differentiable(x)))",
            "ForAll(x, (Continuous(x) → IVT(x)))",
            "ForAll(x, (Differentiable(x) → Integrable(x)))",
            "ForAll(x, (¬Continuous(x) → ¬Differentiable(x)))",
            "ForAll(x, (Differentiable(x) → MVT(x)))",
            "ForAll(x, (Polynomial(x) → Differentiable(x)))",
            "Exists(x, Polynomial(x))",
            "Exists(x, Continuous(x))",
            "ForAll(x, (¬Differentiable(x) → ¬Polynomial(x)))",
            "ForAll(x, (Integrable(x) → FTC(x)))",
            "((ForAll(x, (Differentiable(x) → MVT(x))) → Exists(x, Continuous(x))))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. There exists a function that is not differentiable.\nB. There exists a function that satisfies the Intermediate Value Theorem.\nC. All functions are integrable.\nD. There exists a function that is not continuous.",
            "Based on the above premises, is the statement true?\nStatement: Exists(x, Differentiable(x))"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                5,
                9,
                10
            ],
            [
                3
            ]
        ],
        "explanation": [
            "There exists a function that satisfies the Intermediate Value Theorem because there exists at least one polynomial function, all polynomials are differentiable, differentiable functions are continuous, and continuous functions satisfy the Intermediate Value Theorem.",
            "The statement is true because it is explicitly stated that there exists at least one differentiable function."
        ]
    },
    {
        "premises-NL": [
            "If a student does not complete a specific task, then that student is not a university student.",
            "There exists a student attending a specific course."
        ],
        "premises-FOL": [
            "∀x (Student(x) ∧ ¬CompletesTask(x) → ¬UniversityStudent(x))",
            "∃x (Student(x) ∧ AttendsCourse(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. If attending the course means task non-completion rules out university status, then some student attends the course.\nB. All students attending the course are university students.\nC. No student completes the task.\nD. Some students don’t attend the course.",
            "Is it true that some student attending the course completes the task?"
        ],
        "answers": [
            "A",
            "Uncertain"
        ],
        "idx": [
            [
                1,
                2
            ],
            []
        ],
        "explanation": [
            "Some student attends the course (premise 2). If not completing a task means a student isn’t a university student (premise 1), the existence of a course-attending student satisfies the implication, making option A true.",
            "While some student attends the course (premise 2) and task non-completion rules out university status (premise 1), there’s no information on whether any course-attending student completes the task, so the statement’s truth is uncertain."
        ]
    },
    {
        "premises-NL": [
            "All students are attending the course",
            "If x attends lectures regularly, then x passes the course",
            "There exists a student working on a project",
            "If there exists a student working on a project, then all students are attending the course",
            "There exists a student attending lectures regularly",
            "There exists a student completing assignments"
        ],
        "premises-FOL": [
            "ForAll(x, AttendsCourse(x))",
            "ForAll(x, (AttendsLecturesRegularly(x) → PassesCourse(x)))",
            "Exists(x, WorkingOnProject(x))",
            "(Exists(x, WorkingOnProject(x)) → ForAll(x, AttendsCourse(x)))",
            "Exists(x, AttendsLecturesRegularly(x))",
            "Exists(x, CompletingAssignments(x))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. There exists a student not attending the course.\nB. There exists a student who passes the course.\nC. All students attend lectures regularly.\nD. There exists a student not completing assignments.",
            "Based on the above premises, is the statement true?\nStatement: Exists(x, CompletingAssignments(x))"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                2,
                5
            ],
            [
                6
            ]
        ],
        "explanation": [
            "There exists a student who passes the course because at least one student attends lectures regularly, and attending lectures regularly implies passing the course.",
            "The statement is true because it is explicitly stated that there exists a student completing assignments."
        ]
    },
    {
        "premises-NL": [
            "All students can register BKA program if they did not register it last semester.",
            "OISP students are not allowed to delay the tutor fee.",
            "Students must either pay the tutor fee, delay it, or register for the BKA program.",
            "Frieren is an OISP student and she can't pay the tutor fee.",
            "Frieren did not register the BKA program last semester."
        ],
        "premises-FOL": [
            "ForAll(x, Student(x) ∧ ¬tBKALastSemester(x) → BKA(x))",
            "ForAll(x, OISP(x) → ¬DelayTutorFee(x))",
            "ForAll(x, Student(x) → (PayTutorFee(x) ∨ DelayTutorFee(x) ∨ BKA(x)))",
            "OISP(Frieren) ∧ ¬PayTutorFee(Frieren)",
            "¬tBKALastSemester(Frieren)"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. Frieren is required to pay the tutor fee.\nB. Frieren must register for the BKA program due to her status as an OISP student.\nC. Frieren can choose to delay the tutor fee.\nD. Frieren must register for the BKA program.",
            "Based on the above premises, is the statement true?\nStatement: Frieren must register for the BKA program."
        ],
        "answers": [
            "D",
            "Yes"
        ],
        "idx": [
            [
                1,
                2,
                3,
                4,
                5
            ],
            [
                2,
                4,
                5
            ]
        ],
        "explanation": [
            "Premise 4 states that Frieren, an OISP student, cannot pay the tutor fee, and premise 2 says OISP students cannot delay it. Premise 3 requires students to pay, delay, or register for BKA. Since Frieren can neither pay nor delay, she must register for BKA, making D correct.",
            "Premise 4 states Frieren cannot pay the tutor fee, and premise 2 states she cannot delay it as an OISP student. Premise 3 requires one of paying, delaying, or BKA registration. Thus, Frieren must register for BKA, making the statement true."
        ]
    },
    {
        "premises-NL": [
            "Students who absent the final exam will fail the course.",
            "Students must bring an ID or verification paper so that they will not be marked as absent.",
            "Students who bring an ID will not bring a verification paper.",
            "Sarifi didn't bring the ID but she did not fail."
        ],
        "premises-FOL": [
            "ForAll(x, Student(x) ∧ Absent(x) → Fail(x))",
            "ForAll(x, Student(x) → (BringID(x) ∨ BringPaper(x) → ¬Absent(x)))",
            "ForAll(x, BringID(x) → ¬BringPaper(x))",
            "¬BringID(Sarifi) ∧ ¬Fail(Sarifi)"
        ],
        "questions": [
            "Which can be inferred about Sarifi’s academic status?\nA. Sarifi failed due to absence.\nB. Sarifi didn’t fail and wasn’t absent.\nC. Sarifi failed despite bringing a paper.\nD. Sarifi was absent but didn’t fail.",
            "Did Sarifi avoid failing by not being absent?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                1,
                2,
                4
            ],
            [
                1,
                2,
                4
            ]
        ],
        "explanation": [
            "Premise 4 states Sarifi didn’t fail, and premise 1 implies she wasn’t absent. Premise 2, with premise 4’s no-ID condition, suggests she brought a verification paper, confirming she wasn’t absent and didn’t fail, making B the correct inference.",
            "Premise 4 states Sarifi didn’t fail, and premise 1 implies she wasn’t absent. Premise 2, with no ID from premise 4, indicates she brought a verification paper, ensuring she wasn’t absent, thus avoiding failure."
        ]
    },
    {
        "premises-NL": [
            "Study hard earn students knowledge.",
            "Having knowledge makes you do the exam well.",
            "If you do the exam well and do not help others, you will pass the course.",
            "If you do not have knowledge but got help from others, you will pass the course.",
            "Only if you have the knowledge can you help others.",
            "Mia did the exam well.",
            "Mia passed the course."
        ],
        "premises-FOL": [
            "ForAll(x, StudyHard(x) → HasKnowledge(x))",
            "ForAll(x, HasKnowledge(x) → DoesExamWell(x))",
            "ForAll(x, DoesExamWell(x) ∧ ¬HelpsOthers(x) → PassesCourse(x))",
            "ForAll(x, ¬HasKnowledge(x) ∧ ReceivedHelp(x) → PassesCourse(x))",
            "ForAll(x, HelpsOthers(x) → HasKnowledge(x))",
            "DoesExamWell(Mia)",
            "PassesCourse(Mia)"
        ],
        "questions": [
            "Which can be inferred about Mia’s preparation?\nA. Mia lacked knowledge.\nB. Mia received help from others.\nC. Mia did well due to knowledge.\nD. Mia didn’t study hard.",
            "Did Mia pass due to not helping others?"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                2,
                3,
                6
            ],
            [
                3,
                6
            ]
        ],
        "explanation": [
            "Premise 6 states Mia did well on the exam, premise 2 suggests doing well requires knowledge, and premise 3 confirms passing without helping others, implying Mia had knowledge, making C the correct inference.",
            "Premise 6 states Mia did well, and premise 3 says doing well without helping others leads to passing, which matches premise 7’s outcome, suggesting Mia passed without helping others."
        ]
    },
    {
        "premises-NL": [
            "Students who study hard gain knowledge.",
            "Having knowledge enables you to do well on the exam.",
            "If you do well on the exam and do not help others, you will pass the course.",
            "If you do not have knowledge but receive help from others, you will pass the course.",
            "You can only help others if you have knowledge.",
            "Mia did the exam well.",
            "Mia passed the course."
        ],
        "premises-FOL": [
            "ForAll(x, StudyHard(x) → HasKnowledge(x))",
            "ForAll(x, HasKnowledge(x) → DoesExamWell(x))",
            "ForAll(x, DoesExamWell(x) ∧ ¬HelpsOthers(x) → PassesCourse(x))",
            "ForAll(x, ¬HasKnowledge(x) ∧ ReceivedHelp(x) → PassesCourse(x))",
            "ForAll(x, HelpsOthers(x) → HasKnowledge(x))",
            "DoesExamWell(Mia)",
            "PassesCourse(Mia)"
        ],
        "questions": [
            "How did Mia pass the course?\nA. Mia lacked knowledge but got help.\nB. Mia studied hard.\nC. Mia helped others.\nD. Mia did well without helping others.",
            "Did Mia rely on her own performance to pass?"
        ],
        "answers": [
            "D",
            "Yes"
        ],
        "idx": [
            [
                3,
                5,
                6
            ],
            [
                3,
                6
            ]
        ],
        "explanation": [
            "Premise 6 states Mia did well on the exam, premise 3 says doing well without helping others leads to passing, and premise 5 suggests not helping is consistent with passing, explaining Mia’s success, making D the correct inference.",
            "Premise 6 states Mia did well, and premise 3 indicates that doing well without helping others leads to passing, suggesting Mia relied on her own performance rather than help from others."
        ]
    },
    {
        "premises-NL": [
            "Students who participate in many activities will gain enough labor days.",
            "Students must be a last-year student and gained enough labor days to do the graduation project.",
            "Only if a student has completed a graduation project can they graduate.",
            "A student who graduated is no longer a last-year student.",
            "Iruma is not a last-year student."
        ],
        "premises-FOL": [
            "ForAll(x, Participate_Many_Activities(x) → Gain_Labor_Days(x))",
            "ForAll(x, Last_Year_Student(x) ∧ Gain_Labor_Days(x) → Can_Do_Graduation_Project(x))",
            "ForAll(x, Graduate(x) → Complete_Graduation_Project(x))",
            "ForAll(x, Graduate(x) → ¬Last_Year_Student(x))",
            "¬Last_Year_Student(Iruma)"
        ],
        "questions": [
            "What can be inferred about Iruma’s academic progress?\nA. Iruma completed a graduation project.\nB. Iruma gained enough labor days.\nC. Iruma’s graduation status is uncertain.\nD. Iruma is eligible for the graduation project.",
            "Can Iruma do a graduation project?"
        ],
        "answers": [
            "C",
            "No"
        ],
        "idx": [
            [
                3,
                4,
                5
            ],
            [
                2,
                3,
                5
            ]
        ],
        "explanation": [
            "Premise 5 states Iruma is not a last-year student, premise 4 says graduates aren’t last-year students, and premise 3 links graduation to project completion, but Iruma’s graduation remains uncertain, making C the correct inference.",
            "Premise 5 states Iruma is not a last-year student, premise 2 requires last-year status for the graduation project, and premise 3 links graduation to project completion, but Iruma’s status prevents project eligibility."
        ]
    },
    {
        "premises-NL": [
            "Students absent on the presentation day will get an F for the assignment.",
            "Students who read scripts OR present too long will also get an F for the assignment.",
            "Those who do not get an F for the assignment will pass the course.",
            "Students who get an F for the assignment must redo the assignment.",
            "Students absent when redoing the assignment will fail the course.",
            "Students who read scripts AND present too long when redoing the assignment will fail the course.",
            "Students who redo the assignment but don’t fail will pass the course.",
            "Yashiro always presents too long, but she always attended the presentation day."
        ],
        "premises-FOL": [
            "ForAll(x, Absent_Presentation(x) → F_Assignment(x))",
            "ForAll(x, Read_Scripts(x) ∨ Present_Too_Long(x) → F_Assignment(x))",
            "ForAll(x, ¬F_Assignment(x) → Pass_Course(x))",
            "ForAll(x, F_Assignment(x) → Redo_Assignment(x))",
            "ForAll(x, Redo_Assignment(x) ∧ Absent(x) → Fail_Course(x))",
            "ForAll(x, Redo_Assignment(x) ∧ Read_Scripts(x) ∧ Present_Too_Long(x) → Fail_Course(x))",
            "ForAll(x, Redo_Assignment(x) ∧ ¬Fail_Course(x) → Pass_Course(x))",
            "Present_Too_Long(Yashiro) ∧ ¬Absent_Presentation(Yashiro)"
        ],
        "questions": [
            "Which statement can be inferred about Yashiro?\nA. Yashiro passed the course.\nB. Yashiro failed the course.\nC. Yashiro did not redo the assignment.\nD. It is uncertain whether Yashiro passed the course.",
            "Did Yashiro redo the assignment?"
        ],
        "answers": [
            "D",
            "Yes"
        ],
        "idx": [
            [
                2,
                4,
                8
            ],
            [
                2,
                4,
                8
            ]
        ],
        "explanation": [
            "Premise 8 states Yashiro presents too long, premise 2 says this leads to an F on the assignment, and premise 4 requires redoing the assignment. Since no further information determines the redo outcome, it is uncertain whether Yashiro passed, making D correct.",
            "Premise 8 states Yashiro presents too long, premise 2 indicates this results in an F on the assignment, and premise 4 mandates redoing the assignment, confirming Yashiro redid it."
        ]
    },
    {
        "premises-NL": [
            "Students who miss any quiz will fail the class.",
            "Students who score less than 50% on the final exam will fail the class.",
            "Students who complete all homework and attend every class will pass the final exam.",
            "Ponko completed all homework but missed one class.",
            "Students who fail the class must retake it next semester."
        ],
        "premises-FOL": [
            "ForAll(x, Miss_Quiz(x) → Fail_Class(x))",
            "ForAll(x, Score_Final(x) < 50 → Fail_Class(x))",
            "ForAll(x, Complete_Homework(x) ∧ Attend_All_Classes(x) → Pass_Final(x))",
            "Complete_Homework(Ponko) ∧ ¬Attend_All_Classes(Ponko)",
            "ForAll(x, Fail_Class(x) → Retake_Next_Semester(x))"
        ],
        "questions": [
            "What can be inferred about Ponko’s class status?\nA. Ponko passed the final exam.\nB. Ponko failed due to low exam score.\nC. Ponko’s failure depends on quiz attendance.\nD. Ponko failed due to missing a class.",
            "Will Ponko fail the class?"
        ],
        "answers": [
            "C",
            "No"
        ],
        "idx": [
            [
                1,
                3,
                4
            ],
            [
                1,
                2,
                4
            ]
        ],
        "explanation": [
            "Premise 4 states Ponko missed a class, premise 3 shows this prevents a guaranteed exam pass, and premise 1 indicates failure depends on quiz attendance, making C the correct inference.",
            "Premise 4 states Ponko missed a class, premise 3 shows no exam pass guarantee, and premises 1 and 2 tie failure to quizzes or exam score, but without that info, failure isn’t certain."
        ]
    },
    {
        "premises-NL": [
            "Students who come to the library to borrow books will gain books.",
            "Students who got a book and are hardworking will read them.",
            "Students who read books will gain knowledge.",
            "Students who have knowledge will pass the course.",
            "Dio comes to the library to borrow a book, and he passes the course."
        ],
        "premises-FOL": [
            "ForAll(x, Borrow_Books(x) → Got_Book(x))",
            "ForAll(x, Got_Book(x) ∧ Hardworking(x) → Read_Book(x))",
            "ForAll(x, Read_Book(x) → Gain_Knowledge(x))",
            "ForAll(x, Gain_Knowledge(x) → Pass_Course(x))",
            "Borrow_Books(Dio) ∧ Pass_Course(Dio)"
        ],
        "questions": [
            "Which statement can be inferred about Dio?\nA. Dio is not hardworking.\nB. Dio did not gain knowledge.\nC. Dio read books.\nD. It is uncertain whether Dio read books.",
            "Did Dio pass by reading books?"
        ],
        "answers": [
            "D",
            "No"
        ],
        "idx": [
            [
                1,
                2,
                5
            ],
            [
                1,
                2,
                5
            ]
        ],
        "explanation": [
            "Premise 5 states Dio borrowed a book and passed, premise 1 confirms he got a book, and premise 2 says reading requires hard work, which is not guaranteed, making it uncertain whether Dio read books, so D is correct.",
            "Premise 5 states Dio borrowed a book and passed, premise 1 confirms he got a book, but premise 2 requires hard work to read, which is uncertain, so passing via reading isn’t guaranteed."
        ]
    },
    {
        "premises-NL": [
            "Students who pass the final exam with a grade above 80 will qualify for a scholarship.",
            "A student who does not attend classes regularly cannot score above 80 on the final exam.",
            "Any student who is part of the basketball team must attend classes regularly to remain on the team.",
            "Students who remain on the basketball team all semester receive an athletic certificate.",
            "Rillance is part of the basketball team.",
            "Rillance received an athletic certificate.",
            "Rillance scored 85 on the final exam."
        ],
        "premises-FOL": [
            "ForAll(x, ScoreFinalExam(x) > 80 → QualifyScholarship(x))",
            "ForAll(x, ¬AttendRegularly(x) → ScoreFinalExam(x) ≤ 80)",
            "ForAll(x, BasketballTeam(x) → MustAttendRegularly(x))",
            "ForAll(x, RemainOnTeamAllSemester(x) → AthleticCertificate(x))",
            "BasketballTeam(Rillance)",
            "AthleticCertificate(Rillance)",
            "ScoreFinalExam(Rillance) = 85"
        ],
        "questions": [
            "What enabled Rillance to qualify for a scholarship?\nA. Rillance skipped classes.\nB. Rillance stayed on the basketball team.\nC. Rillance scored high without attending.\nD. Rillance got external help.",
            "Did Rillance’s basketball team status help qualify for a scholarship?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                2,
                3,
                5
            ],
            [
                2,
                3,
                7
            ]
        ],
        "explanation": [
            "Premise 7 shows Rillance scored 85, premise 2 implies regular attendance, and premise 3 links basketball team membership to attendance, suggesting team commitment enabled the score for scholarship, making B correct.",
            "Premise 7 shows Rillance scored 85, premise 2 requires attendance for high scores, and premise 3 ties basketball team status to attendance, indicating team status aided scholarship qualification."
        ]
    },
    {
        "premises-NL": [
            "All students are people.",
            "All teachers are people.",
            "All schools have students.",
            "Every student is enrolled in at least one school.",
            "If a person is a teacher, they work at a school.",
            "If a person works at a school, they contribute to education.",
            "Every student who attends a school has access to education.",
            "If a person has access to education, they can gain knowledge.",
            "If a person gains knowledge, they can apply it in life.",
            "If a person applies knowledge in life, they increase their opportunities.",
            "If a student increases their opportunities, they can achieve success.",
            "A teacher guides students in gaining knowledge.",
            "If a teacher guides a student, the student benefits from education.",
            "If a student benefits from education, they develop skills.",
            "If a person develops skills, they contribute to society."
        ],
        "premises-FOL": [
            "ForAll(x, Student(x) → Person(x))",
            "ForAll(x, Teacher(x) → Person(x))",
            "ForAll(x, School(x) → Exists(y, Student(y) ∧ EnrolledIn(y, x)))",
            "ForAll(x, Student(x) → Exists(y, School(y) ∧ EnrolledIn(x, y)))",
            "ForAll(x, Teacher(x) → Exists(y, School(y) ∧ WorksAt(x, y)))",
            "ForAll(x, WorksAt(x, y) → ContributesToEducation(x))",
            "ForAll(x, ForAll(y, EnrolledIn(x, y) ∧ School(y) → HasAccessToEducation(x)))",
            "ForAll(x, HasAccessToEducation(x) → GainsKnowledge(x))",
            "ForAll(x, GainsKnowledge(x) → CanApplyKnowledge(x))",
            "ForAll(x, CanApplyKnowledge(x) → IncreasesOpportunities(x))",
            "ForAll(x, IncreasesOpportunities(x) → CanAchieveSuccess(x))",
            "ForAll(x, ForAll(y, Teacher(x) ∧ Student(y) ∧ Guides(x, y) → HelpsGainKnowledge(y)))",
            "ForAll(x, HelpsGainKnowledge(x) → BenefitsFromEducation(x))",
            "ForAll(x, BenefitsFromEducation(x) → DevelopsSkills(x))",
            "ForAll(x, DevelopsSkills(x) → ContributesToSociety(x))"
        ],
        "questions": [
            "What can be inferred about students’ societal impact?\nA. No student develops skills.\nB. All students achieve success.\nC. Some student contributes to society.\nD. No student accesses education.",
            "Do students guided by teachers contribute to society?"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                4,
                7,
                12,
                13,
                14,
                15
            ],
            [
                4,
                12,
                13,
                14,
                15
            ]
        ],
        "explanation": [
            "Premise 4 ensures students are enrolled in schools, premise 7 grants access to education, and premises 12–15 show that a student guided by a teacher gains knowledge, benefits from education, develops skills, and contributes to society, making C correct.",
            "Premise 4 ensures student enrollment, and premises 12–15 show that students guided by teachers gain knowledge, benefit from education, develop skills, and contribute to society, confirming the statement."
        ]
    },
    {
        "premises-NL": [
            "Students who got F in Assignment will fail the course",
            "Do the Assignment incorrectly will get an F for the coding section",
            "If you do not do the Assignment by yourself, you won't gain experience",
            "If you don't have experience, you can't do the harmony",
            "If you can't do the harmony, you get F for Harmony section",
            "If Code section or Harmony section got an F, the whole assignment will get an F",
            "Ruri passed the course"
        ],
        "premises-FOL": [
            "ForAll(x, F_Assignment(x) → Fail_Course(x))",
            "ForAll(x, Incorrect_Assignment(x) → F_Coding(x))",
            "ForAll(x, ¬Do_By_Self(x) → ¬Experience(x))",
            "ForAll(x, ¬Experience(x) → ¬Can_Harmony(x))",
            "ForAll(x, ¬Can_Harmony(x) → F_Harmony(x))",
            "ForAll(x, F_Coding(x) ∨ F_Harmony(x) → F_Assignment(x))",
            "¬Fail_Course(Ruri)"
        ],
        "questions": [
            "Which statement can be inferred about Ruri?\nA. Ruri failed the assignment.\nB. Ruri did the assignment by herself.\nC. Ruri did not gain experience.\nD. It is uncertain whether Ruri did the assignment by herself.",
            "Did Ruri gain experience from the assignment?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                1,
                3,
                4,
                5,
                6,
                7
            ],
            [
                1,
                4,
                5,
                6,
                7
            ]
        ],
        "explanation": [
            "Premise 7 states Ruri passed, premise 1 implies no assignment F, premise 6 requires no coding or harmony F, premise 5 implies harmony ability, premise 4 implies experience, and premise 3 confirms Ruri did the assignment herself, making B correct.",
            "Premise 7 shows Ruri passed, premise 1 implies no assignment F, premise 6 requires no harmony F, premise 5 implies harmony ability, and premise 4 confirms Ruri gained experience."
        ]
    },
    {
        "premises-NL": [
            "If someone teaches a student, they must be a teacher.",
            "If someone is motivated by someone else, that person has motivation.",
            "If someone improves, they are motivated by someone.",
            "If a teacher shares knowledge with a student, the student gains experience.",
            "If a student learns, they improve.",
            "If a student gains experience, they learn.",
            "Every student is taught by at least one teacher.",
            "Ludwig teaches Mia.",
            "Ludwig is a teacher.",
            "Anyone who has knowledge can teach.",
            "Anyone who can teach shares knowledge.",
            "All teachers have knowledge.",
            "All teachers are people.",
            "All students are people.",
            "Mia is a student."
        ],
        "premises-FOL": [
            "ForAll(x, ForAll(y, Teaches(x, y) ∧ Student(y) → Teacher(x)))",
            "ForAll(x, ForAll(y, MotivatedBy(x, y) → HasMotivation(x)))",
            "ForAll(x, Improves(x) → Exists(y, MotivatedBy(x, y)))",
            "ForAll(x, ForAll(y, Teacher(x) ∧ Student(y) ∧ SharesKnowledge(x, y) → GainsExperience(y)))",
            "ForAll(x, Learns(x) → Improves(x))",
            "ForAll(x, GainsExperience(x) → Learns(x))",
            "ForAll(x, Student(x) → Exists(y, Teacher(y) ∧ Teaches(y, x)))",
            "Teaches(Ludwig, Mia)",
            "Teacher(Ludwig)",
            "ForAll(x, HasKnowledge(x) → CanTeach(x))",
            "ForAll(x, CanTeach(x) → Exists(y, SharesKnowledge(x, y)))",
            "ForAll(x, Teacher(x) → HasKnowledge(x))",
            "ForAll(x, Teacher(x) → Person(x))",
            "ForAll(x, Student(x) → Person(x))",
            "Student(Mia)"
        ],
        "questions": [
            "What can be inferred about students taught by teachers?\nA. They don’t learn.\nB. Some have motivation.\nC. They don’t improve.\nD. They lack experience.",
            "Does Mia have motivation?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                2,
                3,
                5,
                6,
                8,
                15
            ],
            [
                2,
                3,
                5,
                6,
                8,
                15
            ]
        ],
        "explanation": [
            "Premise 8 shows Ludwig teaches Mia, premise 15 confirms Mia is a student, premise 4 suggests knowledge-sharing leads to experience, premise 6 to learning, premise 5 to improvement, premise 3 to motivation by someone, and premise 2 to Mia having motivation, indicating some students have motivation, making B correct.",
            "Premise 8 shows Ludwig teaches Mia, premise 15 confirms her student status, premise 4 implies experience from knowledge-sharing, premise 6 leads to learning, premise 5 to improvement, premise 3 to motivation by someone, and premise 2 confirms Mia has motivation."
        ]
    },
    {
        "premises-NL": [
            "All students are people.",
            "All teachers are people.",
            "Every student attends at least one school.",
            "Every school provides education.",
            "If a person receives education, they gain knowledge.",
            "If a person gains knowledge, they can develop critical thinking skills.",
            "If a person develops critical thinking skills, they make better decisions.",
            "Teachers are responsible for delivering education.",
            "If a teacher delivers education, their students gain knowledge.",
            "If students gain knowledge, they can use it to solve problems.",
            "If students can solve problems, they can improve their communities.",
            "If someone improves their community, they contribute to society.",
            "If a person contributes to society, they can inspire others.",
            "If someone inspires others, they have a meaningful impact.",
            "A meaningful impact leads to long-term change.",
            "Some students prefer online learning.",
            "Libraries have a large collection of books.",
            "People enjoy watching movies in their free time."
        ],
        "premises-FOL": [
            "ForAll(x, Student(x) → Person(x))",
            "ForAll(x, Teacher(x) → Person(x))",
            "ForAll(x, Student(x) → Exists(y, School(y) ∧ Attends(x, y)))",
            "ForAll(x, School(x) → ProvidesEducation(x))",
            "ForAll(x, ReceivesEducation(x) → GainsKnowledge(x))",
            "ForAll(x, GainsKnowledge(x) → DevelopsCriticalThinking(x))",
            "ForAll(x, DevelopsCriticalThinking(x) → MakesBetterDecisions(x))",
            "ForAll(x, Teacher(x) → DeliversEducation(x))",
            "ForAll(x, ForAll(y, DeliversEducation(y) ∧ Student(x) → GainsKnowledge(x)))",
            "ForAll(x, GainsKnowledge(x) → CanSolveProblems(x))",
            "ForAll(x, CanSolveProblems(x) → ImprovesCommunity(x))",
            "ForAll(x, ImprovesCommunity(x) → ContributesToSociety(x))",
            "ForAll(x, ContributesToSociety(x) → InspiresOthers(x))",
            "ForAll(x, InspiresOthers(x) → HasMeaningfulImpact(x))",
            "ForAll(x, HasMeaningfulImpact(x) → CreatesLongTermChange(x))",
            "Exists(x, Student(x) ∧ PrefersOnlineLearning(x))",
            "Exists(x, Library(x) ∧ HasManyBooks(x))",
            "Exists(x, Person(x) ∧ EnjoysMovies(x))"
        ],
        "questions": [
            "What do students gain from attending school?\nA. Knowledge.\nB. No skills.\nC. Movies.\nD. Certificates.",
            "Do all students gain knowledge?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                3,
                4,
                5
            ],
            [
                3,
                4,
                5
            ]
        ],
        "explanation": [
            "Premise 3 states every student attends a school, premise 4 says schools provide education, and premise 5 says receiving education leads to gaining knowledge, indicating students gain knowledge, making A correct.",
            "Premise 3 ensures students attend schools, premise 4 confirms schools provide education, and premise 5 links education to knowledge, so all students gain knowledge."
        ]
    },
    {
        "premises-NL": [
            "All students are people.",
            "All teachers are people.",
            "Every student attends at least one school.",
            "Every school provides education.",
            "If a person receives education, they gain knowledge.",
            "If a person gains knowledge, they can develop critical thinking skills.",
            "If a person develops critical thinking skills, they make better decisions.",
            "Teachers are responsible for delivering education.",
            "If a teacher delivers education, their students gain knowledge.",
            "If students gain knowledge, they can use it to solve problems.",
            "If students can solve problems, they can improve their communities.",
            "If someone improves their community, they contribute to society.",
            "If a person contributes to society, they can inspire others.",
            "If someone inspires others, they have a meaningful impact.",
            "A meaningful impact leads to long-term change.",
            "Some students are interested in sports.",
            "Many people like to travel during holidays.",
            "Some animals can recognize their own reflection in a mirror."
        ],
        "premises-FOL": [
            "ForAll(x, Student(x) → Person(x))",
            "ForAll(x, Teacher(x) → Person(x))",
            "ForAll(x, Student(x) → Exists(y, School(y) ∧ Attends(x, y)))",
            "ForAll(x, School(x) → ProvidesEducation(x))",
            "ForAll(x, ReceivesEducation(x) → GainsKnowledge(x))",
            "ForAll(x, GainsKnowledge(x) → DevelopsCriticalThinking(x))",
            "ForAll(x, DevelopsCriticalThinking(x) → MakesBetterDecisions(x))",
            "ForAll(x, Teacher(x) → DeliversEducation(x))",
            "ForAll(x, ForAll(y, DeliversEducation(y) ∧ Student(x) → GainsKnowledge(x)))",
            "ForAll(x, GainsKnowledge(x) → CanSolveProblems(x))",
            "ForAll(x, CanSolveProblems(x) → ImprovesCommunity(x))",
            "ForAll(x, ImprovesCommunity(x) → ContributesToSociety(x))",
            "ForAll(x, ContributesToSociety(x) → InspiresOthers(x))",
            "ForAll(x, InspiresOthers(x) → HasMeaningfulImpact(x))",
            "ForAll(x, HasMeaningfulImpact(x) → CreatesLongTermChange(x))",
            "Exists(x, Student(x) ∧ InterestedInSports(x))",
            "Exists(x, Person(x) ∧ LikesToTravel(x))",
            "Exists(x, Animal(x) ∧ RecognizesMirrorReflection(x))"
        ],
        "questions": [
            "What follows from students attending school?\nA. Some like sports.\nB. All gain knowledge.\nC. None solve problems.\nD. Some skip education.",
            "Do students contribute to society?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                3,
                4,
                5
            ],
            [
                3,
                4,
                5,
                10,
                11,
                12
            ]
        ],
        "explanation": [
            "Premise 3 states students attend schools, premise 4 says schools provide education, and premise 5 links education to knowledge, so all students gain knowledge, making B correct.",
            "Premise 3 ensures students attend schools, premise 4 confirms education provision, premise 5 leads to knowledge, premise 10 to problem-solving, premise 11 to community improvement, and premise 12 to societal contribution, confirming students contribute to society."
        ]
    },
    {
        "premises-NL": [
            "Machine learning is a subset of artificial intelligence where computers learn from data.",
            "In supervised learning, models are trained on labeled data to predict outputs from inputs.",
            "In unsupervised learning, models are trained on unlabeled data to find patterns or groupings.",
            "In reinforcement learning, an agent learns by interacting with an environment and receiving feedback.",
            "Machine learning models can be classified into regression, classification, clustering, and reinforcement models.",
            "A regression model predicts a continuous output based on input features.",
            "A classification model predicts discrete labels or categories based on input features.",
            "Clustering models group similar data points together based on input features.",
            "Overfitting occurs when a model learns the training data too well, capturing noise and patterns that do not generalize to new data.",
            "Underfitting occurs when a model is too simple and cannot capture the underlying patterns in the data.",
            "Cross-validation is used to assess the performance of a machine learning model by partitioning the data into subsets for training and testing.",
            "Gradient descent is a popular optimization algorithm used in machine learning to minimize a loss function."
        ],
        "premises-FOL": [
            "ForAll(x, MachineLearning(x) → SubsetOfArtificialIntelligence(x))",
            "ForAll(x, SupervisedLearning(x) → TrainedOnLabeledData(x))",
            "ForAll(x, UnsupervisedLearning(x) → TrainedOnUnlabeledData(x))",
            "ForAll(x, ReinforcementLearning(x) → LearnsFromEnvironmentFeedback(x))",
            "ForAll(x, MLModel(x) → (Regression(x) ∨ Classification(x) ∨ Clustering(x) ∨ Reinforcement(x)))",
            "ForAll(x, RegressionModel(x) → PredictsContinuousOutput(x))",
            "ForAll(x, ClassificationModel(x) → PredictsDiscreteLabels(x))",
            "ForAll(x, ClusteringModel(x) → GroupsSimilarDataPoints(x))",
            "ForAll(x, Overfitting(x) → LearnsTrainingDataTooWell(x))",
            "ForAll(x, Underfitting(x) → CannotCapturePatterns(x))",
            "ForAll(x, CrossValidation(x) → AssessesPerformance(x))",
            "ForAll(x, GradientDescent(x) → MinimizesLossFunction(x))"
        ],
        "questions": [
            "What affects model performance?\nA. Overfitting captures noise.\nB. Clustering predicts outputs.\nC. Underfitting enhances generalization.\nD. Regression groups data.",
            "How do supervised learning models function?"
        ],
        "answers": [
            "A",
            "They predict outputs from labeled data."
        ],
        "idx": [
            [
                6,
                8,
                9,
                10
            ],
            [
                2,
                5,
                6,
                7
            ]
        ],
        "explanation": [
            "Premise 9 states overfitting involves learning training data too well, capturing noise; premise 10 says underfitting fails to capture patterns; premise 8 confirms clustering groups data, not predicts; and premise 6 says regression predicts continuous outputs, so overfitting affects performance negatively, making A correct.",
            "Premise 2 states supervised learning uses labeled data, premise 5 classifies models, premise 6 says regression predicts continuous outputs, and premise 7 says classification predicts discrete labels, confirming supervised models predict outputs from labeled data."
        ]
    },
    {
        "premises-NL": [
            "SQL is a standard programming language used for managing relational databases.",
            "A relational database consists of tables, each containing rows and columns.",
            "SQL queries are used to interact with databases and perform operations such as retrieving, inserting, updating, and deleting data.",
            "The SELECT statement is used to query and retrieve data from one or more tables.",
            "The WHERE clause is used in SQL to filter records based on specific conditions.",
            "The INSERT INTO statement is used to add new rows of data to a table.",
            "The UPDATE statement is used to modify existing records in a table.",
            "The DELETE statement is used to remove records from a table.",
            "The JOIN operation is used to combine data from two or more tables based on a related column.",
            "The PRIMARY KEY constraint uniquely identifies each record in a table.",
            "The FOREIGN KEY constraint ensures the integrity of the relationship between tables.",
            "The GROUP BY clause is used to group rows that have the same values into summary rows, such as totals.",
            "The ORDER BY clause is used to sort the result set in ascending or descending order.",
            "An index in SQL is used to improve the speed of data retrieval operations."
        ],
        "premises-FOL": [
            "ForAll(x, SQL(x) → UsedForManagingRelationalDatabases(x))",
            "ForAll(x, RelationalDatabase(x) → ConsistsOfTables(x))",
            "ForAll(x, SQLQuery(x) → (RetrieveData(x) ∨ InsertData(x) ∨ UpdateData(x) ∨ DeleteData(x)))",
            "ForAll(x, SelectStatement(x) → QueryData(x))",
            "ForAll(x, WhereClause(x) → FiltersRecords(x))",
            "ForAll(x, InsertInto(x) → AddRowsToTable(x))",
            "ForAll(x, UpdateStatement(x) → ModifyRecords(x))",
            "ForAll(x, DeleteStatement(x) → RemoveRecords(x))",
            "ForAll(x, ForAll(y, Join(x, y) → CombineData(x, y)))",
            "ForAll(x, PrimaryKey(x) → UniquelyIdentifiesRecord(x))",
            "ForAll(x, ForeignKey(x) → EnsuresDataIntegrity(x))",
            "ForAll(x, GroupBy(x) → GroupRows(x))",
            "ForAll(x, OrderBy(x) → SortResultSet(x))",
            "ForAll(x, Index(x) → ImprovesDataRetrievalSpeed(x))"
        ],
        "questions": [
            "What optimizes SQL query performance?\nA. Indexes speed up retrieval.\nB. DELETE adds records.\nC. PRIMARY KEY groups rows.\nD. INSERT sorts data.",
            "What does the GROUP BY clause achieve in SQL queries?"
        ],
        "answers": [
            "A",
            "It groups rows for summaries."
        ],
        "idx": [
            [
                6,
                8,
                10,
                14
            ],
            [
                3,
                4,
                12
            ]
        ],
        "explanation": [
            "Premise 14 states indexes improve data retrieval speed, premise 8 confirms DELETE removes records, premise 10 says PRIMARY KEY identifies records, and premise 6 says INSERT adds rows, so indexes optimize performance, making A correct.",
            "Premise 12 states GROUP BY groups rows, premise 3 indicates SQL queries include retrieval, and premise 4 links SELECT to querying, confirming GROUP BY groups rows for summaries in queries."
        ]
    },
    {
        "premises-NL": [
            "For all students, they possess the fundamental knowledge of the subject.",
            "If a student understands the core concepts, they are able to apply those concepts in practice.",
            "If a student can apply concepts, they are likely to succeed in assessments.",
            "If a student does not succeed in assessments, it indicates that they lack understanding of the core concepts.",
            "If a student attends all classes, they are likely to gain a better understanding of the subject.",
            "If a student fails to apply the core concepts, they may struggle with the subject matter.",
            "If a student misses classes, they might not understand key concepts, leading to failure in assessments.",
            "If a student does not complete their coursework, it suggests they are not engaging with the learning process.",
            "Attending all classes ensures that students receive the full scope of education in the subject.",
            "There exists at least one student who understands the core concepts of the subject.",
            "If a student does not understand the subject, they are unlikely to complete the coursework successfully.",
            "All students possess the necessary understanding to succeed in assessments.",
            "If a student engages in self-directed study, they will be more likely to succeed in assessments.",
            "If a student engages in extracurricular activities, it will support their understanding of the subject.",
            "If a student is able to engage in the learning process, they will succeed academically."
        ],
        "premises-FOL": [
            "ForAll(x, PossessesFundamentalKnowledge(x))",
            "ForAll(x, (UnderstandsCoreConcepts(x) → AppliesConcepts(x)))",
            "ForAll(x, (AppliesConcepts(x) → SucceedsInAssessments(x)))",
            "ForAll(x, (¬SucceedsInAssessments(x) → ¬UnderstandsCoreConcepts(x)))",
            "ForAll(x, (AttendsAllClasses(x) → UnderstandsCoreConcepts(x)))",
            "ForAll(x, (¬AppliesConcepts(x) → StrugglesWithSubject(x)))",
            "ForAll(x, (¬AttendsAllClasses(x) → (¬UnderstandsCoreConcepts(x) ∧ ¬SucceedsInAssessments(x))))",
            "ForAll(x, (¬CompletesCoursework(x) → ¬EngagesInLearningProcess(x)))",
            "ForAll(x, (AttendsAllClasses(x) → EngagesInLearningProcess(x)))",
            "Exists(x, UnderstandsCoreConcepts(x))",
            "ForAll(x, (¬UnderstandsCoreConcepts(x) → ¬CompletesCoursework(x)))",
            "ForAll(x, SucceedsInAssessments(x))",
            "ForAll(x, (EngagesInSelfDirectedStudy(x) → SucceedsInAssessments(x)))",
            "ForAll(x, (EngagesInExtracurricularActivities(x) → UnderstandsCoreConcepts(x)))",
            "ForAll(x, (EngagesInLearningProcess(x) → SucceedsInAssessments(x)))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. If a student cannot apply concepts, they cannot engage in the learning process.\nB. If a student does not engage, they do not understand the core concepts.\nC. All students apply concepts.\nD. There exists a student who does not apply concepts but engages in the learning process.",
            "Based on the above premises, is the following statement true?\nStatement: ForAll(x, (¬EngagesInLearningProcess(x) → ¬SucceedsInAssessments(x)))"
        ],
        "answers": [
            "D",
            "Yes"
        ],
        "idx": [
            [
                9
            ],
            [
                12
            ]
        ],
        "explanation": [
            "There exists a student who does not apply concepts but engages in the learning process because attending all classes ensures engagement, and no premise mandates that all students must apply concepts to engage.",
            "The statement is true because all students succeed in assessments, making the implication that not engaging leads to struggling with assessments true by default, as the consequent is always false."
        ]
    },
    {
        "premises-NL": [
            "There exists at least one student who excels in assessments.",
            "If a student cannot apply knowledge, they will struggle with learning new concepts."
        ],
        "premises-FOL": [
            "∃x (Student(x) ∧ ExcelsInAssessments(x))",
            "∀x (Student(x) ∧ ¬AppliesKnowledge(x) → ¬UnderstandsNewConcepts(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. If not applying knowledge means struggling with new concepts, then some student excels in assessments.\nB. All students apply knowledge.\nC. No student excels in assessments.\nD. Some students don’t understand new concepts.",
            "Is it true that some student who excels in assessments applies knowledge?"
        ],
        "answers": [
            "A",
            "Uncertain"
        ],
        "idx": [
            [
                1,
                2
            ],
            []
        ],
        "explanation": [
            "There exists a student who excels in assessments (premise 1). Whether not applying knowledge leads to struggling with new concepts (premise 2) doesn’t change this fact, so the implication holds, making option A true.",
            "Some student excels in assessments (premise 1), and not applying knowledge may hinder learning new concepts (premise 2), but there’s no information on whether excelling students apply knowledge, so the statement’s truth is uncertain."
        ]
    },
    {
        "premises-NL": [
            "If a student is not meeting the academic standards, they will not progress in their studies.",
            "All students are expected to adhere to the academic code of conduct outlined by the school law."
        ],
        "premises-FOL": [
            "∀x (Student(x) ∧ ¬MeetsStandards(x) → ¬ProgressesStudies(x))",
            "∀x (Student(x) → AdheresConduct(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. If all students follow the conduct code, then meeting standards means progressing in studies.\nB. Some students don’t meet academic standards.\nC. All students progress in their studies.\nD. No student adheres to the conduct code.",
            "Is it true that some student meets academic standards?"
        ],
        "answers": [
            "A",
            "Uncertain"
        ],
        "idx": [
            [
                1,
                2
            ],
            []
        ],
        "explanation": [
            "If a student doesn’t meet academic standards, they don’t progress in their studies (premise 1). All students follow the conduct code (premise 2). Thus, if all adhere to the code, meeting standards ensures progress, making option A true.",
            "While failing to meet standards prevents progress (premise 1) and all students follow the conduct code (premise 2), there’s no information on whether any student meets academic standards, so the statement’s truth is uncertain."
        ]
    },
    {
        "premises-NL": [
            "There exists at least one student who has demonstrated mastery of the subject.",
            "If a student does not meet the requirements for passing, they cannot move forward in the curriculum.",
            "All students are engaged in active learning sessions within the classroom.",
            "At least one student is participating in the current course or class.",
            "All students have the same baseline knowledge required to succeed in the subject.",
            "At least one student has a solid understanding of the core concepts.",
            "If a student fails to meet the required standards, they will not be able to apply the knowledge in real-world scenarios.",
            "All students are proficient in the core skills necessary for academic success.",
            "All students are expected to follow the school’s code of conduct.",
            "If a student has the ability to apply their knowledge in real-world contexts, they will succeed in advanced coursework.",
            "At least one student is actively participating in the course activities.",
            "If a student does not meet the academic standards, they will not be able to advance in their education.",
            "If a student has the skills necessary to apply what they've learned, they will succeed in future coursework.",
            "If a student fails to meet expectations, they cannot pursue additional academic opportunities or specialized subjects.",
            "For students who meet all educational requirements, further educational opportunities will be available."
        ],
        "premises-FOL": [
            "∃x P(x)",
            "∀x (¬Q(x) → ¬R(x))",
            "∀x T(x)",
            "∃x T(x)",
            "∀x Q(x)",
            "∃x Q(x)",
            "∀x (¬R(x) → ¬U(x))",
            "∀x P(x)",
            "∀x S(x)",
            "∀x (U(x) → R(x))",
            "∃x T(x)",
            "∀x (¬Q(x) → ¬R(x))",
            "∀x (U(x) → R(x))",
            "∀x (¬U(x) → ¬P(x))",
            "∀x R(x)"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. ∀x (U(x) → R(x))\nB. ¬∀x (R(x) → U(x))\nC. ∀x (Q(x) → R(x))\nD. ¬∀x (U(x) → R(x))",
            "Based on the above premises, is the following statement true?\nStatement: If a student does not meet academic standards, they will not be able to advance to further educational opportunities."
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                7,
                10
            ],
            [
                2
            ]
        ],
        "explanation": [
            "The statement that if a student can apply knowledge in real-world contexts, they succeed in advanced coursework follows because applying knowledge implies advancing in education (premise 10), and not advancing implies not applying knowledge (premise 7).",
            "The statement that if a student does not meet academic standards, they will not advance to further educational opportunities is true because it is explicitly stated (premise 2)."
        ]
    },
    {
        "premises-NL": [
            "If a student successfully completes a prerequisite course, they are eligible to enroll in the next level course.",
            "If a student demonstrates competence in one subject, they are qualified to advance to a more challenging subject.",
            "All students enrolled in the course are actively engaging in the learning material.",
            "At least one student has enrolled in the prerequisite course.",
            "If a student passes the final exam, they are considered to have mastered the course content.",
            "If a student does not demonstrate mastery, they are not considered to have passed the course.",
            "If a student does not meet the course prerequisites, they cannot take the final exam.",
            "All students are expected to complete the assigned coursework on time.",
            "All students are required to complete assignments in accordance with the syllabus.",
            "If a student demonstrates mastery of the course material, they will be recommended for advanced coursework.",
            "If a student passes a course, they are eligible to move on to the next subject.",
            "If a student fails to meet the prerequisites, they cannot take more advanced courses.",
            "If a student fails to meet the course requirements, they will not be eligible for further academic opportunities.",
            "If a student has demonstrated understanding of the core principles, they are encouraged to pursue further academic challenges.",
            "For students who have mastered the necessary content, additional learning opportunities will be provided."
        ],
        "premises-FOL": [
            "∀x (U(x) → S(x))",
            "∀x (U(x) → S(x))",
            "∀x T(x)",
            "∃x U(x)",
            "∀x (P(x) → R(x))",
            "∀x (¬R(x) → ¬P(x))",
            "∀x (¬T(x) → ¬P(x))",
            "∀x Q(x)",
            "∀x Q(x)",
            "∀x (R(x) → S(x))",
            "∀x (P(x) → S(x))",
            "∀x (¬T(x) → ¬S(x))",
            "∀x (¬Q(x) → ¬S(x))",
            "∀x (R(x) → S(x))",
            "∀x (R(x) → S(x))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. ∀x (U(x) → S(x))\nB. ¬∀x (U(x) → S(x))\nC. ∀x (¬P(x) → ¬S(x))\nD. ∀x (S(x) → ¬P(x))",
            "Based on the above premises, is the following statement true?\nStatement: If a student demonstrates competence in one subject, they are qualified to advance to a more challenging subject."
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1
            ],
            [
                1
            ]
        ],
        "explanation": [
            "The statement that if a student completes a prerequisite course, they are eligible for advanced coursework is true because it is explicitly stated (premise 1).",
            "The statement that if a student demonstrates competence, they are qualified to advance is true because it is explicitly stated (premise 1)."
        ]
    },
    {
        "premises-NL": [
            "If a student fails the final project, they will not pass the course.",
            "If a student does not attend at least 80% of the lectures, they will not be eligible for the final project.",
            "If a student fails the midterm exam, they will not be eligible for extra credit."
        ],
        "premises-FOL": [
            "∀x (Student(x) ∧ FailsFinalProject(x) → ¬PassCourse(x))",
            "∀x (Student(x) ∧ ¬AttendsLectures80Percent(x) → ¬EligibleForFinalProject(x))",
            "∀x (Student(x) ∧ FailsMidterm(x) → ¬EligibleForExtraCredit(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. If a student doesn’t attend at least 80% of lectures, they won’t pass the course.\nB. Some students fail the final project but pass the course.\nC. All students attend 80% of lectures.\nD. No student fails the final project.",
            "Is it true that some student who fails the midterm passes the course?"
        ],
        "answers": [
            "A",
            "Uncertain"
        ],
        "idx": [
            [
                1,
                2
            ],
            []
        ],
        "explanation": [
            "If a student doesn’t attend at least 80% of lectures, they’re not eligible for the final project (premise 2). Failing the final project means they won’t pass the course (premise 1). Thus, low attendance leads to not passing, making option A true.",
            "Failing the midterm prevents extra credit eligibility (premise 3), and failing the final project prevents passing (premise 1), but there’s no information on whether a student who fails the midterm can pass the course, so the statement’s truth is uncertain."
        ]
    },
    {
        "premises-NL": [
            "If a student completes all the required assignments on time and attends at least 80% of the lectures, they will be eligible for the final project.",
            "If a student fails the final project, they will not pass the course and will lose eligibility for scholarships.",
            "If a student fails the midterm exam, they will not be eligible for extra credit."
        ],
        "premises-FOL": [
            "∀x (Student(x) ∧ SubmitsAllAssignmentsOnTime(x) ∧ AttendsLectures80Percent(x) → EligibleForFinalProject(x))",
            "∀x (Student(x) ∧ FailsFinalProject(x) → (¬PassCourse(x) ∧ ¬EligibleForScholarship(x)))",
            "∀x (Student(x) ∧ FailsMidterm(x) → ¬EligibleForExtraCredit(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. If a student doesn’t attend at least 80% of lectures, they can’t be eligible for scholarships.\nB. Some students fail the final project but get scholarships.\nC. All students attend 80% of lectures.\nD. No student fails the midterm exam.",
            "Is it true that some student who fails the midterm is eligible for scholarships?"
        ],
        "answers": [
            "A",
            "Uncertain"
        ],
        "idx": [
            [
                1,
                2
            ],
            []
        ],
        "explanation": [
            "If a student doesn’t attend at least 80% of lectures, they’re not eligible for the final project (premise 1). Failing the final project means they lose scholarship eligibility (premise 2). Thus, low attendance prevents scholarship eligibility, making option A true.",
            "Failing the midterm prevents extra credit eligibility (premise 3), and failing the final project prevents scholarship eligibility (premise 2), but there’s no information on whether a student who fails the midterm can remain eligible for scholarships, so the statement’s truth is uncertain."
        ]
    },
    {
        "premises-NL": [
            "If a student successfully completes a prerequisite course, they are eligible to enroll in the next level course.",
            "If a student demonstrates competence in one subject, they are qualified to advance to a more challenging subject.",
            "All students enrolled in the course are actively engaging in the learning material.",
            "At least one student has enrolled in the prerequisite course.",
            "If a student passes the final exam, they are considered to have mastered the course content.",
            "If a student does not demonstrate mastery, they are not considered to have passed the course.",
            "If a student does not meet the course prerequisites, they cannot take the final exam.",
            "All students are expected to complete the assigned coursework on time.",
            "All students are required to complete assignments in accordance with the syllabus.",
            "If a student demonstrates mastery of the course material, they will be recommended for advanced coursework.",
            "If a student passes a course, they are eligible to move on to the next subject.",
            "If a student fails to meet the prerequisites, they cannot take more advanced courses.",
            "If a student fails to meet the course requirements, they will not be eligible for further academic opportunities.",
            "If a student has demonstrated understanding of the core principles, they are encouraged to pursue further academic challenges.",
            "For students who have mastered the necessary content, additional learning opportunities will be provided."
        ],
        "premises-FOL": [
            "∀x (U(x) → S(x))",
            "∀x (U(x) → S(x))",
            "∀x T(x)",
            "∃x U(x)",
            "∀x (P(x) → R(x))",
            "∀x (¬R(x) → ¬P(x))",
            "∀x (¬T(x) → ¬P(x))",
            "∀x Q(x)",
            "∀x Q(x)",
            "∀x (R(x) → S(x))",
            "∀x (P(x) → S(x))",
            "∀x (¬T(x) → ¬S(x))",
            "∀x (¬Q(x) → ¬S(x))",
            "∀x (R(x) → S(x))",
            "∀x (R(x) → S(x))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. ∀x (P(x) → S(x))\nB. ¬∀x (P(x) → S(x))\nC. ∀x (P(x) → ¬S(x))\nD. ∀x (S(x) → ¬P(x))",
            "Based on the above premises, is the following statement true?\nStatement: If a student demonstrates competence in one subject, they are qualified to advance to a more challenging subject."
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                11
            ],
            [
                1
            ]
        ],
        "explanation": [
            "The statement that if a student passes a course, they are eligible for advanced coursework is true because it is explicitly stated (premise 11).",
            "The statement that if a student demonstrates competence, they are qualified to advance is true because it is explicitly stated (premise 1)."
        ]
    },
    {
        "premises-NL": [
            "If an event is advertised to the university community, it informs participants.",
            "If an event has scheduling conflicts, it cannot maximize attendance.",
            "If an event informs participants and has no scheduling conflicts, it attracts participants."
        ],
        "premises-FOL": [
            "∀x (Event(x) ∧ AdvertisesEvent(x) → InformsParticipants(x))",
            "∀x (Event(x) ∧ ¬NoConflicts(x) → ¬MaximizesAttendance(x))",
            "∀x (Event(x) ∧ InformsParticipants(x) ∧ NoConflicts(x) → AttractsParticipants(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. If an event is advertised, it attracts participants if it has no scheduling conflicts.\nB. All events maximize attendance.\nC. Some events are not advertised.\nD. No event attracts participants.",
            "Is it true that an event with scheduling conflicts fails to maximize attendance?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1,
                3
            ],
            [
                2
            ]
        ],
        "explanation": [
            "Advertising an event informs participants (premise 1). If the event also has no scheduling conflicts, it attracts participants (premise 3). Thus, an advertised event with no conflicts attracts participants, making option A true.",
            "An event with scheduling conflicts cannot maximize attendance (premise 2), so the statement is true."
        ]
    },
    {
        "premises-NL": [
            "Every student in the course is participating in the training session.",
            "If a student attends the seminar, they will be eligible for the certification.",
            "If a student attends the seminar, they will be able to complete the course successfully.",
            "Every student is registered for the course.",
            "If a student attends the seminar, they will have the necessary knowledge to pass the course.",
            "If a student does not attend the seminar, they will not be able to complete the course.",
            "If a student does not submit the required assignments, they will not pass the course.",
            "There exists a student who has submitted their assignments.",
            "If a student does not complete the assignments on time, they will not pass the course.",
            "There exists a student who attended the seminar.",
            "There exists a student who passed the course.",
            "If a student does not attend the seminar, they will not be eligible for the certification.",
            "If a student has attended the seminar, they will be able to pass the course with certification."
        ],
        "premises-FOL": [
            "∀x T(x)",
            "∀x (R(x) → Q(x))",
            "∀x (R(x) → S(x))",
            "∀x T(x)",
            "∀x (R(x) → U(x))",
            "∀x (¬R(x) → ¬S(x))",
            "∀x (¬P(x) → ¬U(x))",
            "∃x P(x)",
            "∀x (¬P(x) → ¬U(x))",
            "∃x R(x)",
            "∃x U(x)",
            "∀x (¬R(x) → ¬Q(x))",
            "∀x (R(x) → (U(x) ∧ Q(x)))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. ∀x (R(x) → S(x))\nB. ¬∀x (R(x) → S(x))\nC. ∀x (R(x) → ¬S(x))\nD. ∀x (S(x) → ¬R(x))",
            "Based on the above premises, is the statement true?\nStatement: ∃x T(x) → ∀x T(x)"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                3
            ],
            [
                1
            ]
        ],
        "explanation": [
            "The statement that if a student attends the seminar, they complete the course successfully is true because it is explicitly stated (premise 3).",
            "The statement that if there exists a student participating in the course, then all students are participating is true because all students are participating (premise 1)."
        ]
    },
    {
        "premises-NL": [
            "If a student uses efficient sorting algorithms, they achieve better performance.",
            "If a student understands recursion, they can break problems into smaller parts."
        ],
        "premises-FOL": [
            "∀x (Student(x) ∧ UsesEfficientSorting(x) → BetterPerformance(x))",
            "∀x (Student(x) ∧ UnderstandsRecursion(x) → BreaksProblemIntoSmallerParts(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. If a student masters efficient sorting algorithms, they can solve ordering problems effectively.\nB. All students understand recursion.\nC. No student uses efficient sorting algorithms.\nD. Some students cannot solve any problems.",
            "Is it true that some student who understands recursion can break problems into smaller parts?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1
            ],
            [
                2
            ]
        ],
        "explanation": [
            "Using efficient sorting algorithms leads to better performance (premise 1). Mastering these algorithms means a student can apply them effectively to solve ordering problems, making option A true.",
            "If a student understands recursion, they can break problems into smaller parts (premise 2). It’s reasonable that some student understands recursion, so some can break problems down, making the statement true."
        ]
    },
    {
        "premises-NL": [
            "Every AI model requires training data to function properly.",
            "If an AI model is not trained, it cannot perform predictions.",
            "Training an AI model requires a large dataset to improve its performance.",
            "If an AI model uses deep learning, it will need substantial computational resources.",
            "If an AI model does not have sufficient training data, it cannot achieve high accuracy.",
            "For all AI models, training is essential to enable predictions.",
            "If an AI model is trained on high-quality data, it will perform well in predictions.",
            "If an AI model lacks training data, it is not possible to use it for predictions.",
            "If an AI model is trained, it will have the capacity to make predictions.",
            "If an AI model does not use deep learning, it will likely underperform on tasks requiring complex reasoning.",
            "At least one AI model can perform well when trained with a proper dataset.",
            "For all AI models, training improves their ability to solve complex problems.",
            "If an AI model is not trained, it cannot generalize to unseen data.",
            "For all AI systems, the training process involves iterating on the model using feedback from predictions.",
            "If an AI model is not provided with sufficient training, it will not learn efficiently."
        ],
        "premises-FOL": [
            "∀x R(x)",
            "∀x (¬T(x) → ¬P(x))",
            "∀x (T(x) → D(x))",
            "∀x (L(x) → C(x))",
            "∀x (¬S(x) → ¬A(x))",
            "∀x (T(x) → P(x))",
            "∀x (Q(x) → H(x))",
            "∀x (¬S(x) → ¬P(x))",
            "∀x (T(x) → P(x))",
            "∀x (¬L(x) → U(x))",
            "∃x W(x)",
            "∀x (T(x) → V(x))",
            "∀x (¬T(x) → ¬G(x))",
            "∀x (T(x) → I(x))",
            "∀x (¬S(x) → ¬E(x))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. ∀x (¬S(x) → (¬P(x) ∧ ¬A(x)))\nB. ∀x (L(x) → ¬C(x))\nC. ∀x (¬S(x) → V(x))\nD. ∀x (¬(T(x) → V(x)))",
            "Based on the above premises, is the following statement true?\nStatement: If an AI model is not trained, it cannot generalize to unseen data."
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                5,
                8
            ],
            [
                13
            ]
        ],
        "explanation": [
            "The statement that if an AI model lacks sufficient training data, it cannot predict or achieve high accuracy follows because insufficient data prevents high accuracy (premise 5) and predictions (premise 8).",
            "The statement that if an AI model is not trained, it cannot generalize to unseen data is true because it is explicitly stated (premise 13)."
        ]
    },
    {
        "premises-NL": [
            "If a timetable is optimized, it allocates resources like classrooms and instructors efficiently.",
            "If a student has a balanced schedule, they have enough breaks and are not overloaded."
        ],
        "premises-FOL": [
            "∀x (Timetable(x) ∧ OptimizedTimetable(x) → AllocatesResourcesEfficiently(x))",
            "∀x (Student(x) ∧ BalancedSchedule(x) → (HasAdequateBreaks(x) ∧ ¬OverloadedSchedule(x)))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. An optimized timetable uses classrooms efficiently and avoids instructor conflicts.\nB. All timetables have scheduling conflicts.\nC. No timetable is optimized.\nD. Some students have overloaded schedules.",
            "Is it true that some student with a balanced schedule has enough time for breaks?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1
            ],
            [
                2
            ]
        ],
        "explanation": [
            "An optimized timetable allocates resources like classrooms and instructors efficiently (premise 1). This efficiency means maximizing room use and minimizing instructor conflicts, making option A true.",
            "A balanced schedule ensures a student has enough breaks and isn’t overloaded (premise 2). Since some students likely have balanced schedules, they have adequate break time, making the statement true."
        ]
    },
    {
        "premises-NL": [
            "To build a website, a strong understanding of web development technologies like HTML, CSS, and JavaScript is essential.",
            "Every website requires HTML to structure content, CSS to style it, and JavaScript to add interactivity.",
            "The performance of a website depends on how well the HTML is structured and how optimized the CSS and JavaScript are.",
            "Responsive design is crucial for ensuring that a website works well on all devices, from desktops to smartphones.",
            "If a student knows how to use frameworks like Bootstrap or Tailwind CSS, they can speed up the development process for styling.",
            "JavaScript is necessary for adding dynamic functionality to a website, such as user interactions, animations, and form validation.",
            "Version control with Git is important for tracking changes in the code and collaborating with others on the project.",
            "Web development requires knowledge of both front-end and back-end technologies to create full-stack applications.",
            "Web accessibility should be considered to ensure that the website is usable by people with disabilities.",
            "A good understanding of SEO (Search Engine Optimization) helps improve the visibility of a website on search engines.",
            "Testing a website for compatibility across multiple browsers ensures that users have a consistent experience.",
            "If a website does not load quickly, it can negatively impact user experience and lead to a higher bounce rate.",
            "Understanding databases and how to connect them to a website is crucial for building websites that store and retrieve data.",
            "Security measures like HTTPS, input validation, and preventing XSS attacks are essential for protecting user data on the website.",
            "Once a website is built, hosting and deploying it to the web is the final step to make it publicly accessible."
        ],
        "premises-FOL": [
            "∀x (B(x) → U(x))",
            "∀x (H(x) → S(x))",
            "∀x (C(x) → T(x))",
            "∀x (J(x) → I(x))",
            "∀x (O(x) → P(x))",
            "∀x (R(x) → W(x))",
            "∀x (F(x) → D(x))",
            "∀x (K(x) → Y(x))",
            "∀x (G(x) → V(x))",
            "∀x (E(x) → A(x))",
            "∀x (X(x) → M(x))",
            "∀x (Z(x) → Q(x))",
            "∀x (N(x) → L(x))",
            "∀x (¬L2(x) → ¬P(x))",
            "∀x (D2(x) → C2(x))",
            "∀x (S2(x) → P2(x))",
            "∀x (H2(x) → A2(x))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. ∀x (B(x) → P2(x))\nB. ∀x (G(x) → ¬V(x))\nC. ∀x (F(x) → ¬D(x))\nD. ∀x (T2(x) → ¬L2(x))",
            "Based on the above premises, is the following statement true?\nStatement: A student who uses security measures will protect user data on their website."
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1,
                16
            ],
            [
                16
            ]
        ],
        "explanation": [
            "The statement that if a student builds a website, they use security measures to protect user data follows because building a website requires understanding web technologies (premise 1), which includes applying security measures (premise 16).",
            "The statement that a student who uses security measures will protect user data on their website is true because it is explicitly stated (premise 16)."
        ]
    },
    {
        "premises-NL": [
            "To study effectively, a student must manage their time, set goals, and eliminate distractions.",
            "Breaking down large topics into smaller chunks and using active recall can improve information retention.",
            "Spaced repetition, along with regular testing, boosts long-term memory retention.",
            "Studying in a focused and distraction-free environment increases productivity.",
            "Studying in groups or studying solo can both be effective, depending on the individual’s learning style.",
            "Regular breaks and maintaining a balanced lifestyle promote better cognitive function.",
            "Consistent review of learned material, coupled with practical application, strengthens both memory and understanding."
        ],
        "premises-FOL": [
            "∀x ((M(x) ∧ G(x) ∧ D(x)) → E(x))",
            "∀x ((B(x) ∧ A(x)) → R(x))",
            "∀x ((S(x) ∨ T(x)) → L(x))",
            "∀x ((F(x) ∧ D(x)) → P(x))",
            "∀x ((I(x) ∨ O(x)) → K(x))",
            "∀x ((R2(x) ∧ B2(x)) → C(x))",
            "∀x ((V(x) ∧ P2(x)) → U(x))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. ∀x ((B(x) ∧ A(x) ∧ (S(x) ∨ T(x))) → (R(x) ∧ L(x)))\nB. ∀x ((R2(x) ∧ T3(x)) → B3(x))\nC. ∀x ((I(x) ∧ O(x)) → K(x))\nD. ∀x (¬V(x) → ¬U(x))",
            "Based on the above premises, is the following statement true?\nStatement: A student who manages their time and sets goals will study effectively."
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                2,
                3
            ],
            [
                1
            ]
        ],
        "explanation": [
            "The statement that if a student breaks down topics, uses active recall, and applies spaced repetition or testing, they retain information and achieve long-term retention follows because breaking down topics with active recall aids retention (premise 2), and spaced repetition or testing boosts long-term retention (premise 3).",
            "The statement that a student who manages their time and sets goals will study effectively is true because effective study requires time management, goal-setting, and distraction elimination (premise 1)."
        ]
    },
    {
        "premises-NL": [
            "If a student x is enrolled in Research Methods (R), then they have passed the Philosophy prerequisite (P).",
            "There is at least one student x who has qualified for the Quantum Physics competition (Q).",
            "If a student x is enrolled in Research Methods (R), they are eligible for the University Honors program (U).",
            "A student x who hasn't passed the Philosophy prerequisite (P) cannot qualify for the Quantum Physics competition (Q).",
            "All students x have passed the Philosophy prerequisite (P).",
            "Students x in the University Honors program (U) receive a full Scholarship (S).",
            "If a student x hasn't completed the Thesis Writing course (T), they cannot enroll in Research Methods (R).",
            "At least one student x has been admitted to the University Honors program (U).",
            "All students x receive a full Scholarship (S).",
            "There exists at least one student x who has passed the Philosophy prerequisite (P).",
            "Students x who pass the Philosophy prerequisite (P) are automatically enrolled in Research Methods (R).",
            "There is at least one student x enrolled in Research Methods (R).",
            "Every student x is part of the University Honors program (U).",
            "Enrollment in Research Methods (R) guarantees a full Scholarship (S) for student x.",
            "All students x have qualified for the Quantum Physics competition (Q).",
            "If all students have passed Philosophy (P), then any student x who passes P is automatically enrolled in Research Methods (R).",
            "If all students have passed Philosophy (P), then every student x is admitted to the University Honors program (U).",
            "Students x who haven't completed Thesis Writing (T) are disqualified from the Quantum Physics competition (Q).",
            "Qualifying for the Quantum Physics competition (Q) requires passing the Philosophy prerequisite (P).",
            "Every student x is enrolled in Research Methods (R).",
            "Students x who qualify for the Quantum Physics competition (Q) must enroll in Research Methods (R).",
            "A student x without a Scholarship (S) cannot qualify for the Quantum Physics competition (Q).",
            "Receiving a Scholarship (S) obligates student x to enroll in Research Methods (R).",
            "Scholarship recipients (S) automatically qualify for the Quantum Physics competition (Q)."
        ],
        "premises-FOL": [
            "∀x (R(x) → P(x))",
            "∃x Q(x)",
            "∀x (R(x) → U(x))",
            "∀x (¬P(x) → ¬Q(x))",
            "∀x P(x)",
            "∀x (U(x) → S(x))",
            "∀x (¬T(x) → ¬R(x))",
            "∃x U(x)",
            "∀x S(x)",
            "∃x P(x)",
            "∀x (P(x) → R(x))",
            "∃x R(x)",
            "∀x U(x)",
            "∀x (R(x) → S(x))",
            "∀x Q(x)",
            "(∀x P(x) → ∀x (P(x) → R(x)))",
            "(∀x P(x) → ∀x U(x))",
            "∀x (¬T(x) → ¬Q(x))",
            "∀x (Q(x) → P(x))",
            "∀x R(x)",
            "∀x (Q(x) → R(x))",
            "∀x (¬S(x) → ¬Q(x))",
            "∀x (S(x) → R(x))",
            "∀x (S(x) → Q(x))"
        ],
        "questions": [
            "Based on the premises above, which of the following statements can be logically concluded if we know that all students have passed the Philosophy prerequisite?\nA. If all students pass Philosophy, all are admitted to the Honors program.\nB. It is false that passing Philosophy guarantees Honors admission.\nC. The statement 'If all pass Philosophy, all join Honors' is tautologically true.\nD. The policy about Honors admission is contradictory.",
            "If all students have passed the Philosophy prerequisite, does it follow that passing Philosophy (P) requires enrollment in Research Methods (R)?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                5,
                17
            ],
            [
                5,
                16
            ]
        ],
        "explanation": [
            "From premise 5 (All students x have passed the Philosophy prerequisite (P)), we know ∀x P(x). From premise 17, if all students have passed Philosophy (P), then every student x is admitted to the University Honors program (U) (∀x P(x) → ∀x U(x)). Since premise 5 states that all students have passed Philosophy, premise 17's antecedent is true, so the consequent must be true. Therefore, if all students pass Philosophy, all are admitted to the Honors program (option A).",
            "From premise 5 (All students x have passed the Philosophy prerequisite (P)), we know ∀x P(x). From premise 16, if all students have passed Philosophy (P), then any student x who passes P is automatically enrolled in Research Methods (R) (∀x P(x) → ∀x (P(x) → R(x))). Since premise 5 states that all students have passed Philosophy, premise 16's antecedent is true, so the consequent must be true. Therefore, if all students have passed the Philosophy prerequisite, it follows that passing Philosophy (P) requires enrollment in Research Methods (R)."
        ]
    },
    {
        "premises-NL": [
            "All students x receive a full Scholarship (S).",
            "There is at least one student x enrolled in Research Methods (R).",
            "Students x who haven't completed Thesis Writing (T) have not passed Philosophy (P).",
            "Enrollment in Thesis Writing (T) guarantees a Scholarship (S) for student x.",
            "A student x without a Scholarship (S) cannot qualify for the Quantum Physics competition (Q).",
            "Membership in the University Honors program (U) provides a Scholarship (S).",
            "Every student x is enrolled in Research Methods (R).",
            "Skipping Thesis Writing (T) disqualifies student x from the Quantum Physics competition (Q).",
            "All students x have passed the Philosophy prerequisite (P).",
            "At least one student x is part of the University Honors program (U).",
            "If Thesis enrollment (T → S) holds, then all students receive Scholarships (S).",
            "Universal enrollment in Research Methods (R) ensures all students pass Philosophy (P).",
            "The policy 'No Thesis (¬T) → No Philosophy (¬P)' implies 'Thesis (T) → Scholarship (S).'",
            "Failure to qualify for Quantum Physics (Q) revokes Honors program (U) eligibility.",
            "There exists at least one student x who has completed Thesis Writing (T)."
        ],
        "premises-FOL": [
            "∀x S(x)",
            "∃x R(x)",
            "∀x (¬T(x) → ¬P(x))",
            "∀x (T(x) → S(x))",
            "∀x (¬S(x) → ¬Q(x))",
            "∀x (U(x) → S(x))",
            "∀x R(x)",
            "∀x (¬T(x) → ¬Q(x))",
            "∀x P(x)",
            "∃x U(x)",
            "(∀x (T(x) → S(x)) → ∀x S(x))",
            "(∀x R(x) → ∀x P(x))",
            "(∀x (¬T(x) → ¬P(x)) → ∀x (T(x) → S(x)))",
            "∀x (¬Q(x) → ¬U(x))",
            "∃x T(x)"
        ],
        "questions": [
            "Based on the university policies above, which conclusion is logically valid if we know that all students x have passed the Philosophy prerequisite?\nA. The policy linking Thesis and Scholarships is contradictory.\nB. The policy is both true and false.\nC. The policy 'No Thesis → No Philosophy' implies 'Thesis → Scholarship'.\nD. The policy is a tautology.",
            "If there exists at least one student x who has completed Thesis Writing, does it follow that all students receive Scholarships?"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                3,
                9,
                13
            ],
            [
                4,
                11,
                15
            ]
        ],
        "explanation": [
            "From premise 9 (All students x have passed the Philosophy prerequisite (P)), we know ∀x P(x). From premise 3, students x who haven't completed Thesis Writing (T) have not passed Philosophy (P) (∀x (¬T(x) → ¬P(x))). From premise 13, the policy 'No Thesis (¬T) → No Philosophy (¬P)' implies 'Thesis (T) → Scholarship (S)' (∀x (¬T(x) → ¬P(x)) → ∀x (T(x) → S(x))). Since premise 9 states that all students have passed Philosophy, premise 3's consequent is false, so the antecedent must be false. Therefore, premise 13's antecedent is true, so the consequent must be true. Therefore, the policy 'No Thesis → No Philosophy' implies 'Thesis → Scholarship' (option C).",
            "From premise 15 (There exists at least one student x who has completed Thesis Writing (T)), we know ∃x T(x). From premise 4, enrollment in Thesis Writing (T) guarantees a Scholarship (S) for student x (∀x (T(x) → S(x))). From premise 11, if Thesis enrollment (T → S) holds, then all students receive Scholarships (S) (∀x (T(x) → S(x)) → ∀x S(x)). Since premise 4 states the implication, and premise 15 states that there exists such a student, premise 11's antecedent is true, so the consequent must be true. Therefore, if there exists at least one student x who has completed Thesis Writing, it follows that all students receive Scholarships."
        ]
    },
    {
        "premises-NL": [
            "Completing the Thesis requirement ensures eligibility for a Research grant.",
            "At least one student has been awarded a Scholarship.",
            "Scholarship recipients must maintain a minimum GPA.",
            "Students who fail to maintain the required GPA lose access to University housing.",
            "All students are required to complete a Thesis.",
            "Access to University housing is reserved for Scholarship recipients.",
            "Students without housing cannot participate in the Quantum Computing lab.",
            "Non-participation in the Quantum lab leads to Scholarship revocation.",
            "A low GPA disqualifies students from the Quantum lab.",
            "There is at least one student with a Research grant.",
            "Research grant recipients are guaranteed University housing.",
            "At least one student has fulfilled the Thesis requirement.",
            "The policy linking GPA to housing implies Thesis completion guarantees a Research grant.",
            "The existence of Scholarships enforces GPA requirements for lab participation.",
            "Mandatory Thesis completion ensures at least one Research grant is awarded.",
            "Every student receives a Research grant.",
            "Students without housing cannot complete their Thesis.",
            "All students are Scholarship recipients.",
            "At least one student has access to University housing.",
            "Some students maintain the required GPA.",
            "Housing access requires maintaining the GPA.",
            "Failure to complete the Thesis results in loss of housing."
        ],
        "premises-FOL": [
            "∀x (T(x) → R(x))",
            "∃x S(x)",
            "∀x (S(x) → P(x))",
            "∀x (¬P(x) → ¬U(x))",
            "∀x T(x)",
            "∀x (U(x) → S(x))",
            "∀x (¬U(x) → ¬Q(x))",
            "∀x (¬Q(x) → ¬S(x))",
            "∀x (¬P(x) → ¬Q(x))",
            "∃x R(x)",
            "∀x (R(x) → U(x))",
            "∃x T(x)",
            "(∀x (¬P(x) → ¬U(x)) → ∀x (T(x) → R(x)))",
            "(∃x S(x) → ∀x (¬P(x) → ¬Q(x)))",
            "(∀x T(x) → ∃x R(x))",
            "∀x R(x)",
            "∀x (¬U(x) → ¬T(x))",
            "∀x S(x)",
            "∃x U(x)",
            "∃x P(x)",
            "∀x (U(x) → P(x))",
            "∀x (¬T(x) → ¬U(x))"
        ],
        "questions": [
            "Based on the university policies, which conclusion is valid if we know that all students are required to complete a Thesis?\nA. 'Mandatory Thesis implies Research grants' is a tautology.\nB. The policy is contradictory.\nC. Mandatory Thesis completion ensures at least one Research grant.\nD. The policy is both true and false.",
            "If all students are required to complete a Thesis, does it follow that students with low GPAs lose housing access?"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                5,
                15
            ],
            [
                4,
                5,
                22
            ]
        ],
        "explanation": [
            "From premise 5 (All students are required to complete a Thesis), we know ∀x T(x). From premise 15, mandatory Thesis completion ensures at least one Research grant is awarded (∀x T(x) → ∃x R(x)). Since premise 5 states that all students complete a Thesis, premise 15's antecedent is true, so the consequent must be true. Therefore, mandatory Thesis completion ensures at least one Research grant (option C).",
            "From premise 5 (All students are required to complete a Thesis), we know ∀x T(x). From premise 22, failure to complete the Thesis results in loss of housing (∀x (¬T(x) → ¬U(x))). Since premise 5 states that all students complete a Thesis, premise 22's antecedent is false, so the consequent is always true. From premise 4, students who fail to maintain the required GPA lose access to University housing (∀x (¬P(x) → ¬U(x))). Since premise 22's consequent is always true, premise 4's consequent is always true, so the antecedent must be true. Therefore, if all students are required to complete a Thesis, it follows that students with low GPAs lose housing access."
        ]
    },
    {
        "premises-NL": [
            "At least one student has passed the Philosophy requirement.",
            "All students have passed the Philosophy requirement.",
            "Passing Philosophy grants eligibility for the Quantum Physics lab.",
            "There is at least one recipient of the Research grant.",
            "Some students qualify for the Quantum Physics lab.",
            "A few students have access to University housing.",
            "Failure to complete the Thesis disqualifies students from Scholarships.",
            "At least one student has received a Scholarship.",
            "Every student is guaranteed University housing.",
            "Thesis completion is required for Quantum lab access.",
            "Scholarship recipients receive priority housing.",
            "All students have completed their Thesis.",
            "Full Thesis compliance ensures Research grant availability.",
            "Research grant recipients qualify for University housing.",
            "The policy linking Research grants to housing implies universal housing access.",
            "Thesis completion guarantees Scholarship eligibility.",
            "Housing access requires Thesis completion.",
            "Students without Scholarships cannot finish their Thesis.",
            "Thesis completion proves Philosophy proficiency.",
            "Research grant disqualification blocks Thesis submission.",
            "No Thesis completion means no Quantum lab access.",
            "Quantum lab qualification requires passing Philosophy."
        ],
        "premises-FOL": [
            "∃x P(x)",
            "∀x P(x)",
            "∀x (P(x) → Q(x))",
            "∃x R(x)",
            "∃x Q(x)",
            "∃x U(x)",
            "∀x (¬T(x) → ¬S(x))",
            "∃x S(x)",
            "∀x U(x)",
            "∀x (T(x) → Q(x))",
            "∀x (S(x) → U(x))",
            "∀x T(x)",
            "(∀x T(x) → ∃x R(x))",
            "(∃x R(x) → ∃x U(x))",
            "((∃x R(x) → ∃x U(x)) → ∀x U(x))",
            "∀x (T(x) → S(x))",
            "∀x (U(x) → T(x))",
            "∀x (¬S(x) → ¬T(x))",
            "∀x (T(x) → P(x))",
            "∀x (¬R(x) → ¬T(x))",
            "∀x (¬T(x) → ¬Q(x))",
            "∀x (Q(x) → P(x))"
        ],
        "questions": [
            "Based on university policies, which conclusion is valid if we know that there is at least one recipient of the Research grant?\nA. Research grant availability ensuring universal housing.\nB. The housing policy is contradictory.\nC. The policy is a tautology.\nD. Research grants do not guarantee housing.",
            "If all students have completed their Thesis, does it follow that all students have University housing access?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                4,
                14,
                15
            ],
            [
                9,
                12,
                17
            ]
        ],
        "explanation": [
            "From premise 4 (There is at least one recipient of the Research grant), we know ∃x R(x). From premise 14, research grant recipients qualify for University housing (∃x R(x) → ∃x U(x)). From premise 15, the policy linking Research grants to housing implies universal housing access ((∃x R(x) → ∃x U(x)) → ∀x U(x)). Since premise 4 states that there is at least one recipient of a Research grant, premise 14's antecedent is true, so the consequent must be true. Since premise 14's consequent is true, premise 15's antecedent is true, so the consequent must be true. Therefore, research grant availability ensuring universal housing (option A).",
            "From premise 12 (All students have completed their Thesis), we know ∀x T(x). From premise 17, housing access requires Thesis completion (∀x (U(x) → T(x))). From premise 9, every student is guaranteed University housing (∀x U(x)). Since premise 12 states that all students have completed their Thesis, premise 17's consequent is true, so the antecedent must be true. Therefore, if all students have completed their Thesis, it follows that all students have University housing access."
        ]
    },
    {
        "premises-NL": [
            "Enrollment in Quantum Physics (Q) grants access to University housing (U).",
            "Passing Philosophy (P) allows enrollment in Quantum Physics (Q).",
            "All students have passed the Philosophy prerequisite (P).",
            "At least one student has passed Philosophy (P).",
            "Every student receives a Research grant (R).",
            "Some students have been awarded Research grants (R).",
            "Students not enrolled in Quantum Physics (¬Q) have failed Philosophy (¬P).",
            "All students are guaranteed University housing (U).",
            "University housing (U) ensures Scholarship eligibility (S).",
            "There exists at least one student who completed Thesis Writing (T).",
            "Students without Scholarships (¬S) cannot receive Research grants (¬R).",
            "Access to University housing (U) requires passing Philosophy (P).",
            "Universal Research grant distribution (∀R) ensures Philosophy passers can enroll in Quantum (P→Q).",
            "The policy 'Housing → Scholarships' implies universal housing access (∀U).",
            "The housing-Scholarship policy guarantees all students have housing (∀U).",
            "If Philosophy enables Quantum enrollment (P→Q), some students receive Research grants (∃R).",
            "All students have completed Thesis Writing (T).",
            "Lack of housing (¬U) revokes Scholarships (¬S).",
            "Research grant disqualification (¬R) blocks Thesis completion (¬T).",
            "Scholarship loss (¬S) denies Quantum Physics enrollment (¬Q).",
            "All students are enrolled in Quantum Physics (Q)."
        ],
        "premises-FOL": [
            "∀x (Q(x) → U(x))",
            "∀x (P(x) → Q(x))",
            "∀x P(x)",
            "∃x P(x)",
            "∀x R(x)",
            "∃x R(x)",
            "∀x (¬Q(x) → ¬P(x))",
            "∀x U(x)",
            "∀x (U(x) → S(x))",
            "∃x T(x)",
            "∀x (¬S(x) → ¬R(x))",
            "∀x (U(x) → P(x))",
            "(∀x R(x) → ∀x (P(x) → Q(x)))",
            "(∀x (U(x) → S(x)) → ∀x U(x))",
            "((∀x (U(x) → S(x)) → ∀x U(x)) → ∀x U(x))",
            "(∀x (P(x) → Q(x)) → ∃x R(x))",
            "∀x T(x)",
            "∀x (¬U(x) → ¬S(x))",
            "∀x (¬R(x) → ¬T(x))",
            "∀x (¬S(x) → ¬Q(x))",
            "∀x Q(x)"
        ],
        "questions": [
            "Based on university policies, which conclusion is valid if we know that all students are enrolled in Quantum Physics?\nA. Philosophy enabling Quantum enrollment ensures some students get Research grants.\nB. The Research grant policy is contradictory.\nC. The policy is a tautology.\nD. Philosophy and Quantum enrollment are unrelated to grants.",
            "If all students are guaranteed University housing, does it follow that students without Scholarships are denied Research grants?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                2,
                16,
                21
            ],
            [
                8,
                9,
                11
            ]
        ],
        "explanation": [
            "From premise 21 (All students are enrolled in Quantum Physics (Q)), we know ∀x Q(x). From premise 2, passing Philosophy (P) allows enrollment in Quantum Physics (Q) (∀x (P(x) → Q(x))). From premise 16, if Philosophy enables Quantum enrollment (P→Q), some students receive Research grants (∃R) (∀x (P(x) → Q(x)) → ∃x R(x)). Since premise 21 states that all students are enrolled in Quantum Physics, premise 2's consequent is true, so the antecedent must be true. Therefore, premise 16's antecedent is true, so the consequent must be true. Therefore, philosophy enabling Quantum enrollment ensures some students get Research grants (option A).",
            "From premise 8 (All students are guaranteed University housing (U)), we know ∀x U(x). From premise 9, university housing (U) ensures Scholarship eligibility (S) (∀x (U(x) → S(x))). From premise 11, students without Scholarships (¬S) cannot receive Research grants (¬R) (∀x (¬S(x) → ¬R(x))). Since premise 8 states that all students have housing, premise 9's antecedent is true, so the consequent must be true. Therefore, all students have Scholarships. Since premise 11 states that students without Scholarships cannot receive Research grants, and all students have Scholarships, premise 11's antecedent is false, so the consequent is always true. Therefore, if all students are guaranteed University housing, it follows that students without Scholarships are denied Research grants."
        ]
    },
    {
        "premises-NL": [
            "At least one student has received a Scholarship.",
            "All students are required to submit a Research project.",
            "Research project completion grants access to University housing.",
            "Students who skip the Thesis requirement cannot submit a Research project.",
            "Failure to pass Philosophy disqualifies students from Scholarships.",
            "Research project submission requires Thesis completion.",
            "Some students have passed the Philosophy prerequisite.",
            "Research project participants must pass Philosophy.",
            "There exists at least one student who completed their Thesis.",
            "Non-submission of Research projects blocks Thesis completion.",
            "At least one student has submitted a Research project.",
            "Scholarship disqualification revokes Philosophy eligibility.",
            "The policy 'Research → Housing' enforces Scholarship-Philosophy linkage.",
            "The Research-Housing policy ensures Scholarship availability.",
            "Research-Housing compliance requires Scholarship-Philosophy alignment.",
            "The rule 'No Research → No Thesis' guarantees Thesis completion.",
            "Some students have secured University housing.",
            "Quantum Physics enrollment provides housing access.",
            "At least one student is enrolled in Quantum Physics.",
            "Research project disqualification revokes Scholarships.",
            "All students are enrolled in Quantum Physics."
        ],
        "premises-FOL": [
            "∃x S(x)",
            "∀x R(x)",
            "∀x (R(x) → U(x))",
            "∀x (¬T(x) → ¬R(x))",
            "∀x (¬P(x) → ¬S(x))",
            "∀x (R(x) → T(x))",
            "∃x P(x)",
            "∀x (R(x) → P(x))",
            "∃x T(x)",
            "∀x (¬R(x) → ¬T(x))",
            "∃x R(x)",
            "∀x (¬S(x) → ¬P(x))",
            "(∀x (R(x) → U(x)) → ∀x (¬S(x) → ¬P(x)))",
            "(∀x (R(x) → U(x)) → ∃x S(x))",
            "(∀x (R(x) → U(x)) → ∀x (¬P(x) → ¬S(x)))",
            "(∀x (¬R(x) → ¬T(x)) → ∃x T(x))",
            "∃x U(x)",
            "∀x (Q(x) → U(x))",
            "∃x Q(x)",
            "∀x (¬R(x) → ¬S(x))",
            "∀x Q(x)"
        ],
        "questions": [
            "Based on university policies, which conclusion is valid if we know that all students are required to submit a Research project?\nA. The Thesis-Research rule is a tautology.\nB. The policy is contradictory.\nC. The rule 'No Research → No Thesis' ensures Thesis completion.\nD. The rule is both true and false.",
            "If all students are required to submit a Research project, does it follow that Research project completion grants housing access?"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                2,
                10,
                16
            ],
            [
                2,
                3
            ]
        ],
        "explanation": [
            "From premise 2 (All students are required to submit a Research project), we know ∀x R(x). From premise 10, non-submission of Research projects blocks Thesis completion (∀x (¬R(x) → ¬T(x))). From premise 16, the rule 'No Research → No Thesis' guarantees Thesis completion (∀x (¬R(x) → ¬T(x)) → ∃x T(x)). Since premise 2 states that all students submit Research projects, premise 10's antecedent is false, so the consequent is always true. Therefore, premise 16's antecedent is true, so the consequent must be true. Therefore, the rule 'No Research → No Thesis' ensures Thesis completion (option C).",
            "From premise 2 (All students are required to submit a Research project), we know ∀x R(x). From premise 3, research project completion grants access to University housing (∀x (R(x) → U(x))). Since premise 2 states that all students submit Research projects, premise 3's antecedent is true, so the consequent must be true. Therefore, if all students are required to submit a Research project, it follows that Research project completion grants housing access."
        ]
    },
    {
        "premises-NL": [
            "Students who do not submit a Research project (¬R) cannot complete their Thesis (¬T).",
            "Failure to pass Philosophy (¬P) disqualifies students from Scholarships (¬S).",
            "At least one student has submitted a Research project.",
            "Failing Philosophy (¬P) blocks Research project submission (¬R).",
            "Incomplete Thesis (¬T) revokes University housing access (¬U).",
            "Passing Philosophy (P) guarantees University housing (U).",
            "All students are guaranteed University housing.",
            "Every student must submit a Research project.",
            "The policy 'No Research → No Thesis' enforces universal Research compliance.",
            "The rule 'No Thesis → No Housing' ensures all students submit Research.",
            "The Scholarship-Philosophy linkage implies Thesis-Housing dependency.",
            "The Research-Thesis policy enforces Philosophy-Research compliance.",
            "Scholarship recipients qualify for Quantum Physics enrollment."
        ],
        "premises-FOL": [
            "∀x (¬R(x) → ¬T(x))",
            "∀x (¬P(x) → ¬S(x))",
            "∃x R(x)",
            "∀x (¬P(x) → ¬R(x))",
            "∀x (¬T(x) → ¬U(x))",
            "∀x (P(x) → U(x))",
            "∀x U(x)",
            "∀x R(x)",
            "(∀x (¬R(x) → ¬T(x)) → ∀x R(x))",
            "(∀x (¬T(x) → ¬U(x)) → ∀x R(x))",
            "(∀x (¬P(x) → ¬S(x)) → ∀x (¬T(x) → ¬U(x)))",
            "(∀x (¬R(x) → ¬T(x)) → ∀x (¬P(x) → ¬R(x)))",
            "∀x (S(x) → Q(x))"
        ],
        "questions": [
            "Based on university policies, which conclusion is valid if we know that every student must submit a Research project?\nA. The Research-Thesis policy is contradictory.\nB. The Research-Thesis rule enforces Philosophy-Research compliance.\nC. The policy is both true and false.\nD. The rule is a tautology.",
            "If all students are guaranteed University housing, does it follow that passing Philosophy grants University housing access?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                1,
                8,
                12
            ],
            [
                6,
                7
            ]
        ],
        "explanation": [
            "From premise 8 (Every student must submit a Research project), we know ∀x R(x). From premise 1, students who do not submit a Research project (¬R) cannot complete their Thesis (¬T) (∀x (¬R(x) → ¬T(x))). From premise 12, the Research-Thesis policy enforces Philosophy-Research compliance (∀x (¬R(x) → ¬T(x)) → ∀x (¬P(x) → ¬R(x))). Since premise 8 states that all students submit Research projects, premise 1's antecedent is false, so the consequent is always true. Therefore, premise 12's antecedent is true, so the consequent must be true. Therefore, the Research-Thesis rule enforces Philosophy-Research compliance (option B).",
            "From premise 7 (All students are guaranteed University housing), we know ∀x U(x). From premise 6, passing Philosophy (P) guarantees University housing (U) (∀x (P(x) → U(x))). Since premise 7 states that all students have housing, premise 6's consequent is true, so the antecedent must be true. Therefore, if all students are guaranteed University housing, it follows that passing Philosophy grants University housing access."
        ]
    },
    {
        "premises-NL": [
            "Students who do not apply for Scholarships (¬S) cannot enroll in Thesis Writing (¬T).",
            "Passing Philosophy (P) grants eligibility for Research Methods (R).",
            "All students are guaranteed University housing (U).",
            "Enrollment in Research Methods (R) requires Thesis Writing (T).",
            "Passing Philosophy (P) necessitates enrolling in Thesis Writing (T).",
            "Every student is enrolled in Quantum Physics (Q).",
            "Some students are participating in Research Methods (R).",
            "All students have submitted Scholarship applications (S).",
            "Universal Quantum Physics enrollment (∀Q) enforces Philosophy-Thesis linkage (P→T).",
            "Mandatory Quantum Physics (∀Q) implies Scholarship applications are required for Thesis (¬S→¬T).",
            "The policy 'Philosophy → Thesis' ensures universal housing access (∀U).",
            "Universal housing (∀U) guarantees Scholarship-Thesis compliance under Quantum enrollment (∀Q → ¬S→¬T).",
            "Lack of housing (¬U) revokes Research Methods eligibility (¬R)."
        ],
        "premises-FOL": [
            "∀x (¬S(x) → ¬T(x))",
            "∀x (P(x) → R(x))",
            "∀x U(x)",
            "∀x (R(x) → T(x))",
            "∀x (P(x) → T(x))",
            "∀x Q(x)",
            "∃x R(x)",
            "∀x S(x)",
            "(∀x Q(x) → ∀x (P(x) → T(x)))",
            "(∀x Q(x) → ∀x (¬S(x) → ¬T(x)))",
            "(∀x (P(x) → T(x)) → ∀x U(x))",
            "(∀x U(x) → (∀x Q(x) → ∀x (¬S(x) → ¬T(x))))",
            "∀x (¬U(x) → ¬R(x))"
        ],
        "questions": [
            "Based on university policies, which conclusion is valid if we know that all students are guaranteed University housing?\nA. The housing-Scholarship policy is contradictory.\nB. Universal housing ensures Scholarship-Thesis compliance under Quantum enrollment.\nC. The policy is a tautology.\nD. Housing and Quantum enrollment are unrelated.",
            "If all students are guaranteed University housing, does it follow that universal housing guarantees Scholarship checks for Thesis under Quantum enrollment?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                3,
                6,
                12
            ],
            [
                3,
                6,
                12
            ]
        ],
        "explanation": [
            "From premise 3 (All students are guaranteed University housing (U)), we know ∀x U(x). From premise 6, every student is enrolled in Quantum Physics (Q) (∀x Q(x)). From premise 12, universal housing (∀U) guarantees Scholarship-Thesis compliance under Quantum enrollment (∀Q → ¬S→¬T) (∀x U(x) → (∀x Q(x) → ∀x (¬S(x) → ¬T(x)))). Since premise 3 states that all students have housing, premise 12's antecedent is true, so the consequent must be true. Since premise 6 states that all students are enrolled in Quantum Physics, the consequent of premise 12's implication is true, so the inner implication must be true. Therefore, universal housing ensures Scholarship-Thesis compliance under Quantum enrollment (option B).",
            "From premise 3 (All students are guaranteed University housing (U)), we know ∀x U(x). From premise 6, every student is enrolled in Quantum Physics (Q) (∀x Q(x)). From premise 12, universal housing (∀U) guarantees Scholarship-Thesis compliance under Quantum enrollment (∀Q → ¬S→¬T) (∀x U(x) → (∀x Q(x) → ∀x (¬S(x) → ¬T(x)))). Since premise 3 states that all students have housing, premise 12's antecedent is true, so the consequent must be true. Since premise 6 states that all students are enrolled in Quantum Physics, the consequent of premise 12's implication is true, so the inner implication must be true. Therefore, if all students are guaranteed University housing, it follows that universal housing guarantees Scholarship checks for Thesis under Quantum enrollment."
        ]
    },
    {
        "premises-NL": [
            "Students who don't conduct research (¬R) can't enroll in Quantum Physics (¬Q).",
            "Dormitory access (U) requires submitting a thesis (T).",
            "Some students have submitted theses.",
            "Thesis submission (T) guarantees dormitory access (U).",
            "No dormitory access (¬U) blocks Philosophy enrollment (¬P).",
            "All students take Quantum Physics.",
            "Some students conduct research.",
            "The rule 'Thesis→Dormitory' enforces 'No Research→No Quantum'.",
            "Existence of thesis submitters triggers the research-quantum policy link.",
            "Researchers get dormitory access.",
            "Quantum enrollment grants scholarship eligibility (S).",
            "Scholarships require Philosophy proficiency.",
            "All students receive scholarships."
        ],
        "premises-FOL": [
            "∀x (¬R(x) → ¬Q(x))",
            "∀x (U(x) → T(x))",
            "∃x T(x)",
            "∀x (T(x) → U(x))",
            "∀x (¬U(x) → ¬P(x))",
            "∀x Q(x)",
            "∃x R(x)",
            "(∀x (T(x) → U(x)) → ∀x (¬R(x) → ¬Q(x)))",
            "(∃x T(x) → (∀x (T(x) → U(x)) → ∀x (¬R(x) → ¬Q(x))))",
            "∀x (R(x) → U(x))",
            "∀x (Q(x) → S(x))",
            "∀x (S(x) → P(x))",
            "∀x S(x)"
        ],
        "questions": [
            "Based on university policies, which conclusion follows if we know that some students have submitted theses?\nA. Thesis existence doesn't affect research rules.\nB. Policy contradiction exists.\nC. Thesis submissions activate research-quantum link.\nD. The rule is tautological.",
            "If some students have submitted theses, does it follow that dormitory access requires thesis submission?"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                3,
                4,
                9
            ],
            [
                2,
                3
            ]
        ],
        "explanation": [
            "From premise 3 (Some students have submitted theses), we know ∃x T(x). From premise 4, thesis submission (T) guarantees dormitory access (U) (∀x (T(x) → U(x))). From premise 9, existence of thesis submitters triggers the research-quantum policy link (∃x T(x) → (∀x (T(x) → U(x)) → ∀x (¬R(x) → ¬Q(x)))). Since premise 3 states that there exist students who submitted theses, premise 9's antecedent is true, so the consequent must be true. Since premise 4 states the implication, premise 9's consequent is true, so the inner implication must be true. Therefore, thesis submissions activate research-quantum link (option C).",
            "From premise 3 (Some students have submitted theses), we know ∃x T(x). From premise 2, dormitory access (U) requires submitting a thesis (T) (∀x (U(x) → T(x))). Since premise 3 states that there exist students who submitted theses, premise 2's consequent can be true for some students, so the antecedent must be true for those students. Therefore, if some students have submitted theses, it follows that dormitory access requires thesis submission."
        ]
    },
    {
        "premises-NL": [
            "Submitting course registration (S) grants enrollment confirmation (U).",
            "Meeting prerequisites (Q) allows enrollment in advanced courses (T).",
            "Some students have successfully submitted registrations.",
            "All students have cleared tuition payments (P).",
            "All students satisfy prerequisite requirements.",
            "Every registration has advisor approval (R).",
            "Lack of advisor approval blocks enrollment confirmation.",
            "Unconfirmed enrollments invalidate registration submissions.",
            "Full tuition compliance by all students waives prerequisite checks.",
            "Universal advisor approval triggers automatic purge of unconfirmed registrations.",
            "All students submitted course registrations.",
            "Outstanding tuition fees void advisor approvals.",
            "Enrollment confirmation requires cleared payments.",
            "Advanced course enrollment mandates advisor consent.",
            "Some students qualify for advanced courses."
        ],
        "premises-FOL": [
            "∀x (S(x) → U(x))",
            "∀x (Q(x) → T(x))",
            "∃x S(x)",
            "∀x P(x)",
            "∀x Q(x)",
            "∀x R(x)",
            "∀x (¬R(x) → ¬U(x))",
            "∀x (¬U(x) → ¬S(x))",
            "(∀x P(x) → ∀x Q(x))",
            "(∀x R(x) → ∀x (¬U(x) → ¬S(x)))",
            "∀x S(x)",
            "∀x (¬P(x) → ¬R(x))",
            "∀x (U(x) → P(x))",
            "∀x (T(x) → R(x))",
            "∃x Q(x)"
        ],
        "questions": [
            "Based on registration policies, which rule is enforced if we know that every registration has advisor approval?\nA. Universal advisor approval → (No enrollment → No registration)\nB. Policy contradiction exists\nC. Tautological redundancy\nD. Logical inconsistency",
            "If all students have cleared tuition payments, does it follow that all students satisfy prerequisite requirements?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                6,
                10
            ],
            [
                4,
                9
            ]
        ],
        "explanation": [
            "From premise 6 (Every registration has advisor approval (R)), we know ∀x R(x). From premise 10, universal advisor approval triggers automatic purge of unconfirmed registrations (∀x R(x) → ∀x (¬U(x) → ¬S(x))). Since premise 6 states that all registrations have advisor approval, premise 10's antecedent is true, so the consequent must be true. Therefore, universal advisor approval → (No enrollment → No registration) (option A).",
            "From premise 4 (All students have cleared tuition payments (P)), we know ∀x P(x). From premise 9, full tuition compliance by all students waives prerequisite checks (∀x P(x) → ∀x Q(x)). Since premise 4 states that all students have cleared tuition payments, premise 9's antecedent is true, so the consequent must be true. Therefore, if all students have cleared tuition payments, it follows that all students satisfy prerequisite requirements."
        ]
    },
    {
        "premises-NL": [
            "In Calculus 2 for engineering students, if an object x does not have property P then it also does not have property R.",
            "In Calculus 2 for engineering students, for all objects x, x has property Q.",
            "In Calculus 2 for engineering students, there exists at least one object x that has property R.",
            "In Calculus 2 for engineering students, if an object x does not have property U then it does not have property P.",
            "In Calculus 2 for engineering students, if an object x has property Q then it also has property T.",
            "In Calculus 2 for engineering students, if an object x does not have property T then it does not have property S.",
            "In Calculus 2 for engineering students, if an object x has property U then it has property P.",
            "In Calculus 2 for engineering students, if an object x has property P then it also has property T.",
            "In Calculus 2 for engineering students, if x having property U implies x has property P then x having property Q implies x has property T.",
            "In Calculus 2 for engineering students, if not having property P implies not having property R then x having property U implies x has property P.",
            "In Calculus 2 for engineering students, if an object x has property T then it has property U.",
            "In Calculus 2 for engineering students, for all objects x, x has property P.",
            "In Calculus 2 for engineering students, for all objects x, x has property R.",
            "In Calculus 2 for engineering students, if an object x has property S then it has property P.",
            "In Calculus 2 for engineering students, there exists at least one object x that has property P."
        ],
        "premises-FOL": [
            "∀x (¬P(x) → ¬R(x))",
            "∀x Q(x)",
            "∃x R(x)",
            "∀x (¬U(x) → ¬P(x))",
            "∀x (Q(x) → T(x))",
            "∀x (¬T(x) → ¬S(x))",
            "∀x (U(x) → P(x))",
            "∀x (P(x) → T(x))",
            "(∀x (U(x) → P(x)) → ∀x (Q(x) → T(x)))",
            "(∀x (¬P(x) → ¬R(x)) → ∀x (U(x) → P(x)))",
            "∀x (T(x) → U(x))",
            "∀x P(x)",
            "∀x R(x)",
            "∀x (S(x) → P(x))",
            "∃x P(x)"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred if we know that there exists at least one object x that has property R?\nA. ¬((¬P(x) → ¬R(x)) → (U(x) → P(x)))\nB. ((¬P(x) → ¬R(x)) → (U(x) → P(x)))\nC. (((¬P(x) → ¬R(x)) → (U(x) → P(x))) ∧ ¬((¬P(x) → ¬R(x)) → (U(x) → P(x))))\nD. (((¬P(x) → ¬R(x)) → (U(x) → P(x))) → ((¬P(x) → ¬R(x)) → (U(x) → P(x))))",
            "If there exists at least one object x that has property R, does it follow that there exists at least one object x that has property R?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                1,
                3,
                10
            ],
            [
                3
            ]
        ],
        "explanation": [
            "From premise 3 (There exists at least one object x that has property R), we know ∃x R(x). From premise 1, if an object x does not have property P then it also does not have property R (∀x (¬P(x) → ¬R(x))). From premise 10, if not having property P implies not having property R then x having property U implies x has property P (∀x (¬P(x) → ¬R(x)) → ∀x (U(x) → P(x))). Since premise 3 states that there exists an object with property R, premise 1's consequent can be false for some object, so the antecedent must be false for that object. Therefore, premise 10's antecedent is true, so the consequent must be true. Therefore, ((¬P(x) → ¬R(x)) → (U(x) → P(x))) (option B).",
            "From premise 3 (There exists at least one object x that has property R), we know ∃x R(x). Since premise 3 directly states the existence of such an object, it follows that if there exists at least one object x that has property R, then there exists at least one object x that has property R."
        ]
    },
    {
        "premises-NL": [
            "Submitting a research proposal (S) requires advisor review (R).",
            "Passing Philosophy (P) grants dormitory access (U).",
            "Some students have submitted research proposals.",
            "Thesis completion (T) requires a submitted proposal.",
            "Advisor-reviewed proposals grant dormitory access.",
            "Some students qualify for advanced seminars (Q).",
            "Research proposals must lead to thesis work.",
            "Failing Philosophy revokes dormitory access.",
            "The Philosophy-dormitory rule enforces proposal-review linkage.",
            "The Philosophy-dormitory policy ensures advanced seminar participation.",
            "Submitting proposals guarantees dormitory access.",
            "All students complete theses.",
            "Some students have dormitory access.",
            "No proposal submission blocks dormitory access.",
            "Philosophy failure invalidates advisor reviews."
        ],
        "premises-FOL": [
            "∀x (S(x) → R(x))",
            "∀x (P(x) → U(x))",
            "∃x S(x)",
            "∀x (T(x) → S(x))",
            "∀x (R(x) → U(x))",
            "∃x Q(x)",
            "∀x (S(x) → T(x))",
            "∀x (¬P(x) → ¬U(x))",
            "(∀x (¬P(x) → ¬U(x)) → ∀x (S(x) → R(x)))",
            "(∀x (¬P(x) → ¬U(x)) → ∃x Q(x))",
            "∀x (S(x) → U(x))",
            "∀x T(x)",
            "∃x U(x)",
            "∀x (¬S(x) → ¬U(x))",
            "∀x (¬P(x) → ¬R(x))"
        ],
        "questions": [
            "Based on university policies, which conclusion is valid if we know that failing Philosophy revokes dormitory access?\nA. The policy is tautological.\nB. Philosophy-dorm rules contradict proposals.\nC. Philosophy failures → Advanced seminar seats.\nD. The system is inconsistent.",
            "If submitting a research proposal requires advisor review, does it follow that advisor-reviewed work guarantees dorm access?"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                8,
                10
            ],
            [
                1,
                5
            ]
        ],
        "explanation": [
            "From premise 8 (Failing Philosophy revokes dormitory access), we know ∀x (¬P(x) → ¬U(x)). From premise 10, the Philosophy-dormitory policy ensures advanced seminar participation (∀x (¬P(x) → ¬U(x)) → ∃x Q(x)). Since premise 8 states that failing Philosophy revokes dormitory access, premise 10's antecedent is true, so the consequent must be true. Therefore, philosophy failures → Advanced seminar seats (option C).",
            "From premise 1 (Submitting a research proposal requires advisor review), we know ∀x (S(x) → R(x)). From premise 5, advisor-reviewed proposals grant dormitory access (∀x (R(x) → U(x))). Since premise 1 states that submitting a proposal implies advisor review, premise 5's antecedent can be true for some students, so the consequent must be true for those students. Therefore, if submitting a research proposal requires advisor review, it follows that advisor-reviewed work guarantees dorm access."
        ]
    },
    {
        "premises-NL": [
            "At the University of Technology, every object x has property Q.",
            "At the University of Technology, every object x has property S.",
            "At the University of Technology, if an object x does not have property Q, then it does not have property P.",
            "At the University of Technology, every object x has property U.",
            "At the University of Technology, every object x has property T.",
            "At the University of Technology, if an object x has property T, then it also has property Q.",
            "At the University of Technology, there exists at least one object x that has property U.",
            "At the University of Technology, if an object x has property P, then it has property U.",
            "At the University of Technology, if there exists an object x with property U, then every object x has property S.",
            "At the University of Technology, if it is true that whenever an object x has property T then it has property Q, then every object x has property T.",
            "At the University of Technology, every object x has property R.",
            "At the University of Technology, if an object x has property S, then it also has property Q.",
            "At the University of Technology, if an object x does not have property S, then it does not have property U.",
            "At the University of Technology, if an object x has property R, then it also has property U.",
            "At the University of Technology, if an object x has property U, then it has property S."
        ],
        "premises-FOL": [
            "∀x Q(x)",
            "∀x S(x)",
            "∀x (¬Q(x) → ¬P(x))",
            "∀x U(x)",
            "∀x T(x)",
            "∀x (T(x) → Q(x))",
            "∃x U(x)",
            "∀x (P(x) → U(x))",
            "(∃x U(x) → ∀x S(x))",
            "(∀x (T(x) → Q(x)) → ∀x T(x))",
            "∀x R(x)",
            "∀x (S(x) → Q(x))",
            "∀x (¬S(x) → ¬U(x))",
            "∀x (R(x) → U(x))",
            "∀x (U(x) → S(x))"
        ],
        "questions": [
            "Considering the above premises from the University of Technology, which of the following statements can be logically deduced if we know that every object x has property T?\nA. It is not true that if an object having property T implies it has property Q then all objects have property T.\nB. If it is true that if an object having property T implies it has property Q then all objects have property T, then it is indeed true that if an object having property T implies it has property Q then all objects have property T.\nC. It is both true and not true that if an object having property T implies it has property Q then all objects have property T.\nD. If an object having property T implies it has property Q then all objects have property T.",
            "If every object x has property Q, does it follow that if an object does not have property Q, then it does not have property P?"
        ],
        "answers": [
            "D",
            "Yes"
        ],
        "idx": [
            [
                5,
                6,
                10
            ],
            [
                1,
                3
            ]
        ],
        "explanation": [
            "From premise 5 (Every object x has property T), we know ∀x T(x). From premise 6, if an object x has property T, then it also has property Q (∀x (T(x) → Q(x))). From premise 10, if it is true that whenever an object x has property T then it has property Q, then every object x has property T (∀x (T(x) → Q(x)) → ∀x T(x)). Since premise 5 states that all objects have property T, premise 6's antecedent is true, so the consequent must be true. Therefore, premise 10's antecedent is true, so the consequent must be true. Therefore, if an object having property T implies it has property Q then all objects have property T (option D).",
            "From premise 1 (Every object x has property Q), we know ∀x Q(x). From premise 3, if an object x does not have property Q, then it does not have property P (∀x (¬Q(x) → ¬P(x))). Since premise 1 states that all objects have property Q, premise 3's antecedent is false, so the consequent is always true. Therefore, if every object x has property Q, it follows that if an object does not have property Q, then it does not have property P."
        ]
    },
    {
        "premises-NL": [
            "All students have dormitory access (U).",
            "Dormitory access requires passing Philosophy (P).",
            "Some students completed Research projects (R).",
            "No scholarship (¬S) blocks dormitory access.",
            "Thesis completion (T) grants scholarship eligibility.",
            "All students receive scholarships.",
            "Some students qualify for Quantum Physics (Q).",
            "All students passed Philosophy.",
            "Some students have scholarships.",
            "Research completion ensures Philosophy proficiency.",
            "Existence of researchers enforces Research→Philosophy rule.",
            "Dormitory-Philosophy link ensures universal scholarships.",
            "Quantum students enforce Research→Philosophy compliance.",
            "All students completed Research projects.",
            "Scholarship loss blocks Quantum Physics.",
            "No dorm access blocks Quantum Physics."
        ],
        "premises-FOL": [
            "∀x U(x)",
            "∀x (U(x) → P(x))",
            "∃x R(x)",
            "∀x (¬S(x) → ¬U(x))",
            "∀x (T(x) → S(x))",
            "∀x S(x)",
            "∃x Q(x)",
            "∀x P(x)",
            "∃x S(x)",
            "∀x (R(x) → P(x))",
            "(∃x R(x) → ∀x (R(x) → P(x)))",
            "(∀x (U(x) → P(x)) → ∀x S(x))",
            "(∃x Q(x) → ∀x (R(x) → P(x)))",
            "∀x R(x)",
            "∀x (¬S(x) → ¬Q(x))",
            "∀x (¬U(x) → ¬Q(x))"
        ],
        "questions": [
            "Based on university policies, which conclusion is valid if we know that some students qualify for Quantum Physics?\nA. Denial of Quantum-Research link.\nB. Contradictory policies.\nC. Quantum students → Research requires Philosophy.\nD. Tautological redundancy.",
            "If all students have dormitory access, does it follow that some students completed Research projects?"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                7,
                13
            ],
            [
                1,
                14
            ]
        ],
        "explanation": [
            "From premise 7 (Some students qualify for Quantum Physics (Q)), we know ∃x Q(x). From premise 13, Quantum students enforce Research→Philosophy compliance (∃x Q(x) → ∀x (R(x) → P(x))). Since premise 7 states that some students qualify for Quantum Physics, premise 13's antecedent is true, so the consequent must be true. Therefore, Quantum students → Research requires Philosophy (option C).",
            "From premise 1 (All students have dormitory access (U)), we know ∀x U(x). From premise 14, all students completed Research projects (∀x R(x)). Since premise 1 states that all students have dormitory access, and premise 14 states that all students completed Research projects, it follows that some students completed Research projects."
        ]
    },
    {
        "premises-NL": [
            "At the University of Technology, there exists at least one object x that has property U.",
            "At the University of Technology, if an object x does not have property S, then it does not have property P.",
            "At the University of Technology, every object x has property P.",
            "At the University of Technology, if an object x has property U, then it has property S.",
            "At the University of Technology, there exists at least one object x that has property S.",
            "At the University of Technology, there exists at least one object x that has property P.",
            "At the University of Technology, if an object x has property R, then it has property U.",
            "At the University of Technology, there exists at least one object x that has property T.",
            "At the University of Technology, if it is true that if an object x does not have property S then it does not have property P, then there exists at least one object x that has property P.",
            "At the University of Technology, if there exists at least one object x that has property U, then if an object x does not have property S it does not have property P.",
            "At the University of Technology, if an object x has property U, then it has property Q.",
            "At the University of Technology, if an object x does not have property P, then it does not have property S.",
            "At the University of Technology, if an object x does not have property U, then it does not have property P.",
            "At the University of Technology, if an object x does not have property R, then it does not have property P.",
            "At the University of Technology, there exists at least one object x that has property Q."
        ],
        "premises-FOL": [
            "∃x U(x)",
            "∀x (¬S(x) → ¬P(x))",
            "∀x P(x)",
            "∀x (U(x) → S(x))",
            "∃x S(x)",
            "∃x P(x)",
            "∀x (R(x) → U(x))",
            "∃x T(x)",
            "(∀x (¬S(x) → ¬P(x)) → ∃x P(x))",
            "(∃x U(x) → ∀x (¬S(x) → ¬P(x)))",
            "∀x (U(x) → Q(x))",
            "∀x (¬P(x) → ¬S(x))",
            "∀x (¬U(x) → ¬P(x))",
            "∀x (¬R(x) → ¬P(x))",
            "∃x Q(x)"
        ],
        "questions": [
            "Considering the above premises from the University of Technology, which of the following statements can be logically deduced if we know that there exists at least one object x that has property U?\nA. It is not the case that if there exists an object with property U then if an object lacks property S it does not have property P.\nB. If it is true that if there exists an object with property U then if an object lacks property S it does not have property P, then it is indeed true that if there exists an object with property U then if an object lacks property S it does not have property P.\nC. If there exists an object with property U then if an object lacks property S it does not have property P.\nD. It is both true and not true that if there exists an object with property U then if an object lacks property S it does not have property P.",
            "If every object x has property P, does it follow that if it is the case that if an object lacks property S then it does not have property P, then there exists at least one object with property P?"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                1,
                3,
                10
            ],
            [
                2,
                9
            ]
        ],
        "explanation": [
            "From premise 1 (There exists at least one object x that has property U), we know ∃x U(x). From premise 2, if an object x does not have property S, then it does not have property P (∀x (¬S(x) → ¬P(x))). From premise 4, if an object x has property U, then it has property S (∀x (U(x) → S(x))). From premise 10, if there exists at least one object x that has property U, then if an object x does not have property S it does not have property P (∃x U(x) → ∀x (¬S(x) → ¬P(x))). Since premise 1 states that there exists an object with property U, premise 10's antecedent is true, so the consequent must be true. Therefore, if there exists an object with property U then if an object lacks property S it does not have property P (option C).",
            "From premise 2 (If an object x does not have property S, then it does not have property P), we know ∀x (¬S(x) → ¬P(x)). From premise 3, every object x has property P (∀x P(x)). From premise 9, if it is true that if an object x does not have property S then it does not have property P, then there exists at least one object x that has property P (∀x (¬S(x) → ¬P(x)) → ∃x P(x)). Since premise 3 states that all objects have property P, premise 2's consequent is always true, so the antecedent is always false. Therefore, premise 9's antecedent is false, so the consequent is always true. Therefore, if every object x has property P, it follows that if it is the case that if an object lacks property S then it does not have property P, then there exists at least one object with property P."
        ]
    },
    {
        "premises-NL": [
            "There exists at least one object x that has property R.",
            "If an object x does not have property U, then it does not have property Q.",
            "Every object x has property P.",
            "If an object x does not have property Q, then it does not have property S.",
            "If an object x does not have property R, then it does not have property S.",
            "If an object x has property T, then it has property P.",
            "If an object x does not have property T, then it does not have property R.",
            "There exists at least one object x that has property U.",
            "If it is true that if an object x does not have property T then it does not have property R, then if an object x has property T, it has property P.",
            "If there exists at least one object x with property R, then there exists at least one object x with property U.",
            "If there exists at least one object x with property R, then every object x has property P.",
            "Every object x has property R.",
            "If an object x does not have property U, then it does not have property T.",
            "There exists at least one object x that has property Q."
        ],
        "premises-FOL": [
            "∃x R(x)",
            "∀x (¬U(x) → ¬Q(x))",
            "∀x P(x)",
            "∀x (¬Q(x) → ¬S(x))",
            "∀x (¬R(x) → ¬S(x))",
            "∀x (T(x) → P(x))",
            "∀x (¬T(x) → ¬R(x))",
            "∃x U(x)",
            "(∀x (¬T(x) → ¬R(x)) → ∀x (T(x) → P(x)))",
            "(∃x R(x) → ∃x U(x))",
            "(∃x R(x) → ∀x P(x))",
            "∀x R(x)",
            "∀x (¬U(x) → ¬T(x))",
            "∃x Q(x)"
        ],
        "questions": [
            "Based on the above premises provided in the context of a university, which of the following statements can be logically deduced if we know that there exists at least one object x that has property R?\nA. If there exists at least one object with property R, then every object has property P.\nB. It is not true that if there exists at least one object with property R then every object has property P.\nC. It is both true and not true that if there exists at least one object with property R then every object has property P.\nD. If it is true that if there exists at least one object with property R then every object has property P, then if there exists at least one object with property R every object has property P.",
            "If there exists at least one object x that has property R, does it follow that every object has property P?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1,
                3,
                11
            ],
            [
                1,
                3,
                11
            ]
        ],
        "explanation": [
            "From premise 1 (There exists at least one object x that has property R), we know ∃x R(x). From premise 3, every object x has property P (∀x P(x)). From premise 11, if there exists at least one object x with property R, then every object x has property P (∃x R(x) → ∀x P(x)). Since premise 1 states that there exists an object with property R, premise 11's antecedent is true, so the consequent must be true. Therefore, if there exists at least one object with property R, then every object has property P (option A).",
            "From premise 1 (There exists at least one object x that has property R), we know ∃x R(x). From premise 3, every object x has property P (∀x P(x)). From premise 11, if there exists at least one object x with property R, then every object x has property P (∃x R(x) → ∀x P(x)). Since premise 1 states that there exists an object with property R, premise 11's antecedent is true, so the consequent must be true. Therefore, if there exists at least one object x that has property R, it follows that every object has property P."
        ]
    },
    {
        "premises-NL": [
            "Submitting a thesis proposal (S) requires advisor approval (T).",
            "Failing Philosophy (¬P) blocks Quantum Physics enrollment (¬Q).",
            "Thesis proposals grant dormitory access (U).",
            "Research project approval (R) grants dormitory access.",
            "Dormitory access allows Quantum Physics enrollment.",
            "No advisor approval blocks Philosophy progression.",
            "Some students are enrolled in Quantum Physics.",
            "All students have submitted thesis proposals.",
            "Thesis-advisor rule enforces research-dormitory link.",
            "Thesis-advisor compliance ensures universal submissions.",
            "Philosophy-Quantum rules enforce research-dormitory policies.",
            "All students have dormitory access.",
            "Quantum enrollment requires dormitory access.",
            "Advisor approval ensures dormitory access."
        ],
        "premises-FOL": [
            "∀x (S(x) → T(x))",
            "∀x (¬P(x) → ¬Q(x))",
            "∀x (S(x) → U(x))",
            "∀x (R(x) → U(x))",
            "∀x (U(x) → Q(x))",
            "∀x (¬T(x) → ¬P(x))",
            "∃x Q(x)",
            "∀x S(x)",
            "(∀x (S(x) → T(x)) → ∀x (R(x) → U(x)))",
            "(∀x (S(x) → T(x)) → ∀x S(x))",
            "(∀x (¬P(x) → ¬Q(x)) → ∀x (R(x) → U(x)))",
            "∀x U(x)",
            "∀x (Q(x) → U(x))",
            "∀x (T(x) → U(x))"
        ],
        "questions": [
            "Which policy is validated by university regulations if we know that failing Philosophy blocks Quantum Physics enrollment?\nA. Tautological redundancy.\nB. Philosophy failures → Research-dormitory link.\nC. Contradictory rules.\nD. Logical inconsistency.",
            "If submitting a thesis proposal requires advisor approval, does it follow that the thesis approval → research-dormitory rule holds?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                2,
                4,
                11
            ],
            [
                1,
                3,
                9
            ]
        ],
        "explanation": [
            "From premise 2 (Failing Philosophy (¬P) blocks Quantum Physics enrollment (¬Q)), we know ∀x (¬P(x) → ¬Q(x)). From premise 4, research project approval (R) grants dormitory access (∀x (R(x) → U(x))). From premise 11, Philosophy-Quantum rules enforce research-dormitory policies (∀x (¬P(x) → ¬Q(x)) → ∀x (R(x) → U(x))). Since premise 2 states that failing Philosophy blocks Quantum Physics enrollment, premise 11's antecedent is true, so the consequent must be true. Therefore, philosophy failures → Research-dormitory link (option B).",
            "From premise 1 (Submitting a thesis proposal (S) requires advisor approval (T)), we know ∀x (S(x) → T(x)). From premise 3, thesis proposals grant dormitory access (U) (∀x (S(x) → U(x))). From premise 9, thesis-advisor rule enforces research-dormitory link (∀x (S(x) → T(x)) → ∀x (R(x) → U(x))). Since premise 1 states that submitting a thesis proposal requires advisor approval, premise 9's antecedent is true, so the consequent must be true. Therefore, if submitting a thesis proposal requires advisor approval, it follows that the thesis approval → research-dormitory rule holds."
        ]
    },
    {
        "premises-NL": [
            "Qualifying for Quantum Physics (Q) requires Research project completion (R).",
            "Failing the entrance exam (¬T) blocks dormitory access (¬U).",
            "Special program enrollment (S) mandates passing Philosophy (P).",
            "All students passed the entrance exam.",
            "All students have passed Philosophy.",
            "No entrance exam pass → No Research completion.",
            "Some students completed Research projects.",
            "Special program students get dormitory access.",
            "Universal Philosophy success ensures special program benefits.",
            "Research completers enforce Quantum Physics requirements.",
            "The exam-Research rule activates Quantum Physics policies.",
            "Quantum disqualification revokes dormitory rights.",
            "Some students qualify for Quantum Physics.",
            "Quantum qualification grants dormitory access."
        ],
        "premises-FOL": [
            "∀x (Q(x) → R(x))",
            "∀x (¬T(x) → ¬U(x))",
            "∀x (S(x) → P(x))",
            "∀x T(x)",
            "∀x P(x)",
            "∀x (¬T(x) → ¬R(x))",
            "∃x R(x)",
            "∀x (S(x) → U(x))",
            "(∀x P(x) → ∀x S(x))",
            "(∃x R(x) → ∀x (Q(x) → R(x)))",
            "(∀x (¬T(x) → ¬R(x)) → ∀x (Q(x) → R(x)))",
            "∀x (¬Q(x) → ¬U(x))",
            "∃x Q(x)",
            "∀x (Q(x) → U(x))"
        ],
        "questions": [
            "Based on university policies, which conclusion is valid if we know that no entrance exam pass → No Research completion?\nA. Exam-Research rule → Quantum policy activation.\nB. Contradiction in rules.\nC. Tautological redundancy.\nD. Policy denial.",
            "If some students completed Research projects, does it follow that the existence of Research completers enforces Quantum Physics requirements?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                6,
                11
            ],
            [
                7,
                10
            ]
        ],
        "explanation": [
            "From premise 6 (No entrance exam pass → No Research completion), we know ∀x (¬T(x) → ¬R(x)). From premise 11, the exam-Research rule activates Quantum Physics policies (∀x (¬T(x) → ¬R(x)) → ∀x (Q(x) → R(x))). Since premise 6 states that no entrance exam pass implies no Research completion, premise 11's antecedent is true, so the consequent must be true. Therefore, exam-Research rule → Quantum policy activation (option A).",
            "From premise 7 (Some students completed Research projects), we know ∃x R(x). From premise 10, research completers enforce Quantum Physics requirements (∃x R(x) → ∀x (Q(x) → R(x))). Since premise 7 states that there exist students who completed Research projects, premise 10's antecedent is true, so the consequent must be true. Therefore, if some students completed Research projects, it follows that the existence of Research completers enforces Quantum Physics requirements."
        ]
    },
    {
        "premises-NL": [
            "At the university, if an object x has property U, then it has property P.",
            "At the university, there exists at least one object x that has property Q.",
            "At the university, every object x has property S.",
            "At the university, if an object x does not have property Q, then it does not have property U.",
            "At the university, every object x has property R.",
            "At the university, every object x has property P.",
            "At the university, if an object x has property U, then it has property T.",
            "At the university, every object x has property Q.",
            "At the university, if it is true that if an object x has property U then it has property T, then every object x has property P.",
            "At the university, if every object x has property R, then there exists at least one object x that has property Q.",
            "At the university, if it is true that if an object x having property U implies it has property T then every object x has property P, then every object x has property P.",
            "At the university, if an object x does not have property U, then it does not have property R.",
            "At the university, if an object x does not have property S, then it does not have property P.",
            "At the university, if an object x does not have property Q, then it does not have property S."
        ],
        "premises-FOL": [
            "∀x (U(x) → P(x))",
            "∃x Q(x)",
            "∀x S(x)",
            "∀x (¬Q(x) → ¬U(x))",
            "∀x R(x)",
            "∀x P(x)",
            "∀x (U(x) → T(x))",
            "∀x Q(x)",
            "(∀x (U(x) → T(x)) → ∀x P(x))",
            "(∀x R(x) → ∃x Q(x))",
            "((∀x (U(x) → T(x)) → ∀x P(x)) → ∀x P(x))",
            "∀x (¬U(x) → ¬R(x))",
            "∀x (¬S(x) → ¬P(x))",
            "∀x (¬Q(x) → ¬S(x))"
        ],
        "questions": [
            "Based on the above premises provided in the context of a university, which of the following statements can be logically deduced if we know that if an object x has property U, then it has property T?\nA. It is not true that if an object having property U implies it has property T then every object has property P.\nB. If it is true that if an object having property U implies it has property T then every object has property P, then every object has property P.\nC. It is both true and not true that if an object having property U implies it has property T then every object has property P.\nD. If it is true that if an object having property U implies it has property T then every object has property P, then it is indeed true that if an object having property U implies it has property T then every object has property P.",
            "If every object has property R, does it follow that there exists at least one object with property Q?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                6,
                9,
                11
            ],
            [
                5,
                10
            ]
        ],
        "explanation": [
            "From premise 7 (If an object x has property U, then it has property T), we know ∀x (U(x) → T(x)). From premise 9, if it is true that if an object x has property U then it has property T, then every object x has property P (∀x (U(x) → T(x)) → ∀x P(x)). From premise 11, if it is true that if an object x having property U implies it has property T then every object x has property P, then every object x has property P ((∀x (U(x) → T(x)) → ∀x P(x)) → ∀x P(x)). Since premise 7 states that if an object has property U then it has property T, premise 9's antecedent is true, so the consequent must be true. Therefore, premise 11's antecedent is true, so the consequent must be true. Therefore, if it is true that if an object having property U implies it has property T then every object has property P, then every object has property P (option B).",
            "From premise 5 (Every object x has property R), we know ∀x R(x). From premise 6, every object x has property P (∀x P(x)). From premise 10, if every object x has property R, then there exists at least one object x that has property Q (∀x R(x) → ∃x Q(x)). Since premise 5 states that all objects have property R, premise 10's antecedent is true, so the consequent must be true. Therefore, if every object has property R, it follows that there exists at least one object with property Q."
        ]
    },
    {
        "premises-NL": [
            "If a student attends classes regularly, then they will understand the material better.",
            "If a student participates in extracurricular activities, then they will develop social skills.",
            "If a student understands the material, then they will perform well in exams.",
            "If a student participates in extracurricular activities, then they will perform well in exams."
        ],
        "premises-FOL": [
            "ForAll(x, AttendsRegularly(x) → UnderstandsMaterial(x))",
            "ForAll(x, Extracurricular(x) → SocialSkills(x))",
            "ForAll(x, UnderstandsMaterial(x) → PerformsWell(x))",
            "ForAll(x, Extracurricular(x) → PerformsWell(x))"
        ],
        "questions": [
            "Which statement can be inferred?\nA. It is not true that if participating in extracurricular activities helps students develop social skills, then understanding the material will help them perform well in exams.\nB. Both the statement 'if participating in extracurricular activities helps students develop social skills, then understanding the material will help them perform well in exams' and its negation are true.\nC. If participating in extracurricular activities helps students develop social skills, then understanding the material will not help them perform well in exams.\nD. If participating in extracurricular activities helps students develop social skills, then understanding the material will help them perform well in exams.",
            "Which activities contribute to students performing well in exams?\nA. Attending classes regularly, participating in extracurricular activities.\nB. Developing social skills, pursuing interests.\nC. Accessing quality education, understanding material.\nD. Participating in extracurricular activities, pursuing interests."
        ],
        "answers": [
            "D",
            "A"
        ],
        "idx": [
            [
                2,
                3
            ],
            [
                1,
                3,
                4
            ]
        ],
        "explanation": [
            "Premise 2 states extracurricular activities lead to social skills, and premise 3 states understanding material leads to exam performance, so if the former holds, the latter does too, making option D correct.",
            "Premise 1 states regular attendance leads to understanding, premise 3 states understanding leads to exam performance, and premise 4 states extracurricular activities lead to exam performance, so option A is correct."
        ]
    },
    {
        "premises-NL": [
            "There exists at least one student who has qualified for the Quantum Physics competition.",
            "All students are enrolled in Research Methods.",
            "If a student receives a Scholarship, then they are enrolled in Research Methods.",
            "If a student is enrolled in Research Methods, then they have qualified for the Quantum Physics competition.",
            "If there exists at least one student who has completed the Thesis Writing course, then all students are enrolled in Research Methods.",
            "All students have completed the Thesis Writing course.",
            "If a student does not receive a Scholarship, then they have not qualified for the Quantum Physics competition."
        ],
        "premises-FOL": [
            "Exists(x, QualifiesQuantum(x))",
            "ForAll(x, ResearchMethods(x))",
            "ForAll(x, Scholarship(x) → ResearchMethods(x))",
            "ForAll(x, ResearchMethods(x) → QualifiesQuantum(x))",
            "Exists(x, ThesisWriting(x)) → ForAll(x, ResearchMethods(x))",
            "ForAll(x, ThesisWriting(x))",
            "ForAll(x, ¬Scholarship(x) → ¬QualifiesQuantum(x))"
        ],
        "questions": [
            "Which statement can be inferred?\nA. It is both true and false that if there exists at least one student who has completed the Thesis Writing course, then all students are enrolled in Research Methods.\nB. It is false that if there exists at least one student who has completed the Thesis Writing course, then all students are enrolled in Research Methods.\nC. If there exists at least one student who has completed the Thesis Writing course, then all students are enrolled in Research Methods.\nD. If there exists at least one student who has completed the Thesis Writing course, then all students can't enroll in Research Methods.",
            "Do all students qualify for the Quantum Physics competition?"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                2,
                6
            ],
            [
                2,
                4,
                6
            ]
        ],
        "explanation": [
            "Premise 6 states all students completed Thesis Writing, implying at least one did, and premise 2 confirms all students are enrolled in Research Methods, making C correct.",
            "Premise 6 states all students completed Thesis Writing, premise 2 confirms all are enrolled in Research Methods, and premise 4 says Research Methods enrollment leads to qualifying for Quantum Physics, so all students qualify."
        ]
    },
    {
        "premises-NL": [
            "All students are part of the University Honors program.",
            "If a student completes the Thesis Writing course, then they have passed the Philosophy prerequisite.",
            "All students are enrolled in Research Methods.",
            "If a student is enrolled in Research Methods, then they have qualified for the Quantum Physics competition.",
            "If a student completes the Thesis Writing course, then all students are enrolled in Research Methods.",
            "If a student is not part of the University Honors program, then they have not qualified for the Quantum Physics competition.",
            "There exists at least one student who has completed the Thesis Writing course."
        ],
        "premises-FOL": [
            "ForAll(x, UniversityHonors(x))",
            "ForAll(x, ThesisWriting(x) → PhilosophyPrerequisite(x))",
            "ForAll(x, ResearchMethods(x))",
            "ForAll(x, ResearchMethods(x) → QualifiesQuantum(x))",
            "ForAll(x, ThesisWriting(x) → ForAll(y, ResearchMethods(y)))",
            "ForAll(x, ¬UniversityHonors(x) → ¬QualifiesQuantum(x))",
            "Exists(x, ThesisWriting(x))"
        ],
        "questions": [
            "Which statement can be inferred?\nA. If a student doesn't complete the Thesis Writing course, then all students are enrolled in Research Methods.\nB. If a student completes the Thesis Writing course, then all students are enrolled in Research Methods.\nC. It is false that if a student completes the Thesis Writing course, then all students are enrolled in Research Methods.\nD. It is both true and false that if a student completes the Thesis Writing course, then all students are enrolled in Research Methods.",
            "Do all students qualify for the Quantum Physics competition?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                3,
                5,
                7
            ],
            [
                3,
                4
            ]
        ],
        "explanation": [
            "Premise 7 states some student completed Thesis Writing, premise 5 says this implies all students are enrolled in Research Methods, and premise 3 confirms all are enrolled, making B correct.",
            "Premise 3 states all students are enrolled in Research Methods, and premise 4 says this leads to qualifying for the Quantum Physics competition, so all students qualify."
        ]
    },
    {
        "premises-NL": [
            "Every student must complete a community service project to graduate.",
            "Students who participate in study groups tend to have higher grades.",
            "All students have access to online learning resources.",
            "There is at least one student who has received a merit-based scholarship.",
            "If all students complete a community service project, then at least one student has attended an international exchange program.",
            "If all students have access to online learning resources, then they are all enrolled in at least one online course.",
            "Every student is required to take a foreign language course.",
            "All students have participated in at least one extracurricular activity."
        ],
        "premises-FOL": [
            "ForAll(x, CommunityService(x))",
            "ForAll(x, StudyGroups(x) → HigherGrades(x))",
            "ForAll(x, OnlineResources(x))",
            "Exists(x, MeritScholarship(x))",
            "ForAll(x, CommunityService(x)) → Exists(x, InternationalExchange(x))",
            "ForAll(x, OnlineResources(x)) → ForAll(x, EnrolledOnlineCourse(x))",
            "ForAll(x, ForeignLanguage(x))",
            "ForAll(x, Extracurricular(x))"
        ],
        "questions": [
            "Which statement can be inferred?\nA. It is false that if all students have access to online learning resources, then they are all enrolled in at least one online course.\nB. If all students have not access to online learning resources, then they are all enrolled in at least one online course, and this statement is true.\nC. If all students have access to online learning resources, then they are all enrolled in at least one online course.\nD. It is both true and false that if all students have access to online learning resources, then they are all enrolled in at least one online course.",
            "Do all students enroll in online courses?"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                3,
                6
            ],
            [
                3,
                6
            ]
        ],
        "explanation": [
            "Premise 3 states all students have access to online resources, and premise 6 says this implies all are enrolled in at least one online course, making C correct.",
            "Premise 3 confirms all students have online resource access, and premise 6 states this leads to all being enrolled in online courses, so all students enroll."
        ]
    },
    {
        "premises-NL": [
            "If a student studies a subject for 10 hours or more, they will gain the required knowledge.",
            "If a student gains the required knowledge, they will either pass the exam or complete a project.",
            "If a student does not complete the project, they must take the exam.",
            "If a subject requires an exam, the professor either prepares the exam, or the system generates one.",
            "If a student studies less than 10 hours, they must take the exam.",
            "If a student passes 3 or more subjects, they are eligible for a scholarship.",
            "If a student studies at least 15 hours for a subject, they are exempted from the exam.",
            "If a student gains required knowledge in three subjects but fails to complete a project in any, they must take the exam for those subjects.",
            "If a student studies less than 10 hours but completes the project, they still must take an assessment if the professor requires it."
        ],
        "premises-FOL": [
            "ForAll(x, ForAll(y, Studies(x, y, ≥10) → Knowledge(x, y)))",
            "ForAll(x, ForAll(y, Knowledge(x, y) → (ExamPass(x, y) ∨ Project(x, y))))",
            "ForAll(x, ForAll(y, ¬Project(x, y) → ExamTake(x, y)))",
            "ForAll(y, RequiresExam(y) → (ProfessorPrepares(y) ∨ SystemGenerates(y)))",
            "ForAll(x, ForAll(y, Studies(x, y, <10) → ExamTake(x, y)))",
            "ForAll(x, PassesSubjects(x, ≥3) → Scholarship(x))",
            "ForAll(x, ForAll(y, Studies(x, y, ≥15) → ¬ExamTake(x, y)))",
            "ForAll(x, (KnowledgeThreeSubjects(x) ∧ ¬ProjectAny(x)) → ExamTakeThree(x))",
            "ForAll(x, ForAll(y, (Studies(x, y, <10) ∧ Project(x, y) ∧ ProfessorRequires(y)) → Assessment(x, y)))"
        ],
        "questions": [
            "What ensures a student avoids taking an exam?\nA. Studying less than 10 hours.\nB. Failing to gain knowledge.\nC. Studying 15 hours or completing a project.\nD. Taking an assessment.",
            "What qualifies a student for a scholarship?"
        ],
        "answers": [
            "C",
            "Passing three or more subjects."
        ],
        "idx": [
            [
                1,
                2,
                7
            ],
            [
                1,
                2,
                6
            ]
        ],
        "explanation": [
            "Premise 7 states studying 15 hours exempts a student from the exam, premise 1 says 10 hours grants knowledge, and premise 2 says knowledge leads to passing the exam or completing a project, so studying 15 hours or completing a project avoids the exam, making C correct.",
            "Premise 1 states studying 10 hours leads to knowledge, premise 2 says knowledge results in passing the exam or project, and premise 6 says passing three or more subjects qualifies for a scholarship."
        ]
    },
    {
        "premises-NL": [
            "Every course contains knowledge.",
            "If a student enrolls in a course and passes it, they will gain knowledge.",
            "If a student gains knowledge from a course, they will have understanding.",
            "If a course has an equivalent alternative, passing the alternative fulfills the prerequisite requirement.",
            "If a student meets all prerequisite requirements and is enrolled in a course, they are allowed to take the course.",
            "Tuan is enrolled in the 'Machine Learning 101' course in semester 243.",
            "To take the 'Machine Learning 101' course, students must pass the 'Linear Algebra' course.",
            "The 'Intro to Linear Algebra' course is considered equivalent to the 'Linear Algebra' course.",
            "Tuan passed the 'Intro to Linear Algebra' course in semester 241."
        ],
        "premises-FOL": [
            "ForAll(x, Course(x) → ContainsKnowledge(x))",
            "ForAll(s, ForAll(c, (Enrolled(s, c) ∧ Passes(s, c)) → GainsKnowledge(s, c)))",
            "ForAll(s, ForAll(c, GainsKnowledge(s, c) → Understanding(s, c)))",
            "ForAll(c, ForAll(d, Equivalent(c, d) → (Passes(s, d) → FulfillsPrerequisite(s, c))))",
            "ForAll(s, ForAll(c, (MeetsPrerequisites(s, c) ∧ Enrolled(s, c)) → AllowedToTake(s, c)))",
            "Enrolled(Tuan, ML101, 243)",
            "ForAll(s, AllowedToTake(s, ML101) → Passes(s, LinearAlgebra))",
            "Equivalent(LinearAlgebra, IntroLinearAlgebra)",
            "Passes(Tuan, IntroLinearAlgebra, 241)"
        ],
        "questions": [
            "Can Tuan take the Machine Learning 101 course?\nA. No, he lacks enrollment.\nB. Yes.\nC. No, he failed Linear Algebra.\nD. Only if he takes another prerequisite.",
            "What allows a student to take a course?"
        ],
        "answers": [
            "B",
            "Meeting prerequisites and enrolling."
        ],
        "idx": [
            [
                4,
                5,
                7,
                8,
                9
            ],
            [
                4,
                5,
                7
            ]
        ],
        "explanation": [
            "Premise 9 states Tuan passed Intro to Linear Algebra, premise 8 confirms its equivalence to Linear Algebra, premise 4 says this fulfills the prerequisite, premise 7 links this to meeting Machine Learning 101 requirements, and premise 5 with premise 6’s enrollment confirms Tuan can take the course, making B correct.",
            "Premise 4 states passing an equivalent course fulfills prerequisites, premise 7 specifies requirements like passing Linear Algebra for Machine Learning 101, and premise 5 says meeting prerequisites and enrolling allows taking a course."
        ]
    },
    {
        "premises-NL": [
            "Every student must complete at least 150 credits to graduate.",
            "If a student fails a core course, they must retake and pass it to graduate.",
            "To register for the Capstone Project, a student must complete Advanced Algorithms and Research Methods.",
            "Advanced Algorithms requires Data Structures and Discrete Mathematics as prerequisites.",
            "If a student earns at least 12 credits per semester and their GPA is 3.0 or higher, they can apply for early graduation.",
            "If a student has not completed all prerequisite courses, they cannot register for any dependent courses.",
            "A student must retake a failed course in the next available semester unless they have special approval to delay.",
            "If a student delays retaking a failed core course without approval, they are ineligible for graduation.",
            "Nam has completed 138 credits and passed Data Structures but not Discrete Mathematics.",
            "Nam earns 15 credits per semester and has a GPA of 3.2.",
            "Nam failed Operating Systems, a core course, and has not retaken it yet."
        ],
        "premises-FOL": [
            "ForAll(x, Graduate(x) → Credits(x, ≥150))",
            "ForAll(x, ForAll(c, CoreCourse(c) ∧ Fails(x, c) → (Retake(x, c) ∧ Passes(x, c) → Graduate(x))))",
            "ForAll(x, Enroll(x, Capstone) → (Completed(x, AdvAlgorithms) ∧ Completed(x, ResearchMethods)))",
            "ForAll(x, Completed(x, AdvAlgorithms) → (Passes(x, DataStructures) ∧ Passes(x, DiscreteMath)))",
            "ForAll(x, (CreditsPerSemester(x, ≥12) ∧ GPA(x, ≥3.0)) → ApplyEarlyGraduation(x))",
            "ForAll(x, ForAll(c, ¬MeetsPrerequisites(x, c) → ¬Enroll(x, c)))",
            "ForAll(x, ForAll(c, Fails(x, c) → (RetakeNext(x, c) ∨ Approval(x, c))))",
            "ForAll(x, ForAll(c, CoreCourse(c) ∧ DelaysRetake(x, c) ∧ ¬Approval(x, c) → ¬Graduate(x)))",
            "Credits(Nam, 138) ∧ Passes(Nam, DataStructures) ∧ ¬Passes(Nam, DiscreteMath)",
            "CreditsPerSemester(Nam, 15) ∧ GPA(Nam, 3.2)",
            "CoreCourse(OperatingSystems) ∧ Fails(Nam, OperatingSystems) ∧ ¬Retake(Nam, OperatingSystems)"
        ],
        "questions": [
            "Can Nam apply for early graduation?\nA. No, insufficient credits.\nB. Yes.\nC. No, low GPA.\nD. Only with special approval.",
            "Can Nam register for Advanced Algorithms?"
        ],
        "answers": [
            "B",
            "No"
        ],
        "idx": [
            [
                1,
                5,
                10
            ],
            [
                4,
                6,
                9
            ]
        ],
        "explanation": [
            "Premise 10 states Nam earns 15 credits per semester with a 3.2 GPA, premise 5 says 12 credits and 3.0 GPA allow applying for early graduation, and premise 1 notes 150 credits for graduation, but Nam’s 138 credits don’t block applying, so B is correct.",
            "Premise 9 states Nam passed Data Structures but not Discrete Math, premise 4 says both are required for Advanced Algorithms, and premise 6 says unmet prerequisites prevent enrollment, so Nam cannot register."
        ]
    },
    {
        "premises-NL": [
            "Every subject contains knowledge.",
            "If a student has knowledge of a subject, they can explain it to their friends.",
            "If a student explains a subject to their friends and the friends understand it, the student has mastered the subject.",
            "If a student masters a subject, they can earn an A or A+.",
            "If a student earns at least five A or A+ grades, they can receive a scholarship.",
            "Tuấn has earned three A grades.",
            "Tuấn has not earned any additional A+ grades.",
            "If a student earns an A in a subject, they must have mastered the subject.",
            "If Tuấn's friends do not understand a subject, Tuấn has not mastered it.",
            "If a student cannot explain a subject, they do not have knowledge of it."
        ],
        "premises-FOL": [
            "ForAll(x, Subject(x) → ContainsKnowledge(x))",
            "ForAll(s, ForAll(x, Knowledge(s, x) → Explain(s, x, Friends)))",
            "ForAll(s, ForAll(x, (Explain(s, x, Friends) ∧ Understand(Friends, x)) → Mastered(s, x)))",
            "ForAll(s, ForAll(x, Mastered(s, x) → (GradeA(s, x) ∨ GradeAPlus(s, x))))",
            "ForAll(s, (Count(GradeA(s, x) ∨ GradeAPlus(s, x), ≥5) → Scholarship(s)))",
            "Count(GradeA(Tuan, x), 3)",
            "Count(GradeAPlus(Tuan, x), 0)",
            "ForAll(s, ForAll(x, GradeA(s, x) → Mastered(s, x)))",
            "ForAll(x, ¬Understand(Friends, x) → ¬Mastered(Tuan, x))",
            "ForAll(s, ForAll(x, ¬Explain(s, x, Friends) → ¬Knowledge(s, x)))"
        ],
        "questions": [
            "Can Tuan receive a scholarship?\nA. Yes, he has five A grades.\nB. No.\nC. Only with A+ grades.\nD. Only if friends understand.",
            "Does Tuan have knowledge of his A-grade subjects?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                5,
                6,
                7
            ],
            [
                2,
                3,
                8
            ]
        ],
        "explanation": [
            "Premise 6 states Tuan has three A grades, premise 7 confirms no A+ grades, and premise 5 requires five A or A+ grades for a scholarship, so Tuan cannot receive it, making B correct.",
            "Premise 8 states earning an A requires mastering the subject, premise 3 links mastery to explaining and friends understanding, and premise 2 says knowledge enables explanation, so Tuan has knowledge of his A-grade subjects."
        ]
    },
    {
        "premises-NL": [
            "If a student earns an A in a subject, they must have mastered the subject.",
            "Every student has mastered the subject.",
            "There exists at least one student who has earned an A+.",
            "Every student can explain the subject to their friends.",
            "Every student has knowledge of the subject.",
            "If a student earns an A in a subject, then there exists at least one student who has earned an A+."
        ],
        "premises-FOL": [
            "ForAll(x, GradeA(x, S) → Mastered(x, S))",
            "ForAll(x, Mastered(x, S))",
            "Exists(x, GradeAPlus(x, S))",
            "ForAll(x, Explain(x, S, Friends))",
            "ForAll(x, Knowledge(x, S))",
            "ForAll(x, GradeA(x, S) → Exists(y, GradeAPlus(y, S)))"
        ],
        "questions": [
            "Do all students earn an A or A+?\nA. Yes, all mastered the subject.\nB. Uncertain.\nC. No, only some earn A+.\nD. Only if they explain it.",
            "What follows if a student earns an A?"
        ],
        "answers": [
            "B",
            "Some student earned an A+."
        ],
        "idx": [
            [
                1,
                2,
                3
            ],
            [
                1,
                2,
                6
            ]
        ],
        "explanation": [
            "Premise 2 states all students mastered the subject, premise 1 says an A requires mastery, and premise 3 confirms some student earned an A+, but no premise guarantees all students earn A or A+, so B is correct.",
            "Premise 1 states earning an A implies mastery, premise 2 confirms all have mastered, and premise 6 says an A implies some student earned an A+, so an A means some earned an A+."
        ]
    },
    {
        "premises-NL": [
            "If a student wants to understand the lesson, they must pay attention to the teacher's lecture.",
            "If a student does not follow the school's rules, they are not considered exemplary.",
            "Every student must do extra exercises at home.",
            "There exists at least one student who wants to understand the lesson.",
            "If a student wants to understand the lesson, then there exists at least one student who does extra exercises at home.",
            "If a student follows the school's rules, they are considered exemplary.",
            "If a student wants to understand the lesson, they are considered exemplary."
        ],
        "premises-FOL": [
            "ForAll(x, WantUnderstand(x) → PayAttention(x))",
            "ForAll(x, ¬FollowRules(x) → ¬Exemplary(x))",
            "ForAll(x, ExtraExercises(x))",
            "Exists(x, WantUnderstand(x))",
            "ForAll(x, WantUnderstand(x) → Exists(y, ExtraExercises(y)))",
            "ForAll(x, FollowRules(x) → Exemplary(x))",
            "ForAll(x, WantUnderstand(x) → Exemplary(x))"
        ],
        "questions": [
            "Which statement can be inferred?\nA. If a student wants to understand the lesson, then there exists at least one student who listens to the teacher's instructions.\nB. It is both true and false that if a student wants to understand the lesson, then there exists at least one student who does extra exercises at home.\nC. It is false that if a student wants to understand the lesson, then there exists at least one student who does extra exercises at home.\nD. If a student wants to understand the lesson, then there exists at least one student who does extra exercises at home.",
            "Do all students who want to understand the lesson pay attention?"
        ],
        "answers": [
            "D",
            "Yes"
        ],
        "idx": [
            [
                3,
                5
            ],
            [
                1,
                3,
                4
            ]
        ],
        "explanation": [
            "Premise 3 states all students do extra exercises, and premise 5 says wanting to understand implies some student does exercises, which is true, making D correct.",
            "Premise 4 states some student wants to understand, premise 1 says wanting to understand requires paying attention, and premise 3 confirms all do exercises, so all who want to understand pay attention."
        ]
    },
    {
        "premises-NL": [
            "If a student does not pass the Algorithms course, then they also do not meet the requirements for the Software Engineering course.",
            "All students are enrolled in the Data Structures course.",
            "All students have completed the Programming Fundamentals module.",
            "All students meet the requirements for the Software Engineering course.",
            "If a student does not complete the Capstone Project, then they do not meet the requirements for Software Engineering.",
            "If a student does not complete the Capstone Project, then they do not fulfill the graduation requirement."
        ],
        "premises-FOL": [
            "ForAll(x, ¬PassAlgorithms(x) → ¬MeetsSE(x))",
            "ForAll(x, EnrolledDataStructures(x))",
            "ForAll(x, CompletedProgFundamentals(x))",
            "ForAll(x, MeetsSE(x))",
            "ForAll(x, ¬CompleteCapstone(x) → ¬MeetsSE(x))",
            "ForAll(x, ¬CompleteCapstone(x) → ¬Graduate(x))"
        ],
        "questions": [
            "Do all students pass Algorithms?",
            "Which conditions would prevent a student from meeting Software Engineering requirements?\nA. Failing Algorithms, not completing Capstone Project.\nB. Not enrolled in Data Structures, failing Algorithms.\nC. Not completing Programming Fundamentals, not completing Capstone Project.\nD. Failing Software Engineering, failing Algorithms."
        ],
        "answers": [
            "Yes",
            "A"
        ],
        "idx": [
            [
                1,
                4
            ],
            [
                1,
                5
            ]
        ],
        "explanation": [
            "Premise 4 states all students meet Software Engineering requirements, and premise 1 states not passing Algorithms prevents meeting those requirements, so all students pass Algorithms.",
            "Premise 1 states failing Algorithms prevents meeting Software Engineering requirements, and premise 5 states not completing the Capstone Project prevents meeting those requirements, so option A is correct."
        ]
    },
    {
        "premises-NL": [
            "If an AI system is transparent, then it can be audited.",
            "If an AI system is not fair, then it is not trustworthy.",
            "All AI systems in this study are fair.",
            "All AI systems in this study are transparent.",
            "If an AI system is fair, then it is trustworthy.",
            "If fairness leads to trustworthiness, then all AI systems must be transparent.",
            "If fairness leads to trustworthiness, then transparency implies auditability.",
            "All AI systems comply with ethical regulations."
        ],
        "premises-FOL": [
            "ForAll(x, Transparent(x) → Auditable(x))",
            "ForAll(x, ¬Fair(x) → ¬Trustworthy(x))",
            "ForAll(x, Fair(x))",
            "ForAll(x, Transparent(x))",
            "ForAll(x, Fair(x) → Trustworthy(x))",
            "(ForAll(x, Fair(x) → Trustworthy(x)) → ForAll(x, Transparent(x)))",
            "(ForAll(x, Fair(x) → Trustworthy(x)) → ForAll(x, Transparent(x) → Auditable(x)))",
            "ForAll(x, Ethical(x))"
        ],
        "questions": [
            "Which statement can be inferred?\nA. If fairness leads to trustworthiness, then transparency implies auditability.\nB. It is false that if fairness leads to trustworthiness, then transparency implies auditability.\nC. It is both true and false that if fairness leads to trustworthiness, then transparency implies auditability.\nD. Not all AI systems are trustworthy.",
            "Are all AI systems trustworthy?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1,
                5,
                7
            ],
            [
                3,
                5
            ]
        ],
        "explanation": [
            "Premise 5 states fairness leads to trustworthiness, premise 7 says this implies transparency leads to auditability, and premise 1 confirms transparency implies auditability, making A correct.",
            "Premise 3 states all AI systems are fair, and premise 5 says fairness implies trustworthiness, so all systems are trustworthy."
        ]
    },
    {
        "premises-NL": [
            "If a student attends the Programming Fundamentals course, then they will be ready for the Advanced Programming course.",
            "All students are required to attend the Advanced Programming course.",
            "All students have completed the Programming Fundamentals course.",
            "If attending the Programming Fundamentals course leads to being ready for the Advanced Programming course, then all students must attend the Programming Fundamentals course.",
            "All students have passed the Mathematics for Computer Science course."
        ],
        "premises-FOL": [
            "ForAll(x, AttendProgFund(x) → ReadyAdvProg(x))",
            "ForAll(x, AttendAdvProg(x))",
            "ForAll(x, PassProgFund(x))",
            "(ForAll(x, AttendProgFund(x) → ReadyAdvProg(x)) → ForAll(x, AttendProgFund(x)))",
            "ForAll(x, PassMathCS(x))"
        ],
        "questions": [
            "Do all students attend Programming Fundamentals?",
            "Which courses have all students passed?\nA. Programming Fundamentals, Mathematics for Computer Science.\nB. Advanced Programming, Programming Fundamentals.\nC. Mathematics for Computer Science, Advanced Programming.\nD. Programming Fundamentals, Advanced Programming, Mathematics for Computer Science."
        ],
        "answers": [
            "Yes",
            "A"
        ],
        "idx": [
            [
                1,
                2,
                4
            ],
            [
                3,
                5
            ]
        ],
        "explanation": [
            "Premise 2 states all students attend Advanced Programming, premise 1 states attending Programming Fundamentals implies readiness for Advanced Programming, and premise 4 states if Fundamentals leads to readiness then all attend Fundamentals, so all students attend Programming Fundamentals.",
            "Premise 3 states all students passed Programming Fundamentals, and premise 5 states all passed Mathematics for Computer Science, so option A is correct."
        ]
    },
    {
        "premises-NL": [
            "All students must comply with the institutional standards.",
            "If a student attends a specific course, they will be required to complete an assignment.",
            "If a student completes the assignment, they will receive a passing grade.",
            "If a student has participated in the assessment process, they will have successfully completed the assignment.",
            "All students have completed the assessment process."
        ],
        "premises-FOL": [
            "ForAll(x, MeetsStandard(x))",
            "ForAll(x, AttendCourse(x) → Assignment(x))",
            "ForAll(x, Assignment(x) → PassGrade(x))",
            "ForAll(x, AssessmentProcess(x) → Assignment(x))",
            "ForAll(x, AssessmentProcess(x))"
        ],
        "questions": [
            "Do all students receive a passing grade?",
            "Which outcomes are guaranteed for all students?\nA. Meeting the standard, completing the assignment, receiving a passing grade.\nB. Meeting the standard, attending the course, receiving a passing grade.\nC. Completing the assignment, assessment process, attending the course.\nD. Receiving a passing grade, meeting the standard, completing training."
        ],
        "answers": [
            "Yes",
            "A"
        ],
        "idx": [
            [
                3,
                4,
                5
            ],
            [
                1,
                3,
                4,
                5
            ]
        ],
        "explanation": [
            "Premise 5 states all students participate in the assessment process, premise 4 states this implies completing the assignment, and premise 3 states completing the assignment implies a passing grade, so all students receive a passing grade.",
            "Premise 1 states all students meet the standard, premise 5 states all participate in the assessment process, premise 4 states this implies completing the assignment, and premise 3 states completing the assignment implies a passing grade, so option A is correct."
        ]
    },
    {
        "premises-NL": [
            "If students receive low grades, it may indicate insufficient effort, decreasing motivation, frustration, and anxiety, or they might seek additional support.",
            "If students reflect on their low grades, they will take proactive steps to improve.",
            "If students take proactive steps to improve, they will increase their study hours and focus more on their weaknesses.",
            "If students don't take proactive steps to improve, they won't increase their study hours and focus more on their weaknesses."
        ],
        "premises-FOL": [
            "∀x (L(x) → ((E(x) ∧ M(x) ∧ F(x) ∧ A(x)) ∨ S(x)))",
            "∀x (R(x) → P(x))",
            "∀x (P(x) → (H(x) ∧ W(x)))",
            "∀x (¬P(x) → (¬H(x) ∧ ¬W(x)))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. ∀x (R(x) → (H(x) ∧ W(x)))\nB. ∀x (P(x) → ¬W(x))\nC. ∀x (R(x) → ¬H(x))\nD. ∀x (¬P(x) → (H(x) ∧ ¬S(x)))",
            "Based on the above premises, is the following statement true?\nStatement: If students receive low grades, they will seek additional support."
        ],
        "answers": [
            "A",
            "No"
        ],
        "idx": [
            [
                2,
                3
            ],
            [
                1
            ]
        ],
        "explanation": [
            "The statement that if students reflect on their low grades, they will increase study hours and focus on weaknesses follows because reflecting leads to proactive steps (premise 2), which include increasing study hours and focusing on weaknesses (premise 3).",
            "The statement that if students receive low grades, they will seek additional support is not true because low grades may lead to negative outcomes or support, but support is not guaranteed (premise 1)."
        ]
    },
    {
        "premises-NL": [
            "If a student spends time learning, then they will grow.",
            "If a person is not teaching, then they cannot learn.",
            "Everyone is a student.",
            "There exists a teacher.",
            "If a person is not a student, then they cannot teach.",
            "If not teaching leads to not learning, then there exists someone who is learning.",
            "If everyone is a student, then having knowledge leads to receiving education.",
            "There exists someone who has graduated.",
            "If a person has graduated, then they have knowledge.",
            "Learning leads to the development of critical thinking and problem-solving skills."
        ],
        "premises-FOL": [
            "∀x (S(x) ∧ L(x) → G(x))",
            "∀x (¬T(x) → ¬L(x))",
            "∀x S(x)",
            "∃x T(x)",
            "∀x (¬S(x) → ¬T(x))",
            "∀x (¬T(x) → ¬L(x)) → ∃x L(x)",
            "∀x S(x) → ∀x (K(x) → E(x))",
            "∃x D(x)",
            "∀x (D(x) → K(x))",
            "∀x (L(x) → (C(x) ∧ P(x)))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. ∀x (L(x) → (C(x) ∧ P(x) ∧ G(x)))\nB. ∀x (L(x) → ¬G(x))\nC. ∀x (S(x) → ¬L(x))\nD. ∀x (K(x) → ¬E(x))",
            "Based on the above premises, is the statement true?\nStatement: It is not true that if a student learns, they will grow."
        ],
        "answers": [
            "A",
            "No"
        ],
        "idx": [
            [
                1,
                3,
                10
            ],
            [
                1,
                3
            ]
        ],
        "explanation": [
            "The statement that if a student learns, they develop critical thinking, problem-solving skills, and growth follows because learning leads to critical thinking and problem-solving (premise 10) and, since everyone is a student (premise 3), learning also leads to growth (premise 1).",
            "The statement that it is not true that if a student learns, they will grow is false because, since everyone is a student (premise 3), learning leads to growth (premise 1)."
        ]
    },
    {
        "premises-NL": [
            "If a person is a student, then they must attend classes regularly.",
            "If a person is not a student, then they cannot attend classes.",
            "John is a student.",
            "John attends classes regularly.",
            "Sarah is not a student.",
            "If a student attends classes regularly, they will gain knowledge.",
            "Knowledge gained in class can lead to a better future.",
            "There is a limit to the number of students who can attend each class.",
            "Students who miss more than 3 classes per semester will be penalized.",
            "John has missed no classes this semester."
        ],
        "premises-FOL": [
            "∀x (S(x) → A(x))",
            "∀x (¬S(x) → ¬A(x))",
            "S(John)",
            "A(John)",
            "¬S(Sarah)",
            "∀x (S(x) ∧ A(x) → K(x))",
            "∀x (K(x) → F(x))",
            "∀c ∃n (MaxStudents(c, n))",
            "∀x (S(x) ∧ M(x) > 3 → P(x))",
            "M(John) = 0"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. ∀x (S(x) ∧ A(x) → F(x))\nB. ¬K(John)\nC. ∀x (M(x) > 0 → ¬K(x))\nD. A(Sarah)",
            "Based on the premises, is the following statement true?\nStatement: John has missed more than 3 classes this semester."
        ],
        "answers": [
            "A",
            "No"
        ],
        "idx": [
            [
                6,
                7
            ],
            [
                10
            ]
        ],
        "explanation": [
            "The statement that if a student attends classes regularly, they will have a better future follows because regular attendance leads to knowledge (premise 6), which can lead to a better future (premise 7).",
            "The statement that John has missed more than 3 classes this semester is false because John has missed no classes (premise 10)."
        ]
    },
    {
        "premises-NL": [
            "If you are a student of the school and have a valid library card, you can borrow books.",
            "If you return books overdue, you will be fined.",
            "If you are fined, you cannot borrow books.",
            "An is a student of the school.",
            "An has a valid library card.",
            "An returned books overdue."
        ],
        "premises-FOL": [
            "∀x ((S(x) ∧ V(x)) → B(x))",
            "∀x (O(x) → F(x))",
            "∀x (F(x) → ¬B(x))",
            "S(An)",
            "V(An)",
            "O(An)"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. ∀x (O(x) → ¬B(x))\nB. B(An)\nC. ¬F(An)\nD. ¬O(An)",
            "Based on the premises, is An allowed to borrow books from the school library?"
        ],
        "answers": [
            "A",
            "No"
        ],
        "idx": [
            [
                2,
                3
            ],
            [
                2,
                3,
                6
            ]
        ],
        "explanation": [
            "The statement that if a person returns books overdue, they cannot borrow books follows because returning books overdue leads to a fine (premise 2), and being fined prevents borrowing books (premise 3).",
            "An is not allowed to borrow books because she returned books overdue (premise 6), which leads to a fine (premise 2), and being fined prevents borrowing (premise 3)."
        ]
    },
    {
        "premises-NL": [
            "All students attend lectures.",
            "If a student attends lectures, they participate in group discussions."
        ],
        "premises-FOL": [
            "∀x (Student(x) → AttendsLectures(x))",
            "∀x (Student(x) ∧ AttendsLectures(x) → ParticipatesInGroupDiscussions(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. If a student passes the exam, they participate in group discussions.\nB. Some students don’t participate in group discussions.\nC. All students pass the exam.\nD. No student attends lectures.",
            "Is it true that some student participates in group discussions?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1,
                2
            ],
            [
                1,
                2
            ]
        ],
        "explanation": [
            "All students attend lectures (premise 1), and attending lectures means participating in group discussions (premise 2). Thus, any student who passes the exam also participates in discussions, making option A true.",
            "All students attend lectures (premise 1), and lecture attendance leads to group discussion participation (premise 2). Since there are students, some must participate in discussions, making the statement true."
        ]
    },
    {
        "premises-NL": [
            "All students attend lectures.",
            "If a student attends lectures, they participate in group discussions."
        ],
        "premises-FOL": [
            "∀x (Student(x) → AttendsLectures(x))",
            "∀x (Student(x) ∧ AttendsLectures(x) → ParticipatesInGroupDiscussions(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. If a student passes the exam, they participate in group discussions.\nB. Some students don’t participate in group discussions.\nC. All students pass the exam.\nD. No student attends lectures.",
            "Is it true that some student participates in group discussions?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1,
                2
            ],
            [
                1,
                2
            ]
        ],
        "explanation": [
            "All students attend lectures (premise 1), and attending lectures means participating in group discussions (premise 2). Thus, any student who passes the exam also participates in discussions, making option A true.",
            "All students attend lectures (premise 1), and lecture attendance leads to group discussion participation (premise 2). Since there are students, some must participate in discussions, making the statement true."
        ]
    },
    {
        "premises-NL": [
            "If a student wants to understand the lesson, they pay attention to the lecture.",
            "If a student wants to understand the lesson, they do extra exercises at home.",
            "If some student does extra exercises at home, then some student pays attention to the lecture."
        ],
        "premises-FOL": [
            "∀x (Student(x) ∧ WantsToUnderstand(x) → PaysAttention(x))",
            "∀x (Student(x) ∧ WantsToUnderstand(x) → DoesExtraExercises(x))",
            "∃x (Student(x) ∧ DoesExtraExercises(x)) → ∃x (Student(x) ∧ PaysAttention(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. If some student does extra exercises, all students who want to understand the lesson pay attention.\nB. Some students don’t pay attention to the lecture.\nC. All students do extra exercises.\nD. No student wants to understand the lesson.",
            "Is it true that a student who wants to understand the lesson pays attention and does extra exercises?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1,
                2
            ],
            [
                1,
                2
            ]
        ],
        "explanation": [
            "If a student wants to understand the lesson, they must pay attention (premise 1) and do extra exercises (premise 2). If some student does exercises, the rule that wanting to understand leads to paying attention still holds, making option A true.",
            "A student who wants to understand the lesson must pay attention to the lecture (premise 1) and do extra exercises at home (premise 2). Thus, they do both, making the statement true."
        ]
    },
    {
        "premises-NL": [
            "If a student participates in a class, they will register for it.",
            "Every student is enrolled in at least one course.",
            "If a student is not enrolled in a course, they are not participating in it.",
            "There exists at least one student who participates in a course.",
            "If a student is enrolled in a course, they must complete the assignments.",
            "If every student participates in a course, then if a student is enrolled, they must complete the assignments.",
            "If it is true that every student participates in a course and if a student is enrolled, they must complete the assignments, then every student participates in a course.",
            "If a student is enrolled in a course, they must attend the class.",
            "Every student is required to attend the class in the course they are enrolled in."
        ],
        "premises-FOL": [
            "∀x (P(x) → R(x))",
            "∀x E(x)",
            "∀x (¬E(x) → ¬P(x))",
            "∃x P(x)",
            "∀x (E(x) → A(x))",
            "∀x P(x) → ∀x (E(x) → A(x))",
            "(∀x P(x) ∧ ∀x (E(x) → A(x))) → ∀x P(x)",
            "∀x (E(x) → T(x))",
            "∀x (E(x) → T(x))"
        ],
        "questions": [
            "Based on the above premises, which of the following statements can be inferred?\nA. ∀x (P(x) → (A(x) ∧ T(x)))\nB. ∀x (P(x) → ¬A(x))\nC. ¬∀x P(x)\nD. ∀x (E(x) → ¬T(x))",
            "According to the above premises, is the following statement true?\nStatement: If every student participates in a course, then if a student is enrolled, they must complete the assignments."
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                3,
                5,
                8
            ],
            [
                5
            ]
        ],
        "explanation": [
            "The statement that if a student participates in a course, they complete assignments and attend class follows because participation implies enrollment (premise 3), enrollment requires completing assignments (premise 5), and enrollment requires attending class (premise 8).",
            "The statement that if every student participates in a course, then enrolled students must complete assignments is true because every enrolled student must complete assignments (premise 5)."
        ]
    },
    {
        "premises-NL": [
            "If a teacher uses various instructional methods, they address diverse student learning needs.",
            "If a teacher manages their classroom well, they promote a respectful learning environment.",
            "If a teacher uses instructional methods and manages their classroom, they understand pedagogical principles."
        ],
        "premises-FOL": [
            "∀x (Teacher(x) ∧ UsesInstructionalMethods(x) → AddressesDiverseLearningNeeds(x))",
            "∀x (Teacher(x) ∧ ManagesClassroom(x) → PromotesLearningEnvironment(x))",
            "∀x (Teacher(x) ∧ UsesInstructionalMethods(x) ∧ ManagesClassroom(x) → UnderstandsPedagogicalPrinciples(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. An effective teacher understands how to teach well.\nB. All teachers use the same teaching methods.\nC. No teacher manages their classroom.\nD. Some teachers don’t address student needs.",
            "Is it true that a teacher who addresses diverse student needs understands teaching principles?"
        ],
        "answers": [
            "A",
            "Uncertain"
        ],
        "idx": [
            [
                1,
                2,
                3
            ],
            [
                1,
                3
            ]
        ],
        "explanation": [
            "Using various instructional methods addresses student needs (premise 1), and good classroom management promotes a learning environment (premise 2). Together, these practices show an understanding of teaching principles (premise 3), so an effective teacher understands how to teach well, making option A true.",
            "Addressing diverse student needs suggests using instructional methods (premise 1), and using methods with good classroom management implies understanding teaching principles (premise 3). However, we can’t confirm all such teachers manage their classrooms well, so the statement’s truth is uncertain."
        ]
    },
    {
        "premises-NL": [
            "There exists at least one student who participated in the online training session.",
            "There exists at least one student who signed the academic integrity agreement.",
            "If a student did not submit the final report, then they did not receive course recognition.",
            "If a student attended the training session, then they submitted the final report.",
            "If a student did not attend the training session, then they did not submit the final report.",
            "If students who did not attend the training session also failed to submit the final report, then they did not receive course recognition.",
            "If not attending the training session leads to not submitting the final report, then some students must have signed the academic integrity agreement.",
            "If a student did not attend the training session, then they did not submit the final project either.",
            "If a student did not sign the academic integrity agreement, then they did not receive course recognition."
        ],
        "premises-FOL": [
            "∃x A(x)",
            "∃x S(x)",
            "∀x (¬F(x) → ¬R(x))",
            "∀x (A(x) → F(x))",
            "∀x (¬A(x) → ¬F(x))",
            "∀x ((¬A(x) ∧ ¬F(x)) → ¬R(x))",
            "∀x (¬A(x) → ¬F(x)) → ∃x S(x)",
            "∀x (¬A(x) → ¬P(x))",
            "∀x (¬S(x) → ¬R(x))"
        ],
        "questions": [
            "Based on the above premises, which statement can be logically inferred?\nA. ∀x (¬A(x) → (¬R(x) ∧ ¬P(x)))\nB. ∃x (¬A(x) ∧ F(x))\nC. ∀x (A(x) → ¬R(x))\nD. ∀x (¬S(x) → F(x))",
            "Based on the above premises, is the following statement true?\nStatement: If a student did not sign the academic integrity agreement, then they did not receive course recognition."
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                3,
                5,
                8
            ],
            [
                9
            ]
        ],
        "explanation": [
            "The statement that if a student did not attend the training session, they did not receive course recognition nor submit the final project follows because non-attendance leads to not submitting the final report (premise 5), which prevents recognition (premise 3), and non-attendance also prevents submitting the final project (premise 8).",
            "The statement that if a student did not sign the academic integrity agreement, they did not receive course recognition is true because it is explicitly stated (premise 9)."
        ]
    },
    {
        "premises-NL": [
            "If a student hasn’t submitted their final project, they don’t meet the Research Skills requirement.",
            "If a student meets the Research Skills requirement, they’ve presented in a research seminar."
        ],
        "premises-FOL": [
            "∀x (Student(x) ∧ ¬SubmittedFinalProject(x) → ¬MeetsResearchSkills(x))",
            "∀x (Student(x) ∧ MeetsResearchSkills(x) → PresentedInSeminar(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. If a student hasn’t submitted their final project, they haven’t presented in a research seminar.\nB. All students have presented in a research seminar.\nC. Some students don’t meet the Research Skills requirement.\nD. No student has submitted their final project.",
            "Is it true that a student who hasn’t submitted their final project has presented in a research seminar?"
        ],
        "answers": [
            "A",
            "No"
        ],
        "idx": [
            [
                1,
                2
            ],
            [
                1,
                2
            ]
        ],
        "explanation": [
            "If a student hasn’t submitted their final project, they don’t meet the Research Skills requirement (premise 1), and without meeting that requirement, they haven’t presented in a research seminar (premise 2). Thus, option A is true.",
            "A student who hasn’t submitted their final project doesn’t meet the Research Skills requirement (premise 1), and meeting that requirement is necessary to present in a research seminar (premise 2). Therefore, they haven’t presented, so the statement is false."
        ]
    },
    {
        "premises-NL": [
            "There exists at least one student who has passed the prerequisite course in programming.",
            "If a student does not meet the minimum grade requirement, they are not allowed to proceed to advanced courses.",
            "All students are required to complete the foundational courses before proceeding to specialized courses.",
            "If a student has not passed the core course, they cannot proceed with the elective courses.",
            "If a student has not completed the prerequisite course, they are not allowed to enroll in any advanced courses.",
            "If a student has passed the prerequisite course, they are allowed to proceed to specialized courses.",
            "If a student has completed the foundational courses, then they must have met the prerequisites for elective courses.",
            "If a student has failed to meet the required standards, they cannot participate in the final project preparation.",
            "There exists at least one student who is eligible to participate in the final project preparation."
        ],
        "premises-FOL": [
            "∃x P(x)",
            "∀x (¬G(x) → ¬A(x))",
            "∀x (S(x) → F(x))",
            "∀x (¬C(x) → ¬E(x))",
            "∀x (¬Q(x) → ¬A(x))",
            "∀x (P(x) → S(x))",
            "∀x (F(x) → E(x))",
            "∀x (¬R(x) → ¬J(x))",
            "∃x J(x)"
        ],
        "questions": [
            "Based on the above premises, which statement can be logically inferred?\nA. ∀x (P(x) → E(x))\nB. ∀x (F(x) → ¬E(x))\nC. ∃x (¬R(x) ∧ J(x))\nD. ∀x (¬P(x) → A(x))",
            "Based on the above premises, is the following statement true?\nStatement: If students fail to meet the standards, they must take up the project the following semester."
        ],
        "answers": [
            "A",
            "False"
        ],
        "idx": [
            [
                3,
                6,
                7
            ],
            [
                8
            ]
        ],
        "explanation": [
            "The statement that if a student passed the prerequisite programming course, they meet the prerequisites for elective courses follows because passing the programming course allows proceeding to specialized courses (premise 6), which requires completing foundational courses (premise 3), which in turn implies meeting elective prerequisites (premise 7).",
            "The statement that if students fail to meet the standards, they must take up the project the following semester is false because failing to meet standards prevents participation in the final project (premise 8), and no premise supports a requirement to take it later."
        ]
    },
    {
        "premises-NL": [
            "If a student has passed the prerequisite course, then they are eligible to enroll in the next course.",
            "There exists at least one student who is eligible to enroll in the next course.",
            "All students must complete the required introductory courses.",
            "A student is eligible to enroll in the next course only if they have passed the prerequisite course."
        ],
        "premises-FOL": [
            "∀x (PassedPrerequisite(x) → EligibleToEnroll(x))",
            "∃x EligibleToEnroll(x)",
            "∀x CompletedIntroCourses(x)",
            "∀x (EligibleToEnroll(x) → PassedPrerequisite(x))"
        ],
        "questions": [
            "Which statement about student eligibility follows from the premises?\nA. Some students are eligible without passing the prerequisite.\nB. No student is eligible without passing the prerequisite.\nC. All eligible students have not completed introductory courses.\nD. Passing the prerequisite prevents eligibility.",
            "Is it true that some student who passed the prerequisite is eligible to enroll?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                1,
                4
            ],
            [
                2,
                4
            ]
        ],
        "explanation": [
            "Premise 4 states that eligibility requires passing the prerequisite: ∀x (EligibleToEnroll(x) → PassedPrerequisite(x)), meaning no student can be eligible without passing. Premise 1 (∀x (PassedPrerequisite(x) → EligibleToEnroll(x))) states that passing the prerequisite is sufficient for eligibility. Together, they imply a biconditional: ∀x (PassedPrerequisite(x) ↔ EligibleToEnroll(x)), confirming that eligibility and passing the prerequisite are equivalent. Thus, option B (‘No student is eligible without passing the prerequisite’) is true, as it restates Premise 4’s implication. Option A is false, as Premise 4 ensures no student can be eligible without passing, contradicting ∃x (EligibleToEnroll(x) ∧ ¬PassedPrerequisite(x)). Option C is false, as Premise 3 (∀x CompletedIntroCourses(x)) means all students, including eligible ones, have completed introductory courses, contradicting EligibleToEnroll(x) → ¬CompletedIntroCourses(x). Option D is false, as Premise 1 states that passing implies eligibility, contradicting PassedPrerequisite(x) → ¬EligibleToEnroll(x).",
            "Premise 2 states there exists at least one eligible student: ∃x EligibleToEnroll(x). Premise 4 states that eligibility requires passing the prerequisite: ∀x (EligibleToEnroll(x) → PassedPrerequisite(x)). For some student s where EligibleToEnroll(s) holds (from Premise 2), Premise 4 implies PassedPrerequisite(s) must also hold. Thus, there exists a student s satisfying both PassedPrerequisite(s) and EligibleToEnroll(s), so ∃x (PassedPrerequisite(x) ∧ EligibleToEnroll(x)) is true, confirming the answer ‘Yes’."
        ]
    },
    {
        "premises-NL": [
            "For courses with lab components, a student is allowed to take the exam if their lab score is at least 4.0 out of 10 and all their component scores are greater than 0.",
            "Kelvin’s lab score for CH3002 is at least 4.0 out of 10, and all his component scores for CH3002 are positive.",
            "Students enrolled in multiple courses must submit a project unless the course is taught by Professor X.",
            "CH3002 has three components: Lab, Quiz, and Homework, but Quiz scores are optional for students over 20 years old.",
            "Kelvin is 19 years old and has a Homework score of 7.0 in CH3001, which is unrelated to CH3002.",
            "Professor Y teaches CH3002, and all courses taught by Professor Y have an extra credit option.",
            "Extra credit can increase a student’s total score by up to 2 points, but it doesn’t affect component scores.",
            "Another student, Liam, has a Lab score of 3.5 in CH3002 and is not allowed to take the exam.",
            "Courses with more than 50 students require a midterm, but CH3002 has only 45 students.",
            "Kelvin submitted his CH3002 lab report on time, which is required for lab scores to be valid.",
            "Late submissions reduce a lab score by 1.0, unless the student has a medical excuse.",
            "Liam has a medical excuse for CH3001 but not for CH3002.",
            "CH3002’s final exam is scheduled for December 15th, and all eligible students must attend."
        ],
        "premises-FOL": [
            "∀s ∀c (AllowedToTakeExam(s, c) ↔ (ComponentScore(s, c, Lab) ≥ 4.0 ∧ ∀i ComponentScore(s, c, i) > 0))",
            "ComponentScore(Kelvin, CH3002, Lab) ≥ 4.0",
            "∀i ComponentScore(Kelvin, CH3002, i) > 0",
            "∀s ∀c (Enrolled(s, c) ∧ ¬TaughtBy(c, ProfessorX) → MustSubmitProject(s, c))",
            "Components(CH3002, {Lab, Quiz, Homework})",
            "∀s ∀c (Age(s) > 20 → ¬Required(ComponentScore(s, c, Quiz)))",
            "Age(Kelvin) = 19",
            "ComponentScore(Kelvin, CH3001, Homework) = 7.0",
            "¬Equal(CH3001, CH3002)",
            "TaughtBy(CH3002, ProfessorY)",
            "∀c (TaughtBy(c, ProfessorY) → HasExtraCredit(c))",
            "∀s ∀c (HasExtraCredit(c) → TotalScoreIncrease(s, c) ≤ 2.0 ∧ ¬AffectsComponentScores(s, c))",
            "ComponentScore(Liam, CH3002, Lab) = 3.5",
            "¬AllowedToTakeExam(Liam, CH3002)",
            "∀c (StudentCount(c) > 50 → RequiresMidterm(c))",
            "StudentCount(CH3002) = 45",
            "SubmittedOnTime(Kelvin, CH3002, LabReport)",
            "∀s ∀c (SubmittedOnTime(s, c, LabReport) → Valid(ComponentScore(s, c, Lab)))",
            "∀s ∀c (¬SubmittedOnTime(s, c, LabReport) ∧ ¬HasMedicalExcuse(s, c) → ComponentScore(s, c, Lab) = ComponentScore(s, c, Lab) - 1.0)",
            "HasMedicalExcuse(Liam, CH3001)",
            "¬HasMedicalExcuse(Liam, CH3002)",
            "ExamDate(CH3002, December15)"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred if we know that Kelvin submitted his CH3002 lab report on time?\nA. Kelvin is allowed to take the exam for CH3002.\nB. Liam is allowed to take the exam for CH3002.\nC. Kelvin must submit a project for CH3002.\nD. Kelvin’s Homework score in CH3001 affects his eligibility for CH3002’s exam.",
            "If Kelvin submitted his CH3002 lab report on time, does it follow that Kelvin is allowed to take the exam for CH3002?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1,
                2,
                10,
                17,
                18
            ],
            [
                1,
                2,
                10,
                17,
                18
            ]
        ],
        "explanation": [
            "From premise 17 (Kelvin submitted his CH3002 lab report on time), we know SubmittedOnTime(Kelvin, CH3002, LabReport). From premise 18, if a student submits their lab report on time, their lab score is valid (∀s ∀c (SubmittedOnTime(s, c, LabReport) → Valid(ComponentScore(s, c, Lab)))). Since premise 17 states that Kelvin submitted his lab report on time, premise 18's antecedent is true, so the consequent must be true. From premise 2, Kelvin’s lab score for CH3002 is at least 4.0 out of 10 (ComponentScore(Kelvin, CH3002, Lab) ≥ 4.0). From premise 3, all of Kelvin's component scores for CH3002 are positive (∀i ComponentScore(Kelvin, CH3002, i) > 0). From premise 1, for courses with lab components, a student is allowed to take the exam if their lab score is at least 4.0 out of 10 and all their component scores are greater than 0 (∀s ∀c (AllowedToTakeExam(s, c) ↔ (ComponentScore(s, c, Lab) ≥ 4.0 ∧ ∀i ComponentScore(s, c, i) > 0))). Since premise 2 and premise 3 satisfy the conditions in premise 1, Kelvin is allowed to take the exam for CH3002 (option A).",
            "From premise 17 (Kelvin submitted his CH3002 lab report on time), we know SubmittedOnTime(Kelvin, CH3002, LabReport). From premise 18, if a student submits their lab report on time, their lab score is valid (∀s ∀c (SubmittedOnTime(s, c, LabReport) → Valid(ComponentScore(s, c, Lab)))). Since premise 17 states that Kelvin submitted his lab report on time, premise 18's antecedent is true, so the consequent must be true. From premise 2, Kelvin’s lab score for CH3002 is at least 4.0 out of 10 (ComponentScore(Kelvin, CH3002, Lab) ≥ 4.0). From premise 3, all of Kelvin's component scores for CH3002 are positive (∀i ComponentScore(Kelvin, CH3002, i) > 0). From premise 1, for courses with lab components, a student is allowed to take the exam if their lab score is at least 4.0 out of 10 and all their component scores are greater than 0 (∀s ∀c (AllowedToTakeExam(s, c) ↔ (ComponentScore(s, c, Lab) ≥ 4.0 ∧ ∀i ComponentScore(s, c, i) > 0))). Since premise 2 and premise 3 satisfy the conditions in premise 1, if Kelvin submitted his CH3002 lab report on time, it follows that Kelvin is allowed to take the exam for CH3002."
        ]
    },
    {
        "premises-NL": [
            "Students are allowed to enter the laboratory to conduct experiments only if they have both health insurance and accident insurance.",
            "Lan has both health insurance and accident insurance.",
            "The laboratory is open from 9 AM to 5 PM on weekdays, unless there’s a special event.",
            "Students must wear safety goggles in the lab, but this rule is waived for virtual labs.",
            "Lan is enrolled in Chemistry 101, which requires lab access on Tuesdays.",
            "Another student, Kai, has health insurance but no accident insurance.",
            "Lab equipment must be reserved 24 hours in advance for groups larger than three.",
            "Lan is working alone and doesn’t need to reserve equipment.",
            "All students must complete a safety training course, though Lan completed hers last semester.",
            "The lab supervisor, Dr. Zee, allows extra hours for students with a GPA above 3.5.",
            "Lan’s GPA is 3.8, but she only works during regular hours.",
            "Kai was denied lab access last week due to incomplete paperwork.",
            "Chemistry 101 experiments require a minimum temperature of 20°C in the lab."
        ],
        "premises-FOL": [
            "∀s (AllowedToEnterLab(s) ↔ (HasHealthInsurance(s) ∧ HasAccidentInsurance(s)))",
            "HasHealthInsurance(Lan)",
            "HasAccidentInsurance(Lan)",
            "∀s ((LabOpen(Weekdays, 9AM-5PM) ∧ ¬SpecialEvent) → CanAccessLab(s))",
            "∀s (InLab(s) ∧ ¬VirtualLab → MustWearGoggles(s))",
            "Enrolled(Lan, Chemistry101)",
            "RequiresLabAccess(Chemistry101, Tuesdays)",
            "HasHealthInsurance(Kai)",
            "¬HasAccidentInsurance(Kai)",
            "∀s (GroupSize(s) > 3 → MustReserveEquipment(s, 24Hours))",
            "GroupSize(Lan) = 1",
            "CompletedSafetyTraining(Lan)",
            "∀s ((GPA(s) > 3.5 ∧ Approved(DrZee, s)) → ExtraLabHours(s))",
            "GPA(Lan) = 3.8",
            "WorksRegularHours(Lan)",
            "¬AllowedToEnterLab(Kai)",
            "∀e (Experiment(Chemistry101, e) → LabTemperature ≥ 20)"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred if we know that Lan is enrolled in Chemistry 101?\nA. Lan is allowed to enter the laboratory for Chemistry 101.\nB. Lan is not allowed to enter the laboratory for Chemistry 101.\nC. Kai is allowed to enter the laboratory for Chemistry 101.\nD. Lan must reserve lab equipment for Chemistry 101.",
            "If Lan is enrolled in Chemistry 101, does it follow that Lan is allowed to enter the laboratory for Chemistry 101?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1,
                2,
                6
            ],
            [
                1,
                2,
                6
            ]
        ],
        "explanation": [
            "From premise 6 (Lan is enrolled in Chemistry 101), we know Enrolled(Lan, Chemistry101). From premise 1, students are allowed to enter the laboratory to conduct experiments only if they have both health insurance and accident insurance (∀s (AllowedToEnterLab(s) ↔ (HasHealthInsurance(s) ∧ HasAccidentInsurance(s)))). From premise 2, Lan has health insurance (HasHealthInsurance(Lan)). From premise 3, Lan has accident insurance (HasAccidentInsurance(Lan)). Since premise 2 and premise 3 satisfy the conditions in premise 1, Lan is allowed to enter the laboratory for Chemistry 101 (option A).",
            "From premise 6 (Lan is enrolled in Chemistry 101), we know Enrolled(Lan, Chemistry101). From premise 1, students are allowed to enter the laboratory to conduct experiments only if they have both health insurance and accident insurance (∀s (AllowedToEnterLab(s) ↔ (HasHealthInsurance(s) ∧ HasAccidentInsurance(s)))). From premise 2, Lan has health insurance (HasHealthInsurance(Lan)). From premise 3, Lan has accident insurance (HasAccidentInsurance(Lan)). Since premise 2 and premise 3 satisfy the conditions in premise 1, if Lan is enrolled in Chemistry 101, it follows that Lan is allowed to enter the laboratory for Chemistry 101."
        ]
    },
    {
        "premises-NL": [
            "Full-time students must take at least 14 credits per semester, but in special cases (e.g., weak academic performance or health issues), they can take a minimum of 11 credits for up to 2 semesters.",
            "Part-time (work-study) students must take at least 11 credits per semester, but in special cases (e.g., weak academic performance, health issues, or work reasons), they can take a minimum of 9 credits for up to 3 semesters.",
            "Linh is a full-time student with health issues, taking 12 credits this semester.",
            "This is Linh’s first semester using the special case exception.",
            "Part-time students must submit a work schedule to the registrar each semester.",
            "Full-time students taking fewer than 14 credits must meet with an advisor annually.",
            "Linh is enrolled in a 4-credit lab course and two 4-credit lecture courses.",
            "Another student, Minh, is a part-time student taking 10 credits due to work reasons.",
            "Courses worth more than 3 credits require attendance at 80% of classes.",
            "The university offers a tuition discount for students taking exactly 12 credits.",
            "Linh has not exceeded the 2-semester limit for special cases.",
            "Minh’s employer requires him to work 20 hours per week.",
            "Full-time students must declare a major by their third semester, and Linh is in her second."
        ],
        "premises-FOL": [
            "∀s (FullTimeStudent(s) → (Credits(s) ≥ 14 ∨ (SpecialCase(s) ∧ Credits(s) ≥ 11)))",
            "∀s (PartTimeStudent(s) → (Credits(s) ≥ 11 ∨ (SpecialCase(s) ∧ Credits(s) ≥ 9)))",
            "FullTimeStudent(Linh) ∧ SpecialCase(Linh) ∧ Credits(Linh) = 12",
            "SemesterCountSpecialCase(Linh) = 1",
            "∀s (PartTimeStudent(s) → MustSubmitWorkSchedule(s))",
            "∀s (FullTimeStudent(s) ∧ Credits(s) < 14 → MustMeetAdvisor(s))",
            "Enrolled(Linh, LabCourse) ∧ Credits(LabCourse) = 4",
            "Enrolled(Linh, LectureCourse1) ∧ Credits(LectureCourse1) = 4",
            "Enrolled(Linh, LectureCourse2) ∧ Credits(LectureCourse2) = 4",
            "PartTimeStudent(Minh) ∧ SpecialCase(Minh) ∧ Credits(Minh) = 10",
            "∀c (Credits(c) > 3 → AttendanceRequired(c, 80%))",
            "∀s (Credits(s) = 12 → EligibleForDiscount(s))",
            "SemesterCountSpecialCase(Linh) ≤ 2",
            "WorkHours(Minh) = 20",
            "∀s (FullTimeStudent(s) ∧ Semester(s) ≥ 3 → MustDeclareMajor(s))",
            "Semester(Linh) = 2"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred if we know that Linh is a full-time student with health issues?\nA. Linh is not meeting the credit requirements for full-time students.\nB. Linh is meeting the credit requirements for full-time students.\nC. Linh needs to take more than 12 credits to meet the credit requirements.\nD. Linh is a part-time student.",
            "If Linh is taking exactly 12 credits this semester, does it follow that Linh is eligible for the tuition discount?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                1,
                3,
                13
            ],
            [
                3,
                12
            ]
        ],
        "explanation": [
            "From premise 3 (Linh is a full-time student with health issues, taking 12 credits this semester), we know FullTimeStudent(Linh) ∧ SpecialCase(Linh) ∧ Credits(Linh) = 12. From premise 1, full-time students must take at least 14 credits per semester, but in special cases they can take a minimum of 11 credits for up to 2 semesters (∀s (FullTimeStudent(s) → (Credits(s) ≥ 14 ∨ (SpecialCase(s) ∧ Credits(s) ≥ 11)))). From premise 13, Linh has not exceeded the 2-semester limit for special cases (SemesterCountSpecialCase(Linh) ≤ 2). Since premise 3 states that Linh is a full-time student with a special case and taking 12 credits, and premise 13 states she has not exceeded the limit, premise 1's conditions are met. Therefore, Linh is meeting the credit requirements for full-time students (option B).",
            "From premise 3 (Linh is a full-time student with health issues, taking 12 credits this semester), we know Credits(Linh) = 12. From premise 12, the university offers a tuition discount for students taking exactly 12 credits (∀s (Credits(s) = 12 → EligibleForDiscount(s))). Since premise 3 states that Linh is taking exactly 12 credits, premise 12's antecedent is true, so the consequent must be true. Therefore, if Linh is taking exactly 12 credits this semester, it follows that Linh is eligible for the tuition discount."
        ]
    },
    {
        "premises-NL": [
            "Students must accumulate at least 65% of the total credits of their training program to be eligible for an internship.",
            "The training program has a total of 120 credits.",
            "Hà has accumulated 80 credits in the training program.",
            "Students must submit an internship application by June 1st to be considered.",
            "Hà submitted her application on May 15th.",
            "The training program includes 30 credits of elective courses, but only 20 credits are counted toward the internship requirement.",
            "Another student, Vinh, has accumulated 75 credits and is also in the training program.",
            "Students with a GPA below 2.5 are required to take a remedial course before interning.",
            "Hà’s GPA is 3.2, and she has no remedial requirements.",
            "Internships are offered in two cycles: summer and fall, with summer priority for seniors.",
            "Hà is a junior and applying for a fall internship.",
            "The program advisor must approve all internship applications, and Hà’s was approved.",
            "Vinh missed the application deadline and accumulated only 10 elective credits."
        ],
        "premises-FOL": [
            "∀s (EligibleForInternship(s) ↔ (AccumulatedCredits(s) ≥ 0.65 * TotalCredits(Program(s))))",
            "TotalCredits(TrainingProgram) = 120",
            "AccumulatedCredits(Hà) = 80",
            "∀s (EligibleForInternship(s) → SubmittedApplication(s, Before(June1)))",
            "SubmittedApplication(Hà, May15)",
            "ElectiveCredits(TrainingProgram) = 30",
            "CountedElectiveCredits(TrainingProgram, Internship) = 20",
            "AccumulatedCredits(Vinh) = 75",
            "Program(Vinh) = TrainingProgram",
            "∀s (GPA(s) < 2.5 → RequiresRemedialCourse(s))",
            "GPA(Hà) = 3.2",
            "¬RequiresRemedialCourse(Hà)",
            "InternshipCycles = {Summer, Fall}",
            "Priority(Summer, Seniors)",
            "Status(Hà) = Junior ∧ ApplyingFor(Hà, Fall)",
            "∀s (EligibleForInternship(s) → ApprovedByAdvisor(s))",
            "ApprovedByAdvisor(Hà)",
            "¬SubmittedApplication(Vinh, Before(June1))",
            "ElectiveCreditsAccumulated(Vinh) = 10"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred if we know that Hà has accumulated 80 credits in the training program?\nA. Hà is eligible for an internship because she has accumulated 80 credits.\nB. Hà is not eligible for an internship due to insufficient credits.\nC. Hà must take remedial courses before applying for the internship.\nD. Hà’s internship application was submitted after June 1st.",
            "If Hà has accumulated 80 credits in the training program, does it follow that Hà has accumulated more than 65% of the total credits required for the internship?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1,
                2,
                3
            ],
            [
                1,
                2,
                3
            ]
        ],
        "explanation": [
            "From premise 3 (Hà has accumulated 80 credits in the training program), we know AccumulatedCredits(Hà) = 80. From premise 2, the training program has a total of 120 credits (TotalCredits(TrainingProgram) = 120). From premise 1, students must accumulate at least 65% of the total credits of their training program to be eligible for an internship (∀s (EligibleForInternship(s) ↔ (AccumulatedCredits(s) ≥ 0.65 * TotalCredits(Program(s))))). Since premise 2 states the total credits are 120, 65% of 120 is 78 credits (0.65 * 120 = 78). Since premise 3 states that Hà has accumulated 80 credits, which is more than 78 credits, premise 1's condition is satisfied. Therefore, Hà is eligible for an internship because she has accumulated 80 credits (option A).",
            "From premise 3 (Hà has accumulated 80 credits in the training program), we know AccumulatedCredits(Hà) = 80. From premise 2, the training program has a total of 120 credits (TotalCredits(TrainingProgram) = 120). From premise 1, students must accumulate at least 65% of the total credits of their training program to be eligible for an internship (∀s (EligibleForInternship(s) ↔ (AccumulatedCredits(s) ≥ 0.65 * TotalCredits(Program(s))))). Since premise 2 states the total credits are 120, 65% of 120 is 78 credits (0.65 * 120 = 78). Since premise 3 states that Hà has accumulated 80 credits, which is more than 78 credits, if Hà has accumulated 80 credits in the training program, it follows that Hà has accumulated more than 65% of the total credits required for the internship."
        ]
    },
    {
        "premises-NL": [
            "Students are ranked based on their average semester scores as follows: Excellent (3.6 to 4.0), Good (3.2 to 3.6), Fair (2.5 to 3.2), Average (2.0 to 2.5), Weak (1.0 to 2.0), Poor (below 1.0).",
            "Phong has an average semester score of 2.3.",
            "Students with an Excellent ranking receive a scholarship of $500 per semester.",
            "Phong is in his third semester and has taken 15 credits this term.",
            "Another student, Hoa, has an average score of 3.7 and is ranked Excellent.",
            "Scores are calculated based on a weighted average of exams (60%) and projects (40%).",
            "Phong scored 2.5 on exams and 2.0 on projects this semester.",
            "Students ranked below Fair must attend a study skills workshop.",
            "The maximum score per course is 4.0, and Phong is enrolled in four courses.",
            "Hoa has a part-time job and still maintains her ranking.",
            "Rankings are reviewed at the end of each semester, with a deadline of December 20th.",
            "Phong submitted his final project on time, avoiding a 0.5-point penalty."
        ],
        "premises-FOL": [
            "∀s ((AverageScore(s) ≥ 3.6 ∧ AverageScore(s) ≤ 4.0) → Ranking(s, Excellent))",
            "∀s ((AverageScore(s) ≥ 3.2 ∧ AverageScore(s) < 3.6) → Ranking(s, Good))",
            "∀s ((AverageScore(s) ≥ 2.5 ∧ AverageScore(s) < 3.2) → Ranking(s, Fair))",
            "∀s ((AverageScore(s) ≥ 2.0 ∧ AverageScore(s) < 2.5) → Ranking(s, Average))",
            "∀s ((AverageScore(s) ≥ 1.0 ∧ AverageScore(s) < 2.0) → Ranking(s, Weak))",
            "∀s (AverageScore(s) < 1.0 → Ranking(s, Poor))",
            "AverageScore(Phong) = 2.3",
            "∀s (Ranking(s, Excellent) → Scholarship(s, 500))",
            "Semester(Phong) = 3 ∧ Credits(Phong) = 15",
            "AverageScore(Hoa) = 3.7 ∧ Ranking(Hoa, Excellent)",
            "∀s (AverageScore(s) = (0.6 * ExamScore(s) + 0.4 * ProjectScore(s)))",
            "ExamScore(Phong) = 2.5 ∧ ProjectScore(Phong) = 2.0",
            "∀s (Ranking(s) ∈ {Average, Weak, Poor} → MustAttendWorkshop(s))",
            "MaxScorePerCourse = 4.0 ∧ EnrolledCourses(Phong) = 4",
            "PartTimeJob(Hoa) ∧ Ranking(Hoa, Excellent)",
            "ReviewDeadline = December20",
            "SubmittedOnTime(Phong, FinalProject) ∧ ¬Penalty(Phong, 0.5)"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred if we know that Phong has an average semester score of 2.3?\nA. Phong has an Excellent ranking.\nB. Phong has a Good ranking.\nC. Phong has an Average ranking.\nD. Phong is ranked Poor.",
            "If Phong has an average semester score of 2.3, does it follow that Phong’s academic ranking is Average?"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                1,
                4
            ],
            [
                1,
                4
            ]
        ],
        "explanation": [
            "From premise 7 (Phong has an average semester score of 2.3), we know AverageScore(Phong) = 2.3. From premise 4, students are ranked as Average if their average score is between 2.0 and 2.5 (∀s ((AverageScore(s) ≥ 2.0 ∧ AverageScore(s) < 2.5) → Ranking(s, Average))). Since premise 7 states that Phong's average score is 2.3, which falls within the range of 2.0 to 2.5, premise 4's condition is satisfied. Therefore, Phong has an Average ranking (option C).",
            "From premise 7 (Phong has an average semester score of 2.3), we know AverageScore(Phong) = 2.3. From premise 4, students are ranked as Average if their average score is between 2.0 and 2.5 (∀s ((AverageScore(s) ≥ 2.0 ∧ AverageScore(s) < 2.5) → Ranking(s, Average))). Since premise 7 states that Phong's average score is 2.3, which falls within the range of 2.0 to 2.5, if Phong has an average semester score of 2.3, it follows that Phong’s academic ranking is Average."
        ]
    },
    {
        "premises-NL": [
            "Students are ranked into academic years based on their accumulated credits (N) compared to the average credits per year (M). For the second year, M ≤ N < 2M and they must meet the foreign language standard for year two.",
            "The average credits per year (M) for regular students is 33.",
            "Tâm has accumulated 40 credits and has met the foreign language standard for year two.",
            "Students in accelerated programs have an average credits per year (M) of 40.",
            "Tâm is enrolled in the regular program, not the accelerated one.",
            "Another student, Nam, has 70 credits but hasn’t met the language standard for year two.",
            "The foreign language standard for year two requires a TOEFL score of at least 500.",
            "Tâm’s TOEFL score is 550, and she submitted it before the October 1st deadline.",
            "Students must complete at least 10 credits of core courses each year, and Tâm has 15 this year.",
            "Nam is in his third semester and has a GPA of 3.0.",
            "Second-year students are eligible for a mentorship program if they apply by November 15th.",
            "Tâm applied for the mentorship program on November 10th.",
            "The regular program includes a total of 132 credits across four years."
        ],
        "premises-FOL": [
            "∀s (SecondYear(s) ↔ ((M ≤ AccumulatedCredits(s) < 2M) ∧ MeetsLanguageStandard(s, YearTwo)))",
            "M = 33",
            "AccumulatedCredits(Tâm) = 40 ∧ MeetsLanguageStandard(Tâm, YearTwo)",
            "M_accelerated = 40",
            "Program(Tâm) = Regular ∧ ¬Program(Tâm) = Accelerated",
            "AccumulatedCredits(Nam) = 70 ∧ ¬MeetsLanguageStandard(Nam, YearTwo)",
            "∀s (MeetsLanguageStandard(s, YearTwo) ↔ TOEFLScore(s) ≥ 500)",
            "TOEFLScore(Tâm) = 550 ∧ SubmittedBefore(Tâm, October1)",
            "∀s (CoreCredits(s, CurrentYear) ≥ 10)",
            "CoreCredits(Tâm, CurrentYear) = 15",
            "Semester(Nam) = 3 ∧ GPA(Nam) = 3.0",
            "∀s (SecondYear(s) ∧ AppliedBefore(s, November15) → EligibleMentorship(s))",
            "AppliedBefore(Tâm, November10)",
            "TotalCredits(RegularProgram) = 132"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred if we know that Tâm has accumulated 40 credits and has met the foreign language standard for year two?\nA. Tâm is a second-year student.\nB. Tâm is in an accelerated program.\nC. Nam meets the language standard for year two.\nD. Tâm is eligible for the mentorship program.",
            "If Tâm has met the foreign language standard for year two, does it follow that Tâm is eligible for the mentorship program?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1,
                2,
                3
            ],
            [
                3,
                12,
                13
            ]
        ],
        "explanation": [
            "From premise 3 (Tâm has accumulated 40 credits and has met the foreign language standard for year two), we know AccumulatedCredits(Tâm) = 40 ∧ MeetsLanguageStandard(Tâm, YearTwo). From premise 2, the average credits per year (M) for regular students is 33 (M = 33). From premise 1, students are ranked as second-year if their accumulated credits are between M and 2M and they meet the language standard (∀s (SecondYear(s) ↔ ((M ≤ AccumulatedCredits(s) < 2M) ∧ MeetsLanguageStandard(s, YearTwo)))). Since premise 2 states that M is 33, 2M is 66 (2 * 33 = 66). Since premise 3 states that Tâm has accumulated 40 credits, which is between 33 and 66, and she has met the language standard, premise 1's condition is satisfied. Therefore, Tâm is a second-year student (option A).",
            "From premise 3 (Tâm has accumulated 40 credits and has met the foreign language standard for year two), we know MeetsLanguageStandard(Tâm, YearTwo). From premise 12, second-year students are eligible for a mentorship program if they apply by November 15th (∀s (SecondYear(s) ∧ AppliedBefore(s, November15) → EligibleMentorship(s))). From premise 13, Tâm applied for the mentorship program on November 10th (AppliedBefore(Tâm, November10)). From premise 1, students are ranked as second-year if their accumulated credits are between M and 2M and they meet the language standard (∀s (SecondYear(s) ↔ ((M ≤ AccumulatedCredits(s) < 2M) ∧ MeetsLanguageStandard(s, YearTwo)))). From premise 2, the average credits per year (M) for regular students is 33 (M = 33). Since premise 3 states that Tâm has accumulated 40 credits, which is between 33 and 66, and she has met the language standard, premise 1's condition is satisfied, so Tâm is a second-year student. Since premise 13 states that Tâm applied before November 15th, premise 12's conditions are met. Therefore, if Tâm has met the foreign language standard for year two, it follows that Tâm is eligible for the mentorship program."
        ]
    },
    {
        "premises-NL": [
            "Students are ranked into academic years based on their accumulated credits (N) compared to the average credits per year (M). For the third year, 2M ≤ N < 3M and they must meet the foreign language standard for year three.",
            "The average credits per year (M) for regular students is 33.",
            "Phong has accumulated 70 credits and has met the foreign language standard for year three.",
            "The foreign language standard for year three requires an IELTS score of at least 6.0.",
            "Phong’s IELTS score is 6.5, certified last month.",
            "Students in the honors program have an average credits per year (M) of 36.",
            "Phong is in the regular program, not the honors program.",
            "Another student, Lan, has 60 credits and meets the language standard for year two but not year three.",
            "Third-year students must complete a 5-credit capstone project, which Phong has enrolled in.",
            "The regular program requires a total of 132 credits for graduation.",
            "Phong has a GPA of 3.4 and no academic probation history.",
            "Lan missed the language certification deadline of September 30th.",
            "Third-year students can apply for study abroad if they meet the foreign language standard for year three."
        ],
        "premises-FOL": [
            "∀s (ThirdYear(s) ↔ ((2M ≤ AccumulatedCredits(s) < 3M) ∧ MeetsLanguageStandard(s, YearThree)))",
            "M = 33",
            "AccumulatedCredits(Phong) = 70 ∧ MeetsLanguageStandard(Phong, YearThree)",
            "∀s (MeetsLanguageStandard(s, YearThree) ↔ IELTS(s) ≥ 6.0)",
            "IELTS(Phong) = 6.5 ∧ Certified(Phong, LastMonth)",
            "M_honors = 36",
            "Program(Phong) = Regular ∧ ¬Program(Phong) = Honors",
            "AccumulatedCredits(Lan) = 60 ∧ MeetsLanguageStandard(Lan, YearTwo) ∧ ¬MeetsLanguageStandard(Lan, YearThree)",
            "∀s (ThirdYear(s) → Enrolled(s, CapstoneProject) ∧ Credits(CapstoneProject) = 5)",
            "Enrolled(Phong, CapstoneProject)",
            "TotalCredits(RegularProgram) = 132",
            "GPA(Phong) = 3.4 ∧ ¬OnProbation(Phong)",
            "¬CertifiedBefore(Lan, September30)",
            "∀s (ThirdYear(s) ∧ MeetsLanguageStandard(s, YearThree) → EligibleStudyAbroad(s))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred if we know that Phong has accumulated 70 credits and has met the foreign language standard for year three?\nA. Phong is a third-year student.\nB. Phong has not met the foreign language standard for year three.\nC. Lan is eligible for study abroad.\nD. Phong has not completed the capstone project.",
            "If Phong has met the foreign language standard for year three, does it follow that Phong is eligible to apply for study abroad?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1,
                2,
                3
            ],
            [
                3,
                14
            ]
        ],
        "explanation": [
            "From premise 3 (Phong has accumulated 70 credits and has met the foreign language standard for year three), we know AccumulatedCredits(Phong) = 70 ∧ MeetsLanguageStandard(Phong, YearThree). From premise 2, the average credits per year (M) for regular students is 33 (M = 33). From premise 1, students are ranked as third-year if their accumulated credits are between 2M and 3M and they meet the language standard (∀s (ThirdYear(s) ↔ ((2M ≤ AccumulatedCredits(s) < 3M) ∧ MeetsLanguageStandard(s, YearThree)))). Since premise 2 states that M is 33, 2M is 66 (2 * 33 = 66) and 3M is 99 (3 * 33 = 99). Since premise 3 states that Phong has accumulated 70 credits, which is between 66 and 99, and he has met the language standard, premise 1's condition is satisfied. Therefore, Phong is a third-year student (option A).",
            "From premise 3 (Phong has accumulated 70 credits and has met the foreign language standard for year three), we know MeetsLanguageStandard(Phong, YearThree). From premise 14, third-year students can apply for study abroad if they meet the foreign language standard for year three (∀s (ThirdYear(s) ∧ MeetsLanguageStandard(s, YearThree) → EligibleStudyAbroad(s))). From premise 1, students are ranked as third-year if their accumulated credits are between 2M and 3M and they meet the language standard (∀s (ThirdYear(s) ↔ ((2M ≤ AccumulatedCredits(s) < 3M) ∧ MeetsLanguageStandard(s, YearThree)))). From premise 2, the average credits per year (M) for regular students is 33 (M = 33). Since premise 3 states that Phong has accumulated 70 credits, which is between 66 and 99, and he has met the language standard, premise 1's condition is satisfied, so Phong is a third-year student. Since premise 3 states that Phong has met the language standard, premise 14's conditions are met. Therefore, if Phong has met the foreign language standard for year three, it follows that Phong is eligible to apply for study abroad."
        ]
    },
    {
        "premises-NL": [
            "If students join in group work, they develop interpersonal skills.",
            "If students work in groups, then they can share their perspectives and create creative solutions.",
            "If students work in groups, then they can increase motivation and performance.",
            "If students join group work with unequal contribution, then they can frustrate among members.",
            "If students join in a group work with dominant personality, then they will reduce collaboration effectiveness.",
            "If students join in a group with promoting critical thinking, then they can improve their problem solving.",
            "If students struggle with poor group dynamics, then they will be stressed and have lower satisfaction.",
            "If students join a good communicative group, then they have successful collaboration."
        ],
        "premises-FOL": [
            "∀x (Student(x) ∧ ParticipatesInGroupWork(x) → DevelopsInterpersonalSkills(x))",
            "∀x (Student(x) ∧ WorksInGroups(x) → SharesPerspectives(x) ∧ CreativeSolutions(x))",
            "∀x (Student(x) ∧ GroupWork(x) → IncreasedMotivation(x) ∧ ImprovedPerformance(x))",
            "∀x (Student(x) ∧ GroupWork(x) ∧ UnequalContribution(x) → FrustrationAmongMembers(x))",
            "∀x (Student(x) ∧ GroupWork(x) ∧ DominantPersonality(x) → ReducedCollaborationEffectiveness(x))",
            "∀x (Student(x) ∧ GroupWork(x) ∧ PromotesCriticalThinking(x) → ImprovedProblemSolving(x))",
            "∀x (Student(x) ∧ GroupWork(x) ∧ PoorGroupDynamics(x) → Stress(x) ∧ LowerSatisfaction(x))",
            "∀x (Student(x) ∧ GroupWork(x) ∧ GoodCommunication(x) → SuccessfulCollaboration(x))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred if we know that students work in groups?\nA. If students work in groups, then their performance improves.\nB. If students work in groups, then their performance does not improve.\nC. Students working in groups neither gain nor lose performance.\nD. None of the above can be concluded.",
            "If students work in groups, does it follow that it is not true that group work improves student performance?"
        ],
        "answers": [
            "A",
            "No"
        ],
        "idx": [
            [
                3
            ],
            [
                3
            ]
        ],
        "explanation": [
            "From premise 3 (If students work in groups, then they can increase motivation and performance), we know ∀x (Student(x) ∧ GroupWork(x) → IncreasedMotivation(x) ∧ ImprovedPerformance(x)). Since premise 3 states that if students work in groups, their performance improves, if we know that students work in groups, it follows that their performance improves (option A).",
            "From premise 3 (If students work in groups, then they can increase motivation and performance), we know ∀x (Student(x) ∧ GroupWork(x) → IncreasedMotivation(x) ∧ ImprovedPerformance(x)). Since premise 3 states that if students work in groups, their performance improves, if students work in groups, it does not follow that it is not true that group work improves student performance. Therefore, the answer is 'No'."
        ]
    },
    {
        "premises-NL": [
            "If a person is a student, then that person is qualified.",
            "If a person is a teacher, then that person is respected.",
            "There exists at least one person who is prepared.",
            "If a person is respected, then that person is useful.",
            "There exists at least one person who is respected.",
            "If all students being qualified implies that someone is respected, then that implication holds.",
            "If all teachers being respected implies that someone is prepared, then that implication holds.",
            "If a person is not useful, then that person is not a student.",
            "If a person is respected, then that person is also prepared."
        ],
        "premises-FOL": [
            "∀x (S(x) → Q(x))",
            "∀x (T(x) → R(x))",
            "∃x P(x)",
            "∀x (R(x) → U(x))",
            "∃x R(x)",
            "(∀x (S(x) → Q(x)) → ∃x R(x))",
            "(∀x (T(x) → R(x)) → ∃x P(x))",
            "∀x (¬U(x) → ¬S(x))",
            "∀x (R(x) → P(x))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred if we know that if a person is a teacher, then that person is respected?\nA. It is not true that if every teacher is respected, then someone is prepared.\nB. Teachers are respected if they graduate from famous universities.\nC. All teachers are disrespected.\nD. If every teacher is respected, then someone must be prepared.",
            "If every teacher is respected, does it follow that someone is prepared?"
        ],
        "answers": [
            "D",
            "Yes"
        ],
        "idx": [
            [
                2,
                7
            ],
            [
                2,
                7
            ]
        ],
        "explanation": [
            "From premise 2 (If a person is a teacher, then that person is respected), we know ∀x (T(x) → R(x)). From premise 7, if all teachers being respected implies that someone is prepared, then that implication holds (∀x (T(x) → R(x)) → ∃x P(x)). Since premise 2 states that if a person is a teacher, then that person is respected, premise 7's antecedent is true, so the consequent must be true. Therefore, if every teacher is respected, then someone must be prepared (option D).",
            "From premise 2 (If a person is a teacher, then that person is respected), we know ∀x (T(x) → R(x)). From premise 7, if all teachers being respected implies that someone is prepared, then that implication holds (∀x (T(x) → R(x)) → ∃x P(x)). Since premise 2 states that if a person is a teacher, then that person is respected, premise 7's antecedent is true, so the consequent must be true. Therefore, if every teacher is respected, it follows that someone is prepared."
        ]
    },
    {
        "premises-NL": [
            "Every student is participating in the training session.",
            "If a student attends the seminar, they will be eligible for the certification.",
            "If a student is registered for the course, they attend the seminar.",
            "Every student is registered for the course.",
            "If a student attends the seminar, they are participating in the training session.",
            "If a student does not submit assignments, they did not attend the seminar.",
            "Every student completes the course successfully.",
            "If there exists a student participating in the training session, then all students are participating in the training session."
        ],
        "premises-FOL": [
            "∀x T(x)",
            "∀x (S(x) → Q(x))",
            "∀x (R(x) → S(x))",
            "∀x R(x)",
            "∀x (S(x) → T(x))",
            "∀x (¬P(x) → ¬S(x))",
            "∀x U(x)",
            "(∃x T(x) → ∀x T(x))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred if we know that every student is participating in the training session?\nA. It is not true that If a student attends the seminar, they will be eligible for the certification.\nB. It is both true and false that If a student attends the seminar, they will be eligible for the certification.\nC. If a student attends the seminar, they will be eligible for the certification.\nD. If a student attends the seminar, they won't be eligible for the certification.",
            "If every student is participating in the training session, does it follow that if there exists a student participating in the training session, then all students are participating in the training session?"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                2
            ],
            [
                1,
                8
            ]
        ],
        "explanation": [
            "From premise 2 (If a student attends the seminar, they will be eligible for the certification), we know ∀x (S(x) → Q(x)). Since premise 2 directly states the implication, if a student attends the seminar, they will be eligible for the certification (option C).",
            "From premise 1 (Every student is participating in the training session), we know ∀x T(x). From premise 8, if there exists a student participating in the training session, then all students are participating in the training session (∃x T(x) → ∀x T(x)). Since premise 1 states that all students are participating in the training session, premise 8's consequent is true, so the antecedent must be true. Therefore, if every student is participating in the training session, it follows that if there exists a student participating in the training session, then all students are participating in the training session."
        ]
    },
    {
        "premises-NL": [
            "If a student attends the Software Engineering workshop, then they will be ready for the Capstone Project.",
            "There exists at least one student who has passed the course on Computational Thinking.",
            "If a student has completed the User Interface course, then they have also submitted the final project.",
            "If a student has submitted the final project, then they have passed the Technical Writing course.",
            "If a student is not ready for the Capstone Project, then they have not submitted the final project.",
            "If submitting the final project leads to passing Technical Writing, then attending the Software Engineering workshop leads to being ready for the Capstone Project.",
            "If the above implication holds, then submitting the final project leads to passing Technical Writing.",
            "All students have attended the Software Engineering workshop.",
            "There exists at least one student who has submitted the final project."
        ],
        "premises-FOL": [
            "∀x (S(x) → R(x))",
            "∃x Q(x)",
            "∀x (U(x) → P(x))",
            "∀x (P(x) → T(x))",
            "∀x (¬R(x) → ¬P(x))",
            "(∀x (P(x) → T(x)) → ∀x (S(x) → R(x)))",
            "(∀x (P(x) → T(x)) → ∀x (S(x) → R(x)) → ∀x (P(x) → T(x)))",
            "∀x S(x)",
            "∃x P(x)"
        ],
        "questions": [
            "Based on the above premises, which statement can be logically inferred if we know that all students have attended the Software Engineering workshop?\nA. All students have attended the Software Engineering workshop.\nB. It is not true that All students have attended the Software Engineering workshop.\nC. It is both true and false that All students have attended the Software Engineering workshop.\nD. There are 2 students who have not attended the Software Engineering workshop.",
            "If there exists at least one student who has submitted the final project, does it follow that if a student has submitted the final project, then they have passed the Technical Writing course?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                8
            ],
            [
                4,
                9
            ]
        ],
        "explanation": [
            "From premise 8 (All students have attended the Software Engineering workshop), we know ∀x S(x). Since premise 8 directly states that all students have attended the Software Engineering workshop, if we know that all students have attended the Software Engineering workshop, it follows that all students have attended the Software Engineering workshop (option A).",
            "From premise 9 (There exists at least one student who has submitted the final project), we know ∃x P(x). From premise 4, if a student has submitted the final project, then they have passed the Technical Writing course (∀x (P(x) → T(x))). Since premise 9 states that there exists a student who has submitted the final project, premise 4's antecedent can be true for some students, so the consequent must be true for those students. Therefore, if there exists at least one student who has submitted the final project, it follows that if a student has submitted the final project, then they have passed the Technical Writing course."
        ]
    },
    {
        "premises-NL": [
            "If a student has completed the Data Science course, then they are eligible to apply for the Machine Learning course.",
            "There exists at least one student who has completed the Data Structures course.",
            "If a student has completed the Algorithms course, then they have also completed the Data Science course.",
            "If a student has completed the Data Science course, then they have passed the exam on Data Analytics.",
            "If a student is not eligible to apply for the Machine Learning course, then they have not completed the Data Science course.",
            "If completing the Data Science course leads to passing the Data Analytics exam, then completing the Data Science course makes the student eligible to apply for the Machine Learning course.",
            "If the above implication holds, then completing the Data Science course leads to passing the Data Analytics exam.",
            "All students have completed the Data Structures course.",
            "There exists at least one student who has completed the Data Science course."
        ],
        "premises-FOL": [
            "∀x (D(x) → M(x))",
            "∃x C(x)",
            "∀x (A(x) → D(x))",
            "∀x (D(x) → E(x))",
            "∀x (¬M(x) → ¬D(x))",
            "(∀x (D(x) → E(x)) → ∀x (D(x) → M(x)))",
            "(∀x (D(x) → E(x)) → ∀x (D(x) → M(x)) → ∀x (D(x) → E(x)))",
            "∀x C(x)",
            "∃x D(x)"
        ],
        "questions": [
            "Based on the above premises, which statement can be logically inferred if we know that there exists at least one student who has completed the Data Science course?\nA. If the implication from completing the Data Science course to being eligible for the Machine Learning course is valid, then completing the Data Science course leads to passing the Data Analytics exam.\nB. The negation of that implication.\nC. Both the implication and its negation are assumed true, which is a contradiction.\nD. The implication is assumed true and false at the same time.",
            "If there exists at least one student who has completed the Data Science course, does it follow that if a student has completed the Data Science course, then they have passed the Data Analytics exam?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                4,
                6,
                9
            ],
            [
                4,
                9
            ]
        ],
        "explanation": [
            "From premise 9 (There exists at least one student who has completed the Data Science course), we know ∃x D(x). From premise 4, if a student has completed the Data Science course, then they have passed the exam on Data Analytics (∀x (D(x) → E(x))). From premise 6, if completing the Data Science course leads to passing the Data Analytics exam, then completing the Data Science course makes the student eligible to apply for the Machine Learning course (∀x (D(x) → E(x)) → ∀x (D(x) → M(x))). From premise 7, if the above implication holds, then completing the Data Science course leads to passing the Data Analytics exam (∀x (D(x) → E(x)) → ∀x (D(x) → M(x)) → ∀x (D(x) → E(x))). Since premise 9 states that there exists a student who has completed the Data Science course, premise 4's antecedent can be true for some students, so the consequent must be true for those students. Since premise 4 states the implication, premise 6's antecedent is true, so the consequent must be true. Therefore, premise 7's antecedent is true, so the consequent must be true. Therefore, if the implication from completing the Data Science course to being eligible for the Machine Learning course is valid, then completing the Data Science course leads to passing the Data Analytics exam (option A).",
            "From premise 9 (There exists at least one student who has completed the Data Science course), we know ∃x D(x). From premise 4, if a student has completed the Data Science course, then they have passed the exam on Data Analytics (∀x (D(x) → E(x))). Since premise 9 states that there exists a student who has completed the Data Science course, premise 4's antecedent can be true for some students, so the consequent must be true for those students. Therefore, if there exists at least one student who has completed the Data Science course, it follows that if a student has completed the Data Science course, then they have passed the Data Analytics exam."
        ]
    },
    {
        "premises-NL": [
            "If a course includes AI ethics, then students understand responsible AI.",
            "All students in the AI program study AI ethics.",
            "If students understand responsible AI, then they can build trustworthy systems.",
            "All students in the AI program follow the institution’s ethical AI guidelines."
        ],
        "premises-FOL": [
            "ForAll(x, E(x) → U(x))",
            "ForAll(x, E(x))",
            "ForAll(x, U(x) → T(x))",
            "ForAll(x, G(x))"
        ],
        "questions": [
            "Based on the premises, which statement can be inferred?\nA. All students in the AI program can build trustworthy systems.\nB. Some students who study AI ethics cannot build trustworthy systems.\nC. Following ethical guidelines ensures trustworthy systems.\nD. Studying AI ethics is optional for AI program students.",
            "Do all students in the AI program build trustworthy systems, according to the premises?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1,
                2,
                3
            ],
            [
                1,
                2,
                3
            ]
        ],
        "explanation": [
            "Premise 2 states all students study AI ethics, premise 1 states studying AI ethics leads to understanding responsible AI, and premise 3 states understanding leads to building trustworthy systems, so all students can build trustworthy systems, supporting option A. Option B is false because all can build systems. Option C is false because guidelines don’t ensure systems. Option D is false because ethics is mandatory.",
            "Premises 2, 1, and 3 show all students study AI ethics, which leads to understanding responsible AI, which enables building trustworthy systems, so all students can build trustworthy systems, and the answer is Yes."
        ]
    },
    {
        "premises-NL": [
            "If a student has completed the required prerequisite course, they are eligible to enroll in advanced courses.",
            "There exists at least one student who has met the eligibility requirements for advanced courses.",
            "If a student has not met the eligibility requirements, they are not allowed to enroll in the elective courses.",
            "All students must meet the eligibility requirements to enroll in the advanced courses.",
            "If a student has not completed the prerequisite courses, they cannot proceed to the next level of courses.",
            "If a student does not meet the eligibility criteria for advanced courses, they are not allowed to enroll in the elective courses.",
            "If completing the prerequisite course implies eligibility for the advanced courses, then at least one student has the required eligibility.",
            "If a student has completed the foundation course, they are eligible to proceed with the specialization courses.",
            "If a student has failed to meet the standards for a course, they are not allowed to participate in the final project preparation."
        ],
        "premises-FOL": [
            "∀x (R(x) → U(x))",
            "∃x U(x)",
            "∀x (¬U(x) → ¬Q(x))",
            "∀x U(x)",
            "∀x (¬R(x) → ¬S(x))",
            "(∀x (¬U(x) → ¬Q(x)) → ∃x U(x))",
            "(∀x (R(x) → U(x)) → ∃x U(x))",
            "∀x (T(x) → S(x))",
            "∀x (¬T(x) → ¬S(x))"
        ],
        "questions": [
            "Based on the above premises, which statement can be logically inferred if we know that all students must meet the eligibility requirements to enroll in the advanced courses?\nA. It is a tautology that completing the prerequisite course implies eligibility for the advanced courses.\nB. Completing the prerequisite course implies eligibility for advanced courses.\nC. If completing the prerequisite course implies eligibility for advanced courses and its negation holds, then there is a contradiction.\nD. It is not true that completing the prerequisite course implies eligibility for the advanced courses.",
            "If all students must meet the eligibility requirements to enroll in the advanced courses, does it follow that if a student has failed to meet the standards for a course, they are not allowed to participate in the final project preparation?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                1,
                4
            ],
            [
                4,
                9
            ]
        ],
        "explanation": [
            "From premise 4 (All students must meet the eligibility requirements to enroll in the advanced courses), we know ∀x U(x). From premise 1, if a student has completed the required prerequisite course, they are eligible to enroll in advanced courses (∀x (R(x) → U(x))). Since premise 4 states that all students must meet the eligibility requirements, and premise 1 states that completing the prerequisite course leads to eligibility, if all students must meet the eligibility requirements to enroll in the advanced courses, it follows that completing the prerequisite course implies eligibility for advanced courses (option B).",
            "From premise 4 (All students must meet the eligibility requirements to enroll in the advanced courses), we know ∀x U(x). From premise 9, if a student has failed to meet the standards for a course, they are not allowed to participate in the final project preparation (∀x (¬T(x) → ¬S(x))). Since premise 4 states that all students must meet the eligibility requirements, and premise 9 states the implication, if all students must meet the eligibility requirements to enroll in the advanced courses, it follows that if a student has failed to meet the standards for a course, they are not allowed to participate in the final project preparation."
        ]
    },
    {
        "premises-NL": [
            "All students belong to the university.",
            "If a student does not participate in research, then they do not belong to the university.",
            "If a student does not participate in research, then they are not taking the thesis course.",
            "All students are registered.",
            "If a student belongs to the university, then they are taking the thesis course.",
            "All students receive a scholarship.",
            "All students are taking the thesis course."
        ],
        "premises-FOL": [
            "ForAll(x, BelongsToUniversity(x))",
            "ForAll(x, ¬ParticipatesInResearch(x) → ¬BelongsToUniversity(x))",
            "ForAll(x, ¬ParticipatesInResearch(x) → ¬TakesThesisCourse(x))",
            "ForAll(x, IsRegistered(x))",
            "ForAll(x, BelongsToUniversity(x) → TakesThesisCourse(x))",
            "ForAll(x, ReceivesScholarship(x))",
            "ForAll(x, TakesThesisCourse(x))"
        ],
        "questions": [
            "Do all students participate in research?",
            "Which activities do all students perform?\nA. Participating in research, taking thesis course, being registered, receiving scholarship.\nB. Participating in research, being registered, honors program.\nC. Taking thesis course, receiving scholarship, honors program.\nD. Participating in research, taking thesis course, honors program."
        ],
        "answers": [
            "Yes",
            "A"
        ],
        "idx": [
            [
                1,
                2
            ],
            [
                1,
                2,
                4,
                5,
                6
            ]
        ],
        "explanation": [
            "Premise 1 states all students belong to the university, and premise 2 states not participating in research implies not belonging, so all students participate in research.",
            "Premise 1 states all students belong to the university, premise 2 implies all participate in research, premise 4 states all are registered, premise 5 implies all take the thesis course, and premise 6 states all receive a scholarship, so option A is correct."
        ]
    },
    {
        "premises-NL": [
            "If a student completes the capstone project, then they gain teamwork skills.",
            "All students possess problem-solving ability.",
            "If a student does not have teamwork skills, then they do not have critical thinking skills.",
            "All students have communication skills.",
            "All students have critical thinking skills.",
            "If a student does not complete the capstone project, then they do not possess problem-solving ability.",
            "If a student has problem-solving ability, then they have teamwork skills."
        ],
        "premises-FOL": [
            "ForAll(x, CompletesCapstoneProject(x) → GainsTeamworkSkills(x))",
            "ForAll(x, HasProblemSolvingAbility(x))",
            "ForAll(x, ¬GainsTeamworkSkills(x) → ¬HasCriticalThinkingSkills(x))",
            "ForAll(x, HasCommunicationSkills(x))",
            "ForAll(x, HasCriticalThinkingSkills(x))",
            "ForAll(x, ¬CompletesCapstoneProject(x) → ¬HasProblemSolvingAbility(x))",
            "ForAll(x, HasProblemSolvingAbility(x) → GainsTeamworkSkills(x))"
        ],
        "questions": [
            "Do all students complete the capstone project?",
            "Which skills do all students possess?\nA. Problem-solving, communication, critical thinking, teamwork, research skills.\nB. Problem-solving, communication, completing capstone project.\nC. Critical thinking, teamwork, research skills.\nD. Communication, critical thinking, completing capstone project."
        ],
        "answers": [
            "Yes",
            "A"
        ],
        "idx": [
            [
                2,
                6
            ],
            [
                2,
                4,
                5,
                7
            ]
        ],
        "explanation": [
            "Premise 2 states all students have problem-solving ability, and premise 6 states not completing the capstone project implies lacking problem-solving ability, so all students complete the capstone project.",
            "Premise 2 states all students have problem-solving ability, premise 4 states all have communication skills, premise 5 states all have critical thinking skills, and premise 7 states problem-solving implies teamwork skills, so option A is correct."
        ]
    },
    {
        "premises-NL": [
            "All students complete the final project.",
            "If a student has presentation skills, then they receive a certificate.",
            "All students have presentation skills.",
            "If a student writes a thesis, then they receive a certificate.",
            "All students have theoretical knowledge.",
            "If a student has theoretical knowledge, then they write a thesis.",
            "All students receive a certificate."
        ],
        "premises-FOL": [
            "ForAll(x, CompletesFinalProject(x))",
            "ForAll(x, HasPresentationSkills(x) → ReceivesCertificate(x))",
            "ForAll(x, HasPresentationSkills(x))",
            "ForAll(x, WritesThesis(x) → ReceivesCertificate(x))",
            "ForAll(x, HasTheoreticalKnowledge(x))",
            "ForAll(x, HasTheoreticalKnowledge(x) → WritesThesis(x))",
            "ForAll(x, ReceivesCertificate(x))"
        ],
        "questions": [
            "Do all students write a thesis?",
            "Which qualifications do all students possess?\nA. Theoretical knowledge, presentation skills, writing thesis, receiving certificate.\nB. Completing final project, writing thesis, practical experience.\nC. Presentation skills, receiving certificate, practical experience.\nD. Theoretical knowledge, completing final project, presentation skills."
        ],
        "answers": [
            "Yes",
            "A"
        ],
        "idx": [
            [
                5,
                6
            ],
            [
                1,
                3,
                5,
                6,
                7
            ]
        ],
        "explanation": [
            "Premise 5 states all students have theoretical knowledge, and premise 6 states theoretical knowledge implies writing a thesis, so all students write a thesis.",
            "Premise 1 states all students complete the final project, premise 3 states all have presentation skills, premise 5 states all have theoretical knowledge, premise 6 states knowledge implies writing a thesis, and premise 7 states all receive a certificate, so option A is correct."
        ]
    },
    {
        "premises-NL": [
            "All students pass the course.",
            "If a student does not have high attendance, then they do not have good performance.",
            "If a student does not submit assignments, then they do not have good performance.",
            "If a student does not submit their thesis, then they do not pass the course.",
            "If a student submits assignments, then they receive feedback.",
            "If a student passes the course, then they have good performance.",
            "All students have high attendance.",
            "If a student does not receive feedback, then they did not submit assignments."
        ],
        "premises-FOL": [
            "ForAll(x, PassesCourse(x))",
            "ForAll(x, ¬HasHighAttendance(x) → ¬HasGoodPerformance(x))",
            "ForAll(x, ¬SubmitsAssignments(x) → ¬HasGoodPerformance(x))",
            "ForAll(x, ¬SubmitsThesis(x) → ¬PassesCourse(x))",
            "ForAll(x, SubmitsAssignments(x) → ReceivesFeedback(x))",
            "ForAll(x, PassesCourse(x) → HasGoodPerformance(x))",
            "ForAll(x, HasHighAttendance(x))",
            "ForAll(x, ¬ReceivesFeedback(x) → ¬SubmitsAssignments(x))"
        ],
        "questions": [
            "Do all students submit their thesis?",
            "Which traits do all students possess?\nA. Good performance, high attendance, submitting thesis, submitting assignments.\nB. Good performance, submitting thesis, receiving feedback.\nC. High attendance, submitting assignments, receiving feedback.\nD. Passing course, good performance, submitting thesis."
        ],
        "answers": [
            "Yes",
            "A"
        ],
        "idx": [
            [
                1,
                4
            ],
            [
                1,
                3,
                4,
                6,
                7
            ]
        ],
        "explanation": [
            "Premise 1 states all students pass the course, and premise 4 states not submitting a thesis implies not passing, so all students submit their thesis.",
            "Premise 1 states all students pass the course, premise 6 states passing implies good performance, premise 7 states all have high attendance, premise 4 implies all submit their thesis, and premise 3 implies all submit assignments, so option A is correct."
        ]
    },
    {
        "premises-NL": [
            "If a student gives a seminar, then they receive a recommendation.",
            "If a student participates in a project, then they earn a certification.",
            "All students complete the training module.",
            "If a student does not earn a certification, then they did not participate in a project.",
            "All students earn a certification.",
            "If a student participates in a project, then they give a seminar."
        ],
        "premises-FOL": [
            "ForAll(x, GivesSeminar(x) → ReceivesRecommendation(x))",
            "ForAll(x, ParticipatesInProject(x) → EarnsCertification(x))",
            "ForAll(x, CompletesTrainingModule(x))",
            "ForAll(x, ¬EarnsCertification(x) → ¬ParticipatesInProject(x))",
            "ForAll(x, EarnsCertification(x))",
            "ForAll(x, ParticipatesInProject(x) → GivesSeminar(x))"
        ],
        "questions": [
            "Do all students receive a recommendation?",
            "Which activities do all students perform?\nA. Completing training module, participating in project, giving seminar, earning certification.\nB. Completing training module, writing paper, giving seminar.\nC. Participating in project, earning certification, writing paper.\nD. Completing training module, giving seminar, receiving recommendation."
        ],
        "answers": [
            "Yes",
            "A"
        ],
        "idx": [
            [
                1,
                3,
                6
            ],
            [
                3,
                4,
                5,
                6
            ]
        ],
        "explanation": [
            "Premise 3 states all students complete the training module, premise 5 states all earn a certification, premise 4 implies all participate in a project, premise 6 states participating implies giving a seminar, and premise 1 states giving a seminar implies receiving a recommendation, so all students receive a recommendation.",
            "Premise 3 states all students complete the training module, premise 5 states all earn a certification, premise 4 implies all participate in a project, and premise 6 states participating implies giving a seminar, so option A is correct."
        ]
    },
    {
        "premises-NL": [
            "If a student gives a seminar, then they receive a recommendation.",
            "If a student participates in a project, then they earn a certification.",
            "All students complete the training module.",
            "If a student does not earn a certification, then they did not participate in a project.",
            "All students earn a certification.",
            "If a student participates in a project, then they give a seminar."
        ],
        "premises-FOL": [
            "ForAll(x, GivesSeminar(x) → ReceivesRecommendation(x))",
            "ForAll(x, ParticipatesInProject(x) → EarnsCertification(x))",
            "ForAll(x, CompletesTrainingModule(x))",
            "ForAll(x, ¬EarnsCertification(x) → ¬ParticipatesInProject(x))",
            "ForAll(x, EarnsCertification(x))",
            "ForAll(x, ParticipatesInProject(x) → GivesSeminar(x))"
        ],
        "questions": [
            "Do all students receive a recommendation?",
            "Which activities do all students perform?\nA. Completing training module, participating in project, giving seminar, earning certification.\nB. Completing training module, writing paper, giving seminar.\nC. Participating in project, earning certification, writing paper.\nD. Completing training module, giving seminar, receiving recommendation."
        ],
        "answers": [
            "Yes",
            "A"
        ],
        "idx": [
            [
                1,
                3,
                6
            ],
            [
                3,
                4,
                5,
                6
            ]
        ],
        "explanation": [
            "Premise 3 states all students complete the training module, premise 5 states all earn a certification, premise 4 implies all participate in a project, premise 6 states participating implies giving a seminar, and premise 1 states giving a seminar implies receiving a recommendation, so all students receive a recommendation.",
            "Premise 3 states all students complete the training module, premise 5 states all earn a certification, premise 4 implies all participate in a project, and premise 6 states participating implies giving a seminar, so option A is correct."
        ]
    },
    {
        "premises-NL": [
            "If a student does not pass the course, then they did not submit the assignment.",
            "If a student submits their assignment, then they qualify for graduation.",
            "All students attend the university.",
            "All students take the exam.",
            "All students qualify for graduation.",
            "All students pass the course.",
            "If a student completes the research project, then they submit the assignment."
        ],
        "premises-FOL": [
            "ForAll(x, ¬PassesCourse(x) → ¬SubmitsAssignment(x))",
            "ForAll(x, SubmitsAssignment(x) → QualifiesGraduation(x))",
            "ForAll(x, AttendsUniversity(x))",
            "ForAll(x, TakesExam(x))",
            "ForAll(x, QualifiesGraduation(x))",
            "ForAll(x, PassesCourse(x))",
            "ForAll(x, CompletesResearchProject(x) → SubmitsAssignment(x))"
        ],
        "questions": [
            "Do all students submit their assignment?",
            "Which activities do all students perform?\nA. Attending university, taking exam, submitting assignment, passing course, qualifying for graduation.\nB. Attending university, submitting assignment, completing research project.\nC. Taking exam, passing course, completing research project.\nD. Submitting assignment, qualifying for graduation, completing research project."
        ],
        "answers": [
            "Yes",
            "A"
        ],
        "idx": [
            [
                1,
                6
            ],
            [
                1,
                3,
                4,
                5,
                6
            ]
        ],
        "explanation": [
            "Premise 6 states all students pass the course, and premise 1 states not passing implies not submitting the assignment, so all students submit their assignment.",
            "Premise 3 states all students attend the university, premise 4 states all take the exam, premise 6 states all pass the course, premise 1 implies all submit the assignment, and premise 5 states all qualify for graduation, so option A is correct."
        ]
    },
    {
        "premises-NL": [
            "If a student has a GPA ≥ 3.7, then they are eligible for a scholarship.",
            "All students who are eligible for a scholarship submitted a personal statement.",
            "All students show strong academic commitment.",
            "There exists at least one student who published a research paper.",
            "All students have a GPA ≥ 3.7.",
            "All students participated in extracurricular activities.",
            "All students submitted a recommendation letter.",
            "If a student does not show academic commitment, then they did not publish a research paper."
        ],
        "premises-FOL": [
            "ForAll(x, GPA_GTE_3_7(x) → EligibleForScholarship(x))",
            "ForAll(x, EligibleForScholarship(x) → SubmittedStatement(x))",
            "ForAll(x, HasAcademicCommitment(x))",
            "Exists(x, PublishedResearch(x))",
            "ForAll(x, GPA_GTE_3_7(x))",
            "ForAll(x, ParticipatedExtracurricular(x))",
            "ForAll(x, SubmittedRecLetter(x))",
            "ForAll(x, ¬HasAcademicCommitment(x) → ¬PublishedResearch(x))"
        ],
        "questions": [
            "Do all students submit a personal statement?",
            "Which qualifications do all students possess?\nA. GPA ≥ 3.7, eligible for scholarship, submitted personal statement, participated in extracurricular activities, submitted recommendation letter.\nB. GPA ≥ 3.7, submitted personal statement, participated in extracurricular activities, published research paper.\nC. Eligible for scholarship, submitted personal statement, submitted recommendation letter, published research paper.\nD. GPA ≥ 3.7, eligible for scholarship, participated in extracurricular activities, strong academic commitment."
        ],
        "answers": [
            "Yes",
            "A"
        ],
        "idx": [
            [
                1,
                2,
                5
            ],
            [
                1,
                2,
                5,
                6,
                7
            ]
        ],
        "explanation": [
            "Premise 5 states all students have a GPA ≥ 3.7, premise 1 states this implies eligibility for a scholarship, and premise 2 states eligibility implies submitting a personal statement, so all students submit a personal statement.",
            "Premise 5 states all students have a GPA ≥ 3.7, premise 1 states this implies eligibility for a scholarship, premise 2 states eligibility implies submitting a personal statement, premise 6 states all participated in extracurricular activities, and premise 7 states all submitted a recommendation letter, so option A is correct."
        ]
    },
    {
        "premises-NL": [
            "All students are eligible to conduct research.",
            "If a student has completed the training session, then they have submitted a research proposal.",
            "If a student has not submitted a research proposal, then they are not eligible to conduct research.",
            "If a student has not completed the training session, then they are not eligible to conduct research.",
            "If a student has completed the training session, then they have presented at a seminar.",
            "All students meet the qualification criteria."
        ],
        "premises-FOL": [
            "ForAll(x, EligibleForResearch(x))",
            "ForAll(x, CompletedTraining(x) → SubmittedProposal(x))",
            "ForAll(x, ¬SubmittedProposal(x) → ¬EligibleForResearch(x))",
            "ForAll(x, ¬CompletedTraining(x) → ¬EligibleForResearch(x))",
            "ForAll(x, CompletedTraining(x) → PresentedAtSeminar(x))",
            "ForAll(x, MeetsQualification(x))"
        ],
        "questions": [
            "Do all students complete the training session?",
            "Which activities do all students perform?\nA. Completing training session, submitting research proposal, presenting at seminar, meeting qualification criteria.\nB. Completing training session, submitting research proposal, enrolling in research program.\nC. Submitting research proposal, presenting at seminar, meeting qualification criteria.\nD. Completing training session, presenting at seminar, enrolling in research program."
        ],
        "answers": [
            "Yes",
            "A"
        ],
        "idx": [
            [
                1,
                4
            ],
            [
                1,
                2,
                4,
                5,
                6
            ]
        ],
        "explanation": [
            "Premise 1 states all students are eligible to conduct research, and premise 4 states not completing the training session implies not being eligible, so all students complete the training session.",
            "Premise 1 states all students are eligible to conduct research, premise 4 implies all completed the training session, premise 2 states training implies submitting a research proposal, premise 5 states training implies presenting at a seminar, and premise 6 states all meet qualification criteria, so option A is correct."
        ]
    },
    {
        "premises-NL": [
            "All students meet the eligibility criteria for studying abroad.",
            "If a student does not have a high TOEFL score, then they cannot participate in the exchange program.",
            "If a student receives a scholarship, then they have a high TOEFL score.",
            "If a student cannot participate in the exchange program, then they are not eligible to study abroad.",
            "If a student wrote a motivation letter, then they can participate in the exchange program.",
            "If a student did not write a motivation letter, then they are not eligible to study abroad.",
            "If a student is not eligible to study abroad, then they did not write a motivation letter.",
            "If a student applied for exchange, then they can participate in the exchange program."
        ],
        "premises-FOL": [
            "ForAll(x, EligibleForStudyAbroad(x))",
            "ForAll(x, ¬HighTOEFLScore(x) → ¬CanJoinExchange(x))",
            "ForAll(x, ReceivesScholarship(x) → HighTOEFLScore(x))",
            "ForAll(x, ¬CanJoinExchange(x) → ¬EligibleForStudyAbroad(x))",
            "ForAll(x, WroteMotivationLetter(x) → CanJoinExchange(x))",
            "ForAll(x, ¬WroteMotivationLetter(x) → ¬EligibleForStudyAbroad(x))",
            "ForAll(x, ¬EligibleForStudyAbroad(x) → ¬WroteMotivationLetter(x))",
            "ForAll(x, AppliedForExchange(x) → CanJoinExchange(x))"
        ],
        "questions": [
            "Do all students write a motivation letter?",
            "Which activities do all students perform?\nA. Writing a motivation letter, participating in the exchange program, having a high TOEFL score.\nB. Writing a motivation letter, participating in the exchange program, applying for exchange.\nC. Having a high TOEFL score, receiving a scholarship, writing a motivation letter.\nD. Participating in the exchange program, having a high TOEFL score, receiving a scholarship."
        ],
        "answers": [
            "Yes",
            "A"
        ],
        "idx": [
            [
                1,
                6,
                7
            ],
            [
                1,
                2,
                5,
                6,
                7
            ]
        ],
        "explanation": [
            "Premise 1 states all students are eligible to study abroad, premise 6 states not writing a motivation letter implies not being eligible, and premise 7 states not being eligible implies not writing a motivation letter, so all students write a motivation letter.",
            "Premise 1 states all students are eligible to study abroad, premise 6 implies all wrote a motivation letter, premise 5 states writing a motivation letter implies participating in the exchange program, and premise 2 implies participating requires a high TOEFL score, so option A is correct."
        ]
    },
    {
        "premises-NL": [
            "All students in the dual degree program must maintain a GPA of 3.5 or higher.",
            "If a student completes a thesis, then they qualify for the second degree.",
            "If a student does not participate in leadership activities, then they are not eligible for international exchange.",
            "All students are required to complete a capstone project.",
            "All students are eligible for international exchange.",
            "If a student completes the capstone project, then they complete a thesis.",
            "If a student participates in leadership activities, then they are in the dual degree program.",
            "All students are in the dual degree program."
        ],
        "premises-FOL": [
            "ForAll(x, InDualDegree(x) → GPA_GTE_3_5(x))",
            "ForAll(x, CompletedThesis(x) → QualifiesSecondDegree(x))",
            "ForAll(x, ¬ParticipatedLeadership(x) → ¬EligibleForExchange(x))",
            "ForAll(x, CompletedCapstone(x))",
            "ForAll(x, EligibleForExchange(x))",
            "ForAll(x, CompletedCapstone(x) → CompletedThesis(x))",
            "ForAll(x, ParticipatedLeadership(x) → InDualDegree(x))",
            "ForAll(x, InDualDegree(x))"
        ],
        "questions": [
            "Do all students participate in leadership activities?",
            "Which achievements have all students accomplished?\nA. In dual degree program, GPA of 3.5 or higher, completing capstone project, completing thesis, qualifying for second degree.\nB. In dual degree program, completing capstone project, completing thesis, participating in leadership activities.\nC. Completing capstone project, completing thesis, qualifying for second degree, eligible for exchange.\nD. In dual degree program, GPA of 3.5 or higher, completing thesis, eligible for exchange."
        ],
        "answers": [
            "Yes",
            "A"
        ],
        "idx": [
            [
                3,
                5
            ],
            [
                1,
                2,
                4,
                6,
                8
            ]
        ],
        "explanation": [
            "Premise 5 states all students are eligible for international exchange, and premise 3 states not participating in leadership activities implies not being eligible, so all students participate in leadership activities.",
            "Premise 8 states all students are in the dual degree program, premise 1 states this implies a GPA of 3.5 or higher, premise 4 states all complete a capstone project, premise 6 states capstone completion implies thesis completion, and premise 2 states thesis completion implies qualifying for the second degree, so option A is correct."
        ]
    },
    {
        "premises-NL": [
            "All students are enrolled in at least one online course.",
            "All students have access to the learning management system (LMS).",
            "All students attend live sessions.",
            "If a student does not have LMS access, then they cannot view lecture recordings.",
            "All students can view lecture recordings.",
            "There exists at least one student who joins discussion forums.",
            "If a student is enrolled in an online course, then they have LMS access."
        ],
        "premises-FOL": [
            "ForAll(x, EnrolledInOnlineCourse(x))",
            "ForAll(x, HasLMSAccess(x))",
            "ForAll(x, AttendsLiveSession(x))",
            "ForAll(x, ¬HasLMSAccess(x) → ¬CanViewRecordings(x))",
            "ForAll(x, CanViewRecordings(x))",
            "Exists(x, JoinsDiscussionForum(x))",
            "ForAll(x, EnrolledInOnlineCourse(x) → HasLMSAccess(x))"
        ],
        "questions": [
            "Do all students submit their final assignment?",
            "Which activities do all students perform?\nA. Enrolling in an online course, accessing LMS, attending live sessions, viewing lecture recordings.\nB. Enrolling in an online course, accessing LMS, attending live sessions, joining discussion forums.\nC. Enrolling in an online course, viewing lecture recordings, joining discussion forums.\nD. Accessing LMS, attending live sessions, submitting final assignments."
        ],
        "answers": [
            "Uncertain",
            "A"
        ],
        "idx": [
            [
                1,
                2
            ],
            [
                1,
                2,
                3,
                5
            ]
        ],
        "explanation": [
            "Premise 1 states all students are enrolled in an online course, and premise 2 states all have LMS access, but no premise guarantees that all students submit their final assignment, so it is uncertain.",
            "Premise 1 states all students are enrolled in an online course, premise 2 states all have LMS access, premise 3 states all attend live sessions, and premise 5 states all can view lecture recordings, so option A is correct."
        ]
    },
    {
        "premises-NL": [
            "All students have completed the foundational course.",
            "If a student completed the foundational course, then they are eligible for advanced coursework.",
            "If a student is not eligible for advanced coursework, then they did not complete the seminar.",
            "If a student completed the seminar, then they passed the public speaking module.",
            "If a student lacks presentation skills, then they are not eligible for advanced coursework.",
            "If a student is eligible for advanced coursework, then they passed the public speaking module.",
            "If a student completed the foundational course, then they submitted their thesis.",
            "All students have academic communication skills.",
            "All students passed the public speaking module."
        ],
        "premises-FOL": [
            "ForAll(x, CompletedFoundationCourse(x))",
            "ForAll(x, CompletedFoundationCourse(x) → EligibleAdvancedCoursework(x))",
            "ForAll(x, ¬EligibleAdvancedCoursework(x) → ¬CompletedSeminar(x))",
            "ForAll(x, CompletedSeminar(x) → PassedSpeakingModule(x))",
            "ForAll(x, ¬HasPresentationSkills(x) → ¬EligibleAdvancedCoursework(x))",
            "ForAll(x, EligibleAdvancedCoursework(x) → PassedSpeakingModule(x))",
            "ForAll(x, CompletedFoundationCourse(x) → SubmittedThesis(x))",
            "ForAll(x, HasAcademicCommunication(x))",
            "ForAll(x, PassedSpeakingModule(x))"
        ],
        "questions": [
            "Do all students complete the seminar?",
            "Which qualifications do all students possess?\nA. Completed foundational course, eligible for advanced coursework, submitted thesis, passed public speaking module, but not academic communication skills.\nB. Completed foundational course, eligible for advanced coursework, submitted thesis, academic communication skills, passed public speaking module.\nC. Completed foundational course, submitted thesis, academic communication skills, but not eligible for advanced coursework.\nD. Eligible for advanced coursework, academic communication skills, passed public speaking module, but not completed foundational course."
        ],
        "answers": [
            "Yes",
            "B"
        ],
        "idx": [
            [
                1,
                2,
                3
            ],
            [
                1,
                2,
                7,
                8,
                9
            ]
        ],
        "explanation": [
            "Premise 1 states all students completed the foundational course, premise 2 states this implies eligibility for advanced coursework, and premise 3 states not being eligible implies not completing the seminar, so all students complete the seminar.",
            "Premise 1 states all students completed the foundational course, premise 2 states this implies eligibility for advanced coursework, premise 7 states this implies submitting a thesis, premise 8 states all have academic communication skills, and premise 9 states all passed the public speaking module, so option B is correct."
        ]
    },
    {
        "premises-NL": [
            "All students submitted their registration request.",
            "If a student did not complete prerequisite courses, then they cannot register for advanced subjects.",
            "If a student missed the deadline, then they cannot register for any courses.",
            "All students completed the prerequisite verification.",
            "All students added at least one course.",
            "All students successfully registered for courses.",
            "If a student completed the prerequisite check, then they could enroll in waitlisted courses."
        ],
        "premises-FOL": [
            "ForAll(x, SubmittedRegistration(x))",
            "ForAll(x, ¬CompletedPrerequisites(x) → ¬EligibleAdvancedCourse(x))",
            "ForAll(x, ¬MetDeadline(x) → ¬RegisteredAnyCourse(x))",
            "ForAll(x, CompletedPrerequisites(x))",
            "ForAll(x, AddedCourse(x))",
            "ForAll(x, RegisteredAnyCourse(x))",
            "ForAll(x, CompletedPrerequisites(x) → EnrolledWaitlistCourse(x))"
        ],
        "questions": [
            "Which statement follows from the premises?\nA. It is not true that if missing the deadline prevents course registration, then all students submitted their registration requests.\nB. If the statement that missing the deadline prevents registration implies all students submitted registration requests, then that implication holds.\nC. If missing the deadline prevents registering for courses, then all students submitted their registration requests.\nD. The statement that missing the deadline prevents registration implies all students submitted registration requests is both true and false.",
            "Do all students meet the registration deadline?"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                1,
                3,
                6
            ],
            [
                3,
                6
            ]
        ],
        "explanation": [
            "Premise 6 states all students registered for courses, premise 3 states missing the deadline prevents registration, and premise 1 states all students submitted registration requests, making the implication in option C true.",
            "Premise 6 states all students registered for courses, and premise 3 states missing the deadline prevents registration, so all students meet the deadline."
        ]
    },
    {
        "premises-NL": [
            "All students are allowed to enroll in at least one course.",
            "All students enrolled in Calculus I.",
            "If a student registered for Advanced Physics, then they must have passed Classical Mechanics.",
            "If a student did not register for Advanced Physics, then they are not allowed to enroll in any course.",
            "All students passed the prerequisites.",
            "If a student passed Classical Mechanics, then they are allowed to take Data Structures.",
            "If a student is not allowed to enroll, then they cannot take Data Structures.",
            "There exists at least one student registered for Advanced Physics.",
            "All students enrolled in Data Structures.",
            "All students passed Classical Mechanics.",
            "If a student registered for Advanced Physics, then they are allowed to enroll in courses."
        ],
        "premises-FOL": [
            "ForAll(x, CanEnroll(x))",
            "ForAll(x, EnrolledCalculusI(x))",
            "ForAll(x, RegisteredAdvPhysics(x) → PassedClassicalMech(x))",
            "ForAll(x, ¬RegisteredAdvPhysics(x) → ¬CanEnroll(x))",
            "ForAll(x, PassedPrerequisites(x))",
            "ForAll(x, PassedClassicalMech(x) → CanTakeDataStructures(x))",
            "ForAll(x, ¬CanEnroll(x) → ¬EnrolledDataStructures(x))",
            "Exists(x, RegisteredAdvPhysics(x))",
            "ForAll(x, EnrolledDataStructures(x))",
            "ForAll(x, PassedClassicalMech(x))",
            "ForAll(x, RegisteredAdvPhysics(x) → CanEnroll(x))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. If the existence of a student allowed to enroll implies that passing Classical Mechanics allows taking Data Structures, then that same implication holds.\nB. It is not true that if some student is allowed to enroll, then passing Classical Mechanics allows taking Data Structures.\nC. If some student is allowed to enroll, then passing Classical Mechanics implies they can take Data Structures.\nD. The statement that if some student is allowed to enroll, then passing Classical Mechanics implies they can take Data Structures is both true and false.",
            "Is it true that if all students enrolled in Calculus I, then all students are allowed to enroll in courses?"
        ],
        "answers": [
            "C",
            "Yes"
        ],
        "idx": [
            [
                1,
                6,
                10
            ],
            [
                1,
                2
            ]
        ],
        "explanation": [
            "Premise 1 states all students can enroll, implying at least one can enroll. Premise 10 states all students passed Classical Mechanics. Premise 6 states that passing Classical Mechanics implies eligibility to take Data Structures. Thus, if some student can enroll, passing Classical Mechanics implies they can take Data Structures, making option C true.",
            "Premise 2 states all students enrolled in Calculus I, and premise 1 states all students can enroll in courses, making the implication true."
        ]
    },
    {
        "premises-NL": [
            "If a device has a motion sensor, then it is compatible with smart home apps.",
            "If a device is compatible with smart home apps, then it is energy efficient.",
            "If a device does not have a motion sensor, then it is not compatible with smart home apps."
        ],
        "premises-FOL": [
            "∀x (HasMotionSensor(x) → CompatibleWithApps(x))",
            "∀x (CompatibleWithApps(x) → EnergyEfficient(x))",
            "∀x (¬HasMotionSensor(x) → ¬CompatibleWithApps(x))"
        ],
        "questions": [
            "Which statement about device properties can we conclude from the given information?\nA. Some devices are compatible with smart home apps but not energy efficient.\nB. All devices with motion sensors are energy efficient.\nC. All energy-efficient devices have motion sensors.\nD. No device without a motion sensor is energy efficient.",
            "Is it true that all devices compatible with smart home apps have motion sensors?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                1,
                2
            ],
            [
                3
            ]
        ],
        "explanation": [
            "The given information tells us that if a device has a motion sensor, it’s compatible with smart home apps (Premise 1), and if it’s compatible with smart home apps, it’s energy efficient (Premise 2). Let’s check a device with a motion sensor—say, device X. Since it has a motion sensor, Premise 1 says it’s compatible with apps. Then, because it’s compatible with apps, Premise 2 says it’s energy efficient. So, any device with a motion sensor ends up being energy efficient, which matches option B: all devices with motion sensors are energy efficient. Option A is incorrect because Premise 2 says all app-compatible devices are energy efficient, so none can be compatible but not energy efficient. Option C is incorrect because a device could be energy efficient without being app-compatible or having a motion sensor—the information doesn’t force energy-efficient devices to have sensors. Option D is incorrect because Premise 3 only says devices without motion sensors aren’t app-compatible, but they could still be energy efficient some other way.",
            "The statement asks whether every device compatible with smart home apps has a motion sensor. The given information says that if a device doesn’t have a motion sensor, it’s not compatible with smart home apps (Premise 3). This means that to be compatible with apps, a device must have a motion sensor, because lacking one prevents compatibility. The statement matches this idea: all app-compatible devices need motion sensors. To double-check, Premise 1 says devices with motion sensors are app-compatible, which supports the idea that motion sensors and app compatibility go together. Since Premise 3 confirms no app-compatible device can lack a motion sensor, the statement is true."
        ]
    },
    {
        "premises-NL": [
            "Every book in the library is available.",
            "If a book is well-catalogued, then it is available.",
            "Every book is in high demand.",
            "If a book is in good condition, then it is well-catalogued.",
            "If a book is well-catalogued, then it is recommended.",
            "If a book is not available, then it is not well-catalogued.",
            "If a book is available, then it is in good condition.",
            "Every book is in good condition.",
            "If a book is not in high demand, then it is not available.",
            "There is at least one book in good condition.",
            "There is at least one available book.",
            "If a book is not in good condition, then it is not well-catalogued.",
            "If a book is well-catalogued, then it is in good condition.",
            "There is at least one well-catalogued book.",
            "If a book is not frequently borrowed, then it is not in good condition.",
            "If a book is frequently borrowed, then it is recommended.",
            "If a book is frequently borrowed, then it is well-catalogued.",
            "If a book is recommended, then it is in good condition.",
            "Every book is frequently borrowed.",
            "If a book is not available, then it is not frequently borrowed.",
            "If not being in high demand implies a book is not available, then if a book is not available, it is not frequently borrowed.",
            "If being frequently borrowed implies a book is well-catalogued, then if a book is not available, it is not well-catalogued.",
            "If every book is available, then every book is frequently borrowed.",
            "If the fact that frequently borrowed books are well-catalogued implies that unavailable books are not well-catalogued, then every book is in high demand.",
            "If being in good condition implies a book is well-catalogued, then if frequently borrowed books are well-catalogued, an unavailable book is not well-catalogued.",
            "If the previous implication holds, then every book is in good condition.",
            "There is at least one recommended book.",
            "If a book is not in high demand, then it is not well-catalogued.",
            "If a book is not in high demand, then it is not frequently borrowed."
        ],
        "premises-FOL": [
            "∀x A(x)",
            "∀x (W(x) → A(x))",
            "∀x H(x)",
            "∀x (G(x) → W(x))",
            "∀x (W(x) → R(x))",
            "∀x (¬A(x) → ¬W(x))",
            "∀x (A(x) → G(x))",
            "∀x G(x)",
            "∀x (¬H(x) → ¬A(x))",
            "∃x G(x)",
            "∃x A(x)",
            "∀x (¬G(x) → ¬W(x))",
            "∀x (W(x) → G(x))",
            "∃x W(x)",
            "∀x (¬F(x) → ¬G(x))",
            "∀x (F(x) → R(x))",
            "∀x (F(x) → W(x))",
            "∀x (R(x) → G(x))",
            "∀x F(x)",
            "∀x (¬A(x) → ¬F(x))",
            "∀x (¬H(x) → ¬A(x)) → ∀x (¬A(x) → ¬F(x))",
            "∀x (F(x) → W(x)) → ∀x (¬A(x) → ¬W(x))",
            "∀x A(x) → ∀x F(x)",
            "(∀x (F(x) → W(x)) → ∀x (¬A(x) → ¬W(x))) → ∀x H(x)",
            "∀x (G(x) → W(x)) → (∀x (F(x) → W(x)) → ∀x (¬A(x) → ¬W(x)))",
            "(∀x (G(x) → W(x)) → (∀x (F(x) → W(x)) → ∀x (¬A(x) → ¬W(x)))) → ∀x G(x)",
            "∃x R(x)",
            "∀x (¬H(x) → ¬W(x))",
            "∀x (¬H(x) → ¬F(x))"
        ],
        "questions": [
            "Which statement about books can we conclude from the given information?\nA. Every frequently borrowed book is both well-catalogued and recommended.\nB. Every book that is not frequently borrowed is well-catalogued.\nC. Some books are not available but are well-catalogued.\nD. Every recommended book is not in good condition.",
            "Is it true that every book is well-catalogued?"
        ],
        "answers": [
            "A",
            "True"
        ],
        "idx": [
            [
                5,
                17
            ],
            [
                4,
                8
            ]
        ],
        "explanation": [
            "The given information tells us that if a book is frequently borrowed, it is well-catalogued (Premise 17), and if a book is well-catalogued, it is recommended (Premise 5). Let’s consider a book that’s frequently borrowed—say, book X. Since it’s frequently borrowed, Premise 17 says it’s well-catalogued. Then, because it’s well-catalogued, Premise 5 says it’s recommended. So, book X is both well-catalogued and recommended. This holds for any frequently borrowed book, matching option A: every frequently borrowed book is both well-catalogued and recommended. Option B is incorrect because the information says every book is frequently borrowed (Premise 19), and even if some weren’t, nothing says they’d be well-catalogued. Option C is incorrect because every book is available (Premise 1), so no book can be unavailable and well-catalogued. Option D is incorrect because every book is in good condition (Premise 8), so recommended books are in good condition, not the opposite.",
            "The statement asks whether every book is well-catalogued. The given information says that every book is in good condition (Premise 8) and that if a book is in good condition, it is well-catalogued (Premise 4). Since every book is in good condition, let’s take any book—call it book Y. Premise 8 says book Y is in good condition. Then, Premise 4 says that because it’s in good condition, it’s well-catalogued. This applies to every book in the library. So, every book is well-catalogued, making the statement true."
        ]
    },
    {
        "premises-NL": [
            "If a bus route is energy efficient, then it is cost-effective.",
            "If a bus route is well-maintained, then it is cost-effective.",
            "There is at least one bus route that is well-maintained."
        ],
        "premises-FOL": [
            "∀x (EnergyEfficient(x) → CostEffective(x))",
            "∀x (WellMaintained(x) → CostEffective(x))",
            "∃x WellMaintained(x)"
        ],
        "questions": [
            "Which statement about bus routes follows from the premises?\nA. Some bus routes are cost-effective and energy efficient.\nB. All bus routes are cost-effective.\nC. There exists a cost-effective bus route.\nD. All cost-effective bus routes are well-maintained.",
            "Is the statement true?\nStatement: ¬∀x (¬WellMaintained(x) → ¬CostEffective(x))"
        ],
        "answers": [
            "C",
            "Uncertain"
        ],
        "idx": [
            [
                2,
                3
            ],
            [
                1,
                2
            ]
        ],
        "explanation": [
            "Premise 3 states there is at least one well-maintained bus route: ∃x WellMaintained(x). Premise 2 states that well-maintained routes are cost-effective: ∀x (WellMaintained(x) → CostEffective(x)). For some route x₀ where WellMaintained(x₀) holds (Premise 3), Premise 2 implies CostEffective(x₀), since WellMaintained(x₀) → CostEffective(x₀). Thus, ∃x CostEffective(x), confirming option C: there exists a cost-effective bus route. Option A (∃x (CostEffective(x) ∧ EnergyEfficient(x))) is false, as no premise ensures energy-efficient routes exist. Option B (∀x CostEffective(x)) is false, as the premises don’t require all routes to be well-maintained or energy-efficient. Option D (∀x (CostEffective(x) → WellMaintained(x))) is false, as cost-effectiveness could arise from energy efficiency (Premise 1) without well-maintenance.",
            "The statement ¬∀x (¬WellMaintained(x) → ¬CostEffective(x)) simplifies to ∃x (¬WellMaintained(x) ∧ CostEffective(x)), meaning some route is not well-maintained but cost-effective. Premise 2 (∀x (WellMaintained(x) → CostEffective(x))) ensures well-maintained routes are cost-effective but says nothing about non-well-maintained routes. Premise 1 (∀x (EnergyEfficient(x) → CostEffective(x))) suggests cost-effectiveness could come from energy efficiency without well-maintenance. However, no premise confirms the existence of energy-efficient routes, so ∃x (¬WellMaintained(x) ∧ CostEffective(x)) isn’t guaranteed. Nor do the premises rule it out, as such a route is possible. Thus, the truth is uncertain."
        ]
    },
    {
        "premises-NL": [
            "There is at least one dish available today.",
            "Every dish is well-prepared.",
            "If a dish is a main course, then it is well-prepared.",
            "If a dish is a main course, then it is spicy.",
            "If a dish is available today, then it is popular.",
            "There is at least one dish recommended by the chef.",
            "There is at least one dish that is well-prepared.",
            "If a dish is not spicy, then it is not recommended by the chef.",
            "If a dish is recommended by the chef, then it is well-prepared.",
            "If a dish is not well-prepared, then it is not a main course.",
            "Every dish on the menu is a main course.",
            "If a dish is not recommended by the chef, then it is not available today.",
            "Every dish is spicy.",
            "There is at least one dish that is spicy.",
            "Every dish is available today.",
            "If every main course is spicy, then there is at least one dish recommended by the chef.",
            "If every dish that is recommended is well-prepared, then if every main course is spicy, there is at least one dish recommended by the chef.",
            "If every main course is spicy, then every dish is available today.",
            "If the fact that every main course being spicy implies there is a recommended dish holds, then if a dish is available today, it is popular.",
            "If every main course being spicy implies there is a recommended dish, then there is at least one dish recommended by the chef.",
            "If a dish is spicy, then it is a main course.",
            "If a dish is not recommended by the chef, then it is not a main course.",
            "If a dish is recommended by the chef, then it is popular.",
            "If a dish is not a main course, then it is not popular.",
            "If a dish is not well-prepared, then it is not popular.",
            "If a dish is recommended by the chef, then it is available today.",
            "If a dish is well-prepared, then it is recommended by the chef."
        ],
        "premises-FOL": [
            "∃x A(x)",
            "∀x W(x)",
            "∀x (M(x) → W(x))",
            "∀x (M(x) → S(x))",
            "∀x (A(x) → P(x))",
            "∃x R(x)",
            "∃x W(x)",
            "∀x (¬S(x) → ¬R(x))",
            "∀x (R(x) → W(x))",
            "∀x (¬W(x) → ¬M(x))",
            "∀x M(x)",
            "∀x (¬R(x) → ¬A(x))",
            "∀x S(x)",
            "∃x S(x)",
            "∀x A(x)",
            "∀x (M(x) → S(x)) → ∃x R(x)",
            "∀x (R(x) → W(x)) → (∀x (M(x) → S(x)) → ∃x R(x))",
            "∀x (M(x) → S(x)) → ∀x A(x)",
            "(∀x (M(x) → S(x)) → ∃x R(x)) → ∀x (A(x) → P(x))",
            "(∀x (M(x) → S(x)) → ∃x R(x)) → ∃x R(x)",
            "∀x (S(x) → M(x))",
            "∀x (¬R(x) → ¬M(x))",
            "∀x (R(x) → P(x))",
            "∀x (¬M(x) → ¬P(x))",
            "∀x (¬W(x) → ¬P(x))",
            "∀x (R(x) → A(x))",
            "∀x (W(x) → R(x))"
        ],
        "questions": [
            "Which statement about dishes can we conclude from the given information?\nA. Every available dish is both recommended by the chef and popular.\nB. Every dish that is not available is recommended by the chef.\nC. Some dishes are not recommended but are popular.\nD. Every spicy dish is not popular.",
            "Is it true that every dish is recommended by the chef?"
        ],
        "answers": [
            "A",
            "True"
        ],
        "idx": [
            [
                5,
                12,
                15
            ],
            [
                2,
                27
            ]
        ],
        "explanation": [
            "The given information tells us that every dish is available today (Premise 15), if a dish is available, it is popular (Premise 5), and if a dish is not recommended by the chef, it is not available (Premise 12). Take any dish—say, dish X—that’s available, which is every dish because of Premise 15. Since it’s available, Premise 5 says it’s popular. Now, Premise 12 means that if a dish isn’t recommended, it can’t be available, so because dish X is available, it must be recommended. So, dish X is both recommended and popular. This applies to every available dish, matching option A: every available dish is both recommended by the chef and popular. Option B is incorrect because every dish is available (Premise 15), so no dish is unavailable to be recommended. Option C is incorrect because every available dish is recommended (Premise 12), and all dishes are available, so no dish is both not recommended and popular. Option D is incorrect because every dish is spicy (Premise 13) and available, and available dishes are popular (Premise 5), so spicy dishes are popular, not the opposite.",
            "The statement asks whether every dish is recommended by the chef. The given information says that every dish is well-prepared (Premise 2) and that if a dish is well-prepared, it is recommended by the chef (Premise 27). Take any dish—call it dish Y. Premise 2 says dish Y is well-prepared. Since it’s well-prepared, Premise 27 says it’s recommended by the chef. This applies to every dish on the menu. So, every dish is recommended by the chef, making the statement true."
        ]
    },
    {
        "premises-NL": [
            "If a product is in stock, then it is of premium quality.",
            "If a product is popular, then it is shipped today.",
            "There is at least one product that is popular.",
            "If a product is in stock, then it is popular."
        ],
        "premises-FOL": [
            "∀x (InStock(x) → PremiumQuality(x))",
            "∀x (Popular(x) → ShippedToday(x))",
            "∃x Popular(x)",
            "∀x (InStock(x) → Popular(x))"
        ],
        "questions": [
            "Which statement about products follows from the given information?\nA. All products are shipped today.\nB. All in-stock products are shipped today.\nC. All premium quality products are popular.\nD. No popular product is in stock.",
            "Is it true that there exists a product that is shipped today?"
        ],
        "answers": [
            "B",
            "Yes"
        ],
        "idx": [
            [
                2,
                4
            ],
            [
                2,
                3
            ]
        ],
        "explanation": [
            "The given information tells us that if a product is in stock, it is popular (Premise 4), and if a product is popular, it is shipped today (Premise 2). Let’s take a product that’s in stock—say, product Y. Since it’s in stock, Premise 4 says it’s popular. Because it’s popular, Premise 2 says it’s shipped today. So, any product that’s in stock ends up being shipped today, which matches option B: all in-stock products are shipped today. Option A is incorrect because the information only talks about in-stock or popular products being shipped, not every single product. Option C is incorrect because, while in-stock products are premium quality and popular (Premises 1 and 4), we don’t know if premium quality products that aren’t in stock are popular. Option D is incorrect because Premise 4 says in-stock products are popular, so some popular products are in stock, not none.",
            "The given information says there’s at least one popular product (Premise 3) and that if a product is popular, it is shipped today (Premise 2). Since there’s at least one popular product—let’s call it product X—Premise 3 confirms it exists. Because product X is popular, Premise 2 says it is shipped today. So, there’s at least one product, namely X, that is shipped today, making the statement true."
        ]
    },
    {
        "premises-NL": [
            "At least one travel package is available in winter.",
            "Every travel package is highly popular.",
            "Every travel package offers sightseeing tours.",
            "Every travel package includes flight tickets.",
            "Every travel package includes hotel reservations.",
            "Every travel package is cost-effective.",
            "If a travel package is highly popular, then it is cost-effective.",
            "If a travel package is available in winter, then it is cost-effective."
        ],
        "premises-FOL": [
            "∃x (Package(x) ∧ Winter(x))",
            "∀x (Package(x) → Popular(x))",
            "∀x (Package(x) → Sightseeing(x))",
            "∀x (Package(x) → Flight(x))",
            "∀x (Package(x) → Hotel(x))",
            "∀x (Package(x) → CostEffective(x))",
            "∀x (Package(x) ∧ Popular(x) → CostEffective(x))",
            "∀x (Package(x) ∧ Winter(x) → CostEffective(x))"
        ],
        "questions": [
            "Do all popular travel packages include flights and cost-effective pricing?\nA. Yes, all popular packages include both.\nB. No, some popular packages lack flights.\nC. No, some popular packages are not cost-effective.\nD. No, popularity doesn’t guarantee either.",
            "If a travel package is available in winter, is it always cost-effective?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                2,
                4,
                6
            ],
            [
                6,
                8
            ]
        ],
        "explanation": [
            "All packages are popular (premise 2), include flights (premise 4), and are cost-effective (premise 6). Thus, popular packages have both flights and cost-effective pricing, so option A is correct. Options B, C, D are false since no packages lack these attributes.",
            "Premise 8 states that winter packages are cost-effective. Premise 6 confirms all packages are cost-effective, supporting that winter packages are always cost-effective."
        ]
    },
    {
        "premises-NL": [
            "If a smartphone is water resistant, then it supports 5G connectivity.",
            "If a smartphone is water resistant, then it is of premium quality.",
            "There is at least one smartphone that is water resistant."
        ],
        "premises-FOL": [
            "∀x (WaterResistant(x) → Supports5G(x))",
            "∀x (WaterResistant(x) → PremiumQuality(x))",
            "∃x WaterResistant(x)"
        ],
        "questions": [
            "Which statement about smartphones can we conclude from the given information?\nA. There is at least one smartphone that supports 5G connectivity.\nB. All premium quality smartphones support 5G connectivity.\nC. All smartphones that support 5G connectivity are premium quality.\nD. All smartphones are water resistant.",
            "Is it true that every smartphone with a high-resolution display has a powerful processor?"
        ],
        "answers": [
            "A",
            "Uncertain"
        ],
        "idx": [
            [
                1,
                3
            ],
            []
        ],
        "explanation": [
            "The given information tells us that there is at least one water-resistant smartphone (Premise 3) and that any water-resistant smartphone supports 5G connectivity (Premise 1). Since there’s at least one water-resistant smartphone, let’s call it phone X. Because phone X is water resistant, it must support 5G connectivity according to Premise 1. This means there is at least one smartphone that supports 5G, so option A is correct. Option B is incorrect because the information only says water-resistant smartphones are premium quality and support 5G; it doesn’t say all premium quality smartphones support 5G, as some could be premium without being water resistant. Option C is incorrect because a smartphone could support 5G without being water resistant, and the information doesn’t ensure it’s premium quality. Option D is incorrect because the information only guarantees at least one water-resistant smartphone, not that all smartphones are water resistant.",
            "The statement asks whether every smartphone with a high-resolution display has a powerful processor. The given information talks about water resistance, 5G connectivity, and premium quality: Premise 1 says water-resistant smartphones support 5G, Premise 2 says they are premium quality, and Premise 3 says at least one such smartphone exists. None of these mention high-resolution displays or powerful processors. Since there’s no information connecting displays to processors, we can’t say whether the statement is true or false, so the answer is uncertain."
        ]
    },
    {
        "premises-NL": [
            "There is at least one electric vehicle that is eco-friendly.",
            "If an electric vehicle has a long range, then it supports fast charging.",
            "There is at least one electric vehicle that supports fast charging.",
            "Every electric vehicle has advanced safety features.",
            "Every electric vehicle supports fast charging.",
            "If an electric vehicle supports fast charging, then it has a long range.",
            "If an electric vehicle is not affordable, then it does not support fast charging.",
            "There is at least one electric vehicle that is affordable.",
            "Every electric vehicle has a long range.",
            "If an electric vehicle is not eco-friendly, then it is not energy efficient.",
            "If an electric vehicle does not have advanced safety features, then it is not affordable.",
            "There is at least one electric vehicle that has a long range.",
            "If an electric vehicle does not support fast charging, then it is not eco-friendly.",
            "If an electric vehicle is eco-friendly, then it is affordable.",
            "If an electric vehicle is not eco-friendly, then it is not affordable.",
            "If an electric vehicle is not energy efficient, then it does not have a long range.",
            "If there is at least one electric vehicle with a long range, then if it is not affordable, it does not support fast charging.",
            "If every electric vehicle has a long range, then if it is not energy efficient, then it does not have a long range.",
            "If there is at least one electric vehicle that supports fast charging, then if it lacks advanced safety features, it is not affordable.",
            "If every electric vehicle has a long range, then every electric vehicle supports fast charging.",
            "If the fact that every electric vehicle having a long range implies that if it is not energy efficient then it does not have a long range, then if an electric vehicle supports fast charging, it has a long range.",
            "If every electric vehicle having a long range implies that if it is not energy efficient then it does not have a long range, then if there is at least one electric vehicle with a long range, it follows that if it is not affordable, then it does not support fast charging.",
            "If an electric vehicle has advanced safety features, then it is energy efficient.",
            "If an electric vehicle is affordable, then it has advanced safety features.",
            "If an electric vehicle does not support fast charging, then it is not affordable.",
            "If an electric vehicle is eco-friendly, then it has a long range.",
            "There is at least one electric vehicle that is energy efficient.",
            "If an electric vehicle is energy efficient, then it has advanced safety features.",
            "If an electric vehicle has a long range, then it is energy efficient."
        ],
        "premises-FOL": [
            "∃x E(x)",
            "∀x (L(x) → F(x))",
            "∃x F(x)",
            "∀x S(x)",
            "∀x F(x)",
            "∀x (F(x) → L(x))",
            "∀x (¬A(x) → ¬F(x))",
            "∃x A(x)",
            "∀x L(x)",
            "∀x (¬E(x) → ¬N(x))",
            "∀x (¬S(x) → ¬A(x))",
            "∃x L(x)",
            "∀x (¬F(x) → ¬E(x))",
            "∀x (E(x) → A(x))",
            "∀x (¬E(x) → ¬A(x))",
            "∀x (¬N(x) → ¬L(x))",
            "∃x L(x) → ∀x (¬A(x) → ¬F(x))",
            "∀x L(x) → ∀x (¬N(x) → ¬L(x))",
            "∃x F(x) → ∀x (¬S(x) → ¬A(x))",
            "∀x L(x) → ∀x F(x)",
            "(∀x L(x) → ∀x (¬N(x) → ¬L(x))) → ∀x (F(x) → L(x))",
            "(∀x L(x) → ∀x (¬N(x) → ¬L(x))) → (∃x L(x) → ∀x (¬A(x) → ¬F(x)))",
            "∀x (S(x) → N(x))",
            "∀x (A(x) → S(x))",
            "∀x (¬F(x) → ¬A(x))",
            "∀x (E(x) → L(x))",
            "∃x N(x)",
            "∀x (N(x) → S(x))",
            "∀x (L(x) → N(x))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. ∀x (E(x) → (A(x) ∧ N(x)))\nB. ∃x (¬F(x) ∧ L(x))\nC. ∀x (¬S(x) → A(x))\nD. ∀x (N(x) → ¬E(x))",
            "Based on the above premises, is the statement true?\nStatement: ∀x L(x)"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                4,
                5
            ],
            [
                9
            ]
        ],
        "explanation": [
            "The statement that if a vehicle is eco-friendly, it is affordable and energy efficient follows because every vehicle is affordable (premise 4) and energy efficient (premise 5).",
            "The statement that every electric vehicle has a long range is true because it is explicitly stated (premise 9)."
        ]
    },
    {
        "premises-NL": [
            "If a travel package is highly popular, then it is cost-effective.",
            "There is at least one travel package that includes flight tickets.",
            "Every travel package offers sightseeing tours."
        ],
        "premises-FOL": [
            "∀x (HighlyPopular(x) → CostEffective(x))",
            "∃x IncludesFlight(x)",
            "∀x OffersSightseeing(x)"
        ],
        "questions": [
            "Which statement about travel packages can we conclude from the given information?\nA. There is at least one travel package that offers sightseeing tours.\nB. All travel packages include flight tickets.\nC. All cost-effective travel packages are highly popular.\nD. Some travel packages are not cost-effective.",
            "Is it true that there is at least one travel package that offers sightseeing tours?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                2,
                3
            ],
            [
                2,
                3
            ]
        ],
        "explanation": [
            "The given information tells us that every travel package offers sightseeing tours (Premise 3) and that there is at least one travel package that includes flight tickets (Premise 2). Since there’s at least one package—let’s call it package X—because of the flights, we know the set of packages isn’t empty. Premise 3 says that every package, including package X, offers sightseeing tours. Therefore, there is at least one package that offers sightseeing tours, so option A is correct. Option B is incorrect because the information only says at least one package includes flights, not all of them. Option C is incorrect because, while popular packages are cost-effective (Premise 1), a package could be cost-effective without being popular, and the information doesn’t say otherwise. Option D is incorrect because the information doesn’t confirm any packages are not cost-effective; we only know popular ones are cost-effective.",
            "The statement asks whether there is at least one travel package that offers sightseeing tours. The given information says that every travel package offers sightseeing tours (Premise 3) and that there is at least one travel package with flight tickets (Premise 2). Since there’s at least one package—let’s call it package X—from Premise 2, we know there’s something to work with. Premise 3 tells us that every package, including package X, offers sightseeing tours. So, package X offers sightseeing tours, meaning there is at least one such package, and the statement is true."
        ]
    },
    {
        "premises-NL": [
            "Every streaming service offers personalized recommendations.",
            "If a streaming service is available globally, then it has a user-friendly interface.",
            "Every streaming service has a user-friendly interface.",
            "Every streaming service is available globally.",
            "If a streaming service does not offer personalized recommendations, then it is not available globally.",
            "If a streaming service does not have a user-friendly interface, then it does not offer exclusive content.",
            "There is at least one streaming service that provides high-quality streaming.",
            "Every streaming service is affordable.",
            "If a streaming service does not provide high-quality streaming, then it is not available globally.",
            "If a streaming service provides high-quality streaming, then it offers exclusive content.",
            "If a streaming service does not offer personalized recommendations, then it is not affordable.",
            "Every streaming service offers exclusive content.",
            "There is at least one streaming service that offers exclusive content.",
            "Every streaming service provides high-quality streaming.",
            "If a streaming service does not provide high-quality streaming, then it does not offer exclusive content.",
            "If a streaming service is not available globally, then it is not affordable.",
            "If a streaming service provides high-quality streaming, then it offers personalized recommendations.",
            "If a streaming service is not available globally, then it does not provide high-quality streaming.",
            "There is at least one streaming service that has a user-friendly interface.",
            "If a streaming service does not offer exclusive content, then it is not available globally.",
            "If a streaming service does not offer exclusive content, then it is not affordable.",
            "If every streaming service is affordable, then non-exclusive streaming services are not affordable.",
            "If every streaming service provides high-quality streaming, then any service that provides high-quality streaming offers exclusive content.",
            "If non-exclusive streaming services are not available globally, then every streaming service is available globally.",
            "If non-exclusive streaming services are not available globally, then non-global services do not provide high-quality streaming.",
            "If the above implication holds, then every streaming service offers exclusive content.",
            "If there is at least one streaming service offering exclusive content, then any service that provides high-quality streaming offers exclusive content.",
            "If not being available globally implies not providing high-quality streaming, then every streaming service has a user-friendly interface.",
            "If the absence of personalized recommendations implies a service is not affordable, then there is at least one streaming service that offers exclusive content.",
            "If providing high-quality streaming implies offering personalized recommendations, then there is at least one streaming service that provides high-quality streaming.",
            "If every streaming service offers personalized recommendations, then if high-quality streaming implies personalized recommendations, there is at least one service that provides high-quality streaming.",
            "If a streaming service is available globally, then it provides high-quality streaming.",
            "There is at least one affordable streaming service.",
            "If a streaming service is not available globally, then it does not offer personalized recommendations.",
            "If a streaming service is available globally, then it offers exclusive content.",
            "If a streaming service does not offer exclusive content, then it does not offer personalized recommendations."
        ],
        "premises-FOL": [
            "∀x P(x)",
            "∀x (G(x) → I(x))",
            "∀x I(x)",
            "∀x G(x)",
            "∀x (¬P(x) → ¬G(x))",
            "∀x (¬I(x) → ¬E(x))",
            "∃x H(x)",
            "∀x A(x)",
            "∀x (¬H(x) → ¬G(x))",
            "∀x (H(x) → E(x))",
            "∀x (¬P(x) → ¬A(x))",
            "∀x E(x)",
            "∃x E(x)",
            "∀x H(x)",
            "∀x (¬H(x) → ¬E(x))",
            "∀x (¬G(x) → ¬A(x))",
            "∀x (H(x) → P(x))",
            "∀x (¬G(x) → ¬H(x))",
            "∃x I(x)",
            "∀x (¬E(x) → ¬G(x))",
            "∀x (¬E(x) → ¬A(x))",
            "∀x A(x) → ∀x (¬E(x) → ¬A(x))",
            "∀x H(x) → ∀x (H(x) → E(x))",
            "∀x (¬E(x) → ¬G(x)) → ∀x G(x)",
            "∀x (¬E(x) → ¬G(x)) → ∀x (¬G(x) → ¬H(x))",
            "(∀x (¬E(x) → ¬G(x)) → ∀x (¬G(x) → ¬H(x))) → ∀x E(x)",
            "∃x E(x) → ∀x (H(x) → E(x))",
            "∀x (¬G(x) → ¬H(x)) → ∀x I(x)",
            "∀x (¬P(x) → ¬A(x)) → ∃x E(x)",
            "∀x (H(x) → P(x)) → ∃x H(x)",
            "∀x P(x) → (∀x (H(x) → P(x)) → ∃x H(x))",
            "∀x (G(x) → H(x))",
            "∃x A(x)",
            "∀x (¬G(x) → ¬P(x))",
            "∀x (G(x) → E(x))",
            "∀x (¬E(x) → ¬P(x))"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. ∀x (H(x) → (E(x) ∧ A(x)))\nB. ∃x (¬E(x) ∧ H(x))\nC. ∀x (¬G(x) → A(x))\nD. ∀x (P(x) → ¬I(x))",
            "Based on the above premises, is the statement true?\nStatement: ∀x H(x)"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                4,
                5
            ],
            [
                14
            ]
        ],
        "explanation": [
            "The statement that if a service provides high-quality streaming, it offers exclusive content and is affordable follows because every service offers exclusive content (premise 5) and is affordable (premise 4).",
            "The statement that every streaming service provides high-quality streaming is true because it is explicitly stated (premise 14)."
        ]
    },
    {
        "premises-NL": [
            "If an online learning platform does not offer certified courses, then it does not provide community support.",
            "If an online learning platform does not offer live webinars, then it does not offer interactive quizzes.",
            "There is at least one online learning platform that offers live webinars."
        ],
        "premises-FOL": [
            "∀x (¬CertifiedCourses(x) → ¬CommunitySupport(x))",
            "∀x (¬LiveWebinar(x) → ¬InteractiveQuizzes(x))",
            "∃x LiveWebinar(x)"
        ],
        "questions": [
            "Which statement about online learning platforms can we conclude from the given information?\nA. There is at least one platform that offers interactive quizzes.\nB. All platforms offer live webinars.\nC. All platforms that offer interactive quizzes also offer community support.\nD. Some platforms do not offer certified courses.",
            "Is it true that every online learning platform offers certified courses?"
        ],
        "answers": [
            "A",
            "Uncertain"
        ],
        "idx": [
            [
                2,
                3
            ],
            []
        ],
        "explanation": [
            "The given information tells us that there is at least one online learning platform that offers live webinars (Premise 3) and that if a platform doesn’t offer live webinars, it doesn’t offer interactive quizzes (Premise 2). Since there’s at least one platform with webinars—let’s call it platform X—we know platform X has live webinars. Premise 2 means that only platforms with webinars can have quizzes, because if a platform lacks webinars, it lacks quizzes. Since platform X has webinars, it’s not missing them, so it can have quizzes—in fact, it must, because the absence of quizzes would imply no webinars, which isn’t true for X. Therefore, platform X offers interactive quizzes, so there is at least one platform that offers quizzes, making option A correct. Option B is incorrect because the information only says at least one platform has webinars, not all. Option C is incorrect because nothing connects quizzes to community support; community support relates to certified courses (Premise 1). Option D is incorrect because the information doesn’t confirm any platforms lack certified courses.",
            "The statement asks whether every online learning platform offers certified courses. The given information says that if a platform doesn’t offer certified courses, it doesn’t provide community support (Premise 1), but it doesn’t say whether all platforms offer certified courses. Premise 2 talks about webinars and quizzes, which don’t relate to certified courses. Premise 3 says there’s at least one platform with webinars, also unrelated. Since no information confirms or denies that every platform offers certified courses, we can’t decide if the statement is true or false, so the answer is uncertain."
        ]
    },
    {
        "premises-NL": [
            "If an e-commerce website offers competitive prices, then it has a secure payment system.",
            "If an e-commerce website does not have a user-friendly interface, then it does not provide customer support.",
            "If an e-commerce website does not have a secure payment system, then it does not have a user-friendly interface.",
            "There is at least one e-commerce website that offers fast delivery.",
            "If an e-commerce website provides customer support, then it has a wide product range.",
            "Every e-commerce website offers competitive prices.",
            "If an e-commerce website has a user-friendly interface, then it has a wide product range.",
            "There is at least one e-commerce website that has a secure payment system.",
            "If an e-commerce website does not provide customer support, then it does not have a secure payment system.",
            "Every e-commerce website provides customer support.",
            "If an e-commerce website does not have a wide product range, then it does not have a user-friendly interface.",
            "If an e-commerce website provides customer support, then it offers fast delivery.",
            "If an e-commerce website does not have a secure payment system, then it does not provide customer support.",
            "Every e-commerce website has a secure payment system.",
            "If an e-commerce website does not offer fast delivery, then it does not have a secure payment system.",
            "There is at least one e-commerce website that provides customer support.",
            "If an e-commerce website offers competitive prices, then it has a user-friendly interface.",
            "If an e-commerce website does not have a secure payment system, then it does not have a wide product range.",
            "If an e-commerce website provides customer support, then it offers competitive prices.",
            "If an e-commerce website offers fast delivery, then it has a user-friendly interface.",
            "There is at least one e-commerce website that offers competitive prices.",
            "If every e-commerce website offers competitive prices, then if a website does not have a user-friendly interface, it does not provide customer support.",
            "If the fact that every website offers competitive prices implies that lack of a user-friendly interface results in no customer support, then customer support implies fast delivery.",
            "If every e-commerce website has a secure payment system, then every website provides customer support.",
            "If customer support implies a wide product range, then lack of fast delivery implies lack of a secure payment system.",
            "If the implication from competitive prices to (lack of user-friendly interface leading to no customer support) implies that customer support leads to fast delivery, then fast delivery implies a user-friendly interface.",
            "If a user-friendly interface implies a wide product range, then customer support implies fast delivery.",
            "If customer support implies a wide product range, then every website with a secure payment system provides customer support.",
            "If fast delivery implies a user-friendly interface, then lack of a secure payment system implies lack of a wide product range.",
            "If there is at least one website that offers competitive prices, then if it does not have a user-friendly interface, it does not provide customer support.",
            "If lack of a wide product range implies lack of a user-friendly interface, then every website with a secure payment system provides customer support.",
            "If an e-commerce website does not provide customer support, then it does not have a wide product range.",
            "Every e-commerce website offers fast delivery.",
            "There is at least one e-commerce website that has a wide product range.",
            "If an e-commerce website offers competitive prices, then it has a wide product range.",
            "There is at least one e-commerce website that has a user-friendly interface."
        ],
        "premises-FOL": [
            "∀x (C(x) → S(x))",
            "∀x (¬U(x) → ¬T(x))",
            "∀x (¬S(x) → ¬U(x))",
            "∃x F(x)",
            "∀x (T(x) -> W(x))",
            "∀x C(x)",
            "∀x (U(x) → W(x))",
            "∃x S(x)",
            "∀x (¬T(x) → ¬S(x))",
            "∀x T(x)",
            "∀x (¬W(x) → ¬U(x))",
            "∀x (T(x) → F(x))",
            "∀x (¬S(x) → ¬T(x))",
            "∀x S(x)",
            "∀x (¬F(x) → ¬S(x))",
            "∃x T(x)",
            "∀x (C(x) → U(x))",
            "∀x (¬S(x) → ¬W(x))",
            "∀x (T(x) → C(x))",
            "∀x (F(x) → U(x))",
            "∃x C(x)",
            "∀x C(x) → ∀x (¬U(x) → ¬T(x))",
            "(∀x C(x) → ∀x (¬U(x) → ¬T(x))) → ∀x (T(x) → F(x))",
            "∀x S(x) → ∀x T(x)",
            "∀x (T(x) → W(x)) → ∀x (¬F(x) → ¬S(x))",
            "((∀x C(x) → ∀x (¬U(x) → ¬T(x))) → ∀x (T(x) → F(x))) → ∀x (F(x) → U(x))",
            "∀x (U(x) → W(x)) → ∀x (T(x) → F(x))",
            "∀x (T(x) → W(x)) → (∀x S(x) → ∀x T(x))",
            "∀x (F(x) → U(x)) → ∀x (¬S(x) → ¬W(x))",
            "∃x C(x) → ∀x (¬U(x) → ¬T(x))",
            "∀x (¬W(x) → ¬U(x)) → (∀x S(x) → ∀x T(x))",
            "∀x (¬T(x) → ¬W(x))",
            "∀x F(x)",
            "∃x W(x)",
            "∀x (C(x) → W(x))",
            "∃x U(x)"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. ∀x (C(x) → (U(x) ∧ W(x)))\nB. ∃x (¬T(x) ∧ S(x))\nC. ∀x (¬F(x) → W(x))\nD. ∀x (S(x) → ¬U(x))",
            "Based on the above premises, is the statement true?\nStatement: ∀x W(x)"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                3,
                5
            ],
            [
                5,
                10
            ]
        ],
        "explanation": [
            "The statement that if a website offers competitive prices, it has a user-friendly interface and a wide product range follows because every website provides customer support (premise 10), implying a user-friendly interface (premise 2) and a wide product range (premise 5).",
            "The statement that every e-commerce website has a wide product range is true because every website provides customer support (premise 10), and customer support implies a wide product range (premise 5)."
        ]
    },
    {
        "premises-NL": [
            "If a security system has an alarm system, then it includes door sensors.",
            "If a security system detects motion, then it has an alarm system.",
            "Every security system provides video surveillance.",
            "If a security system provides video surveillance, then it integrates with smart home devices."
        ],
        "premises-FOL": [
            "∀x (AlarmSystem(x) → DoorSensor(x))",
            "∀x (MotionDetection(x) → AlarmSystem(x))",
            "∀x VideoSurveillance(x)",
            "∀x (VideoSurveillance(x) → SmartIntegration(x))"
        ],
        "questions": [
            "Which statement about security systems can we conclude from the given information?\nA. Every security system with motion detection includes door sensors.\nB. Every security system with an alarm system detects motion.\nC. Some security systems lack video surveillance.\nD. Every security system with door sensors integrates with smart home devices.",
            "Is it true that every security system integrates with smart home devices?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1,
                2
            ],
            [
                3,
                4
            ]
        ],
        "explanation": [
            "The given information tells us that if a security system detects motion, it has an alarm system (Premise 2), and if it has an alarm system, it includes door sensors (Premise 1). Let’s take a security system with motion detection—say, system X. Since it detects motion, Premise 2 says it has an alarm system. Because it has an alarm system, Premise 1 says it includes door sensors. So, system X, and any system with motion detection, has door sensors, matching option A: every security system with motion detection includes door sensors. Option B is incorrect because the information doesn’t say every alarm system detects motion—only that motion detection leads to an alarm system. Option C is incorrect because Premise 3 says every system has video surveillance, so none lack it. Option D is incorrect because, while all systems integrate with smart devices (Premises 3 and 4), this isn’t directly tied to door sensors in the given premises.",
            "The statement asks whether every security system integrates with smart home devices. The given information says that every security system provides video surveillance (Premise 3) and that if a system provides video surveillance, it integrates with smart home devices (Premise 4). Take any security system—let’s call it system Y. Premise 3 says it provides video surveillance. Since it has video surveillance, Premise 4 says it integrates with smart home devices. This applies to every security system, so the statement is true."
        ]
    },
    {
        "premises-NL": [
            "If a drone lacks image stabilization, then it does not have a high-quality camera.",
            "Every drone has a long remote control range.",
            "There is at least one drone that has obstacle avoidance.",
            "If a drone does not have a long remote control range, then it does not have image stabilization.",
            "If a drone does not have a high-quality camera, then it does not have long battery life.",
            "If a drone has a high-quality camera, then it has a long remote control range.",
            "There is at least one drone that has a long remote control range.",
            "There is at least one drone that has GPS navigation.",
            "If a drone has GPS navigation, then it has obstacle avoidance.",
            "If a drone has image stabilization, then it has a long remote control range.",
            "Every drone has image stabilization.",
            "Every drone has a high-quality camera.",
            "If a drone has a long remote control range, then it has obstacle avoidance.",
            "There is at least one drone that has long battery life.",
            "If a drone has obstacle avoidance, then it has a long remote control range.",
            "Every drone has obstacle avoidance.",
            "There is at least one drone that has a high-quality camera.",
            "If a drone has long battery life, then it has a long remote control range.",
            "If a drone does not have a high-quality camera, then it does not have a long remote control range.",
            "If a drone does not have a high-quality camera, then it does not have GPS navigation.",
            "If a drone does not have GPS navigation, then it does not have a long remote control range.",
            "If having a long remote control range implies obstacle avoidance, then every drone has a long remote control range.",
            "If not having a high-quality camera implies not having a long remote control range, then every drone has obstacle avoidance.",
            "If having GPS navigation implies obstacle avoidance, then not having GPS navigation implies not having a long remote control range.",
            "If having long battery life implies a long remote control range, then there is at least one drone with long battery life.",
            "If not having a high-quality camera implies not having long battery life, then every drone has a long remote control range.",
            "If having a long remote control range implies obstacle avoidance, then if a drone has GPS navigation, then it has obstacle avoidance.",
            "If not having a long remote control range implies not having image stabilization, then if having a long remote control range implies obstacle avoidance, every drone has a long remote control range.",
            "If (if long battery life implies a long remote control range then there is at least one drone with long battery life) then if a long remote control range implies obstacle avoidance, every drone has a long remote control range.",
            "If there is at least one drone with a long remote control range, then there is at least one drone with GPS navigation.",
            "If having GPS navigation implies obstacle avoidance, then there is at least one drone with GPS navigation.",
            "If a drone does not have long battery life, then it does not have image stabilization.",
            "If a drone has image stabilization, then it has a high-quality camera.",
            "Every drone has GPS navigation.",
            "If a drone does not have a high-quality camera, then it does not have obstacle avoidance.",
            "Every drone has long battery life."
        ],
        "premises-FOL": [
            "∀x (¬S(x) → ¬C(x))",
            "∀x R(x)",
            "∃x O(x)",
            "∀x (¬R(x) → ¬S(x))",
            "∀x (¬C(x) → ¬B(x))",
            "∀x (C(x) → R(x))",
            "∃x R(x)",
            "∃x G(x)",
            "∀x (G(x) → O(x))",
            "∀x (S(x) → R(x))",
            "∀x S(x)",
            "∀x C(x)",
            "∀x (R(x) → O(x))",
            "∃x B(x)",
            "∀x (O(x) → R(x))",
            "∀x O(x)",
            "∃x C(x)",
            "∀x (B(x) → R(x))",
            "∀x (¬C(x) → ¬R(x))",
            "∀x (¬C(x) → ¬G(x))",
            "∀x (¬G(x) → ¬R(x))",
            "∀x (R(x) → O(x)) → ∀x R(x)",
            "∀x (¬C(x) → ¬R(x)) → ∀x O(x)",
            "∀x (G(x) → O(x)) → ∀x (¬G(x) → ¬R(x))",
            "∀x (B(x) → R(x)) → ∃x B(x)",
            "∀x (¬C(x) → ¬B(x)) → ∀x R(x)",
            "∀x (R(x) → O(x)) → ∀x (G(x) → O(x))",
            "∀x (¬R(x) → ¬S(x)) → (∀x (R(x) → O(x)) → ∀x R(x))",
            "(∀x (B(x) → R(x)) → ∃x B(x)) → (∀x (R(x) → O(x)) → ∀x R(x))",
            "∃x R(x) → ∃x G(x)",
            "∀x (G(x) → O(x)) → ∃x G(x)",
            "∀x (¬B(x) → ¬S(x))",
            "∀x (S(x) → C(x))",
            "∀x G(x)",
            "∀x (¬C(x) → ¬O(x))",
            "∀x B(x)"
        ],
        "questions": [
            "Based on the above premises, which statement can be inferred?\nA. ∀x (G(x) → (S(x) ∧ C(x)))\nB. ∃x (¬O(x) ∧ R(x))\nC. ∀x (¬B(x) → C(x))\nD. ∀x (R(x) → ¬G(x))",
            "Based on the above premises, is the statement true?\nStatement: ¬∀x O(x)"
        ],
        "answers": [
            "A",
            "No"
        ],
        "idx": [
            [
                2,
                3
            ],
            [
                16
            ]
        ],
        "explanation": [
            "The statement that if a drone has GPS navigation, it has image stabilization and a high-quality camera follows because every drone has image stabilization (premise 11) and a high-quality camera (premise 12).",
            "The statement that not every drone has obstacle avoidance is false because every drone has obstacle avoidance (premise 16)."
        ]
    },
    {
        "premises-NL": [
            "If a VR headset does not have immersive sound, then it does not have high-resolution visuals.",
            "If a VR headset does not have high-resolution visuals, then it does not have low latency.",
            "Every VR headset has high-resolution visuals.",
            "If a VR headset is ergonomic, then it has a wide field of view.",
            "If a VR headset has a wide field of view, then it has motion tracking."
        ],
        "premises-FOL": [
            "∀x (¬ImmersiveSound(x) → ¬HighRes(x))",
            "∀x (¬HighRes(x) → ¬LowLatency(x))",
            "∀x HighRes(x)",
            "∀x (Ergonomic(x) → WideFOV(x))",
            "∀x (WideFOV(x) → MotionTracking(x))"
        ],
        "questions": [
            "Which statement about VR headsets can we conclude from the given information?\nA. Every VR headset has immersive sound.\nB. Every VR headset has a wide field of view.\nC. Some VR headsets lack high-resolution visuals.\nD. Every VR headset lacks immersive sound.",
            "Is it true that every ergonomic VR headset has motion tracking?"
        ],
        "answers": [
            "A",
            "Yes"
        ],
        "idx": [
            [
                1,
                3
            ],
            [
                4,
                5
            ]
        ],
        "explanation": [
            "The given information tells us that every VR headset has high-resolution visuals (Premise 3) and that if a headset doesn’t have immersive sound, it doesn’t have high-resolution visuals (Premise 1). Since every headset has high-res visuals, let’s take any headset—say, headset Z. Premise 1 means that to have high-res visuals, a headset must have immersive sound, because lacking immersive sound would mean no high-res visuals, which isn’t possible. So, headset Z must have immersive sound. This applies to every headset, matching option A: every VR headset has immersive sound. Option B is incorrect because nothing says all headsets are ergonomic or have a wide field of view. Option C is incorrect because Premise 3 says all headsets have high-res visuals, so none lack them. Option D is incorrect because it contradicts option A—if all have immersive sound, none lack it.",
            "The statement asks whether every ergonomic VR headset has motion tracking. The given information says that if a headset is ergonomic, it has a wide field of view (Premise 4), and if it has a wide field of view, it has motion tracking (Premise 5). Take an ergonomic headset—let’s call it headset Y. Since it’s ergonomic, Premise 4 says it has a wide field of view. Because it has a wide field of view, Premise 5 says it has motion tracking. So, every ergonomic headset ends up with motion tracking, making the statement true."
        ]
    },
    {
        "premises-NL": [
            "Nam has a GPA of 6.9 after completing 88 credits.",
            "Nam retook 3 previously passed courses: C1 (4 credits, initial 5.2, retake1 7.0, retake2 3.5), C2 (3 credits, initial 6.0, retake1 6.8, retake2 6.0), C3 (5 credits, initial 7.5, retake1 5.0, retake2 4.0).",
            "Nam repeated one failed course: C4 (3 credits, initial 3.0, repeat 6.5).",
            "Nam took two new courses: C5 (4 credits, score 8.0), C6 (2 credits, score 3.8).",
            "A retake is re-registering a passed course (same course code) to improve the grade.",
            "For GPA, use the highest score if ≥ 4.0; if all retake scores < 5.0, deduct 0.2 points per credit from the course’s grade points.",
            "Retaking a course does not add credits.",
            "Repeating a failed course means re-registering it.",
            "A failed course (score < 4.0) adds no credits.",
            "Repeating a failed course adds credits if the new score ≥ 4.0."
        ],
        "premises-FOL": [
            "GPA(Nam) = 6.9 ∧ AccumulatedCredits(Nam) = 88",
            "RetakeCourses(Nam) = [C1(4, 5.2, 7.0, 3.5), C2(3, 6.0, 6.8, 6.0), C3(5, 7.5, 5.0, 4.0)]",
            "RepeatCourses(Nam) = [C4(3, 3.0, 6.5)]",
            "NewCourses(Nam) = [C5(4, 8.0), C6(2, 3.8)]",
            "RetakeDefinition(c): PassedBefore(c) ∧ SameCourseCode(c) ∧ AttemptToImprove(c)",
            "GPAUsesMaxScore(c): GPA(c) = If Max(Score(All)) ≥ 4.0 then Max else 0; If AllRetakes(c) < 5.0 then Subtract(0.2 × Credits(c))",
            "CreditsUnchangedWhenRetake(Nam, c)",
            "RepeatDefinition(c): FailedBefore(c) ∧ ReRegister(c)",
            "If Score(c) < 4.0 then AccumulatedCredit(c) = 0",
            "RepeatCredits(c): If Score(New) ≥ 4.0 then Credit(c) else 0"
        ],
        "questions": [
            "What are the final scores used for GPA in Nam’s retaken courses?",
            "What is Nam’s updated GPA after all course attempts?"
        ],
        "answers": [
            "7.0, 6.8, 7.5",
            "7.02"
        ],
        "idx": [
            [
                2,
                6
            ],
            [
                1,
                2,
                3,
                4,
                6,
                7,
                9,
                10
            ]
        ],
        "explanation": [
            "Premise 2 gives the scores for three retaken courses: C1 (4 credits, initial 5.2, retake1 7.0, retake2 3.5), C2 (3 credits, initial 6.0, retake1 6.8, retake2 6.0), C3 (5 credits, initial 7.5, retake1 5.0, retake2 4.0). Premise 6 says GPA uses the highest score if ≥ 4.0, with a penalty of 0.2 points per credit if all retake scores are < 5.0. For C1, Max(5.2, 7.0, 3.5) = 7.0, retakes 7.0, 3.5 (not all < 5.0), so score is 7.0. For C2, Max(6.0, 6.8, 6.0) = 6.8, retakes 6.8, 6.0 (not all < 5.0), so score is 6.8. For C3, Max(7.5, 5.0, 4.0) = 7.5, retakes 5.0, 4.0 (all < 5.0), but score remains 7.5 (penalty affects grade points, not score). Final scores: 7.0, 6.8, 7.5.",
            "Premise 1 gives Nam a GPA of 6.9 over 88 credits, so grade points are 6.9 × 88 = 607.2. Premise 2 describes retakes: C1 (4 credits, initial 5.2, retake1 7.0, retake2 3.5, original points 20.8), C2 (3 credits, initial 6.0, retake1 6.8, retake2 6.0, original points 18), C3 (5 credits, initial 7.5, retake1 5.0, retake2 4.0, original points 37.5). Premise 6 says use highest score if ≥ 4.0, with 0.2-point penalty per credit if all retakes < 5.0: C1 uses 7.0, points = 7.0 × 4 = 28, change = 28 − 20.8 = 7.2; C2 uses 6.8, points = 6.8 × 3 = 20.4, change = 20.4 − 18 = 2.4; C3 uses 7.5, retakes < 5.0, penalty 0.2 × 5 = 1.0, points = 7.5 × 5 − 1.0 = 36.5, change = 36.5 − 37.5 = −1.0. Premise 3 adds repeat C4 (3 credits, initial 3.0, repeat 6.5), points = 6.5 × 3 = 19.5. Premise 4 adds new courses: C5 (4 credits, 8.0, points = 32), C6 (2 credits, 3.8, failed, 0 points per Premise 9). Total grade points: 607.2 + 7.2 + 2.4 − 1.0 + 19.5 + 32 = 667.3. Total credits (Premises 7, 10): 88 + 0 + 3 + 4 = 95. GPA = 667.3 / 95 ≈ 7.0242, rounded to 7.02."
        ]
    },
    {
        "premises-NL": [
            "A student can withdraw up to 3 courses per academic year if remaining credits ≥ 10 (Year 1, 2) or ≥ 8 (Year 3+); each withdrawal deducts 0.5 credits from total accumulated credits.",
            "Courses have 3, 4, or 5 credits; withdrawn courses contribute 0 credits to semester GPA.",
            "Students must register for 12–18 credits per semester; withdrawals reduce semester credits.",
            "No regulation limits total withdrawals, but max 3 per year.",
            "A student with < 8 accumulated credits cannot withdraw courses.",
            "A student (Year 2) has 45 credits, withdrew 2 courses in Year 1 (penalty 1 credit), including C1 (4 credits, withdrawn), C2 (3 credits, withdrawn).",
            "In Year 2, semester S1, the student registered for 15 credits, withdrew C3 (5 credits), C4 (3 credits), attempted C5 (4 credits, passed)."
        ],
        "premises-FOL": [
            "FORALL(x, y): (Withdrawals(x, y) ≤ 3 ∧ RemainingCredits(x, y, s) ≥ (Year(x) ≤ 2 ? 10 : 8)) → CanWithdrawCourse(x, y, s) ∧ TotalCreditsPenalty(x, -0.5 * Withdrawals(x, y))",
            "FORALL(c): Credits(c) ∈ {3, 4, 5} ∧ Withdrawn(c) → GPACredits(c) = 0",
            "FORALL(x, s): RegisteredCredits(x, s) ∈ [12, 18] ∧ RemainingCredits(x, s) = RegisteredCredits(x, s) − Sum(WithdrawnCredits(x, s))",
            "¬EXISTS(r): Regulation(LimitTotalWithdrawals(r)) ∧ FORALL(y): Withdrawals(y) ≤ 3",
            "FORALL(x): TotalCredits(x) < 8 → ¬CanWithdrawCourse(x, _, _)",
            "Student(s1) ∧ Year(s1) = 2 ∧ TotalCredits(s1) = 45 ∧ Withdrawals(s1, Year1) = 2 ∧ TotalCreditsPenalty(s1, -1) ∧ Course(s1, c1, 4, Withdrawn) ∧ Course(s1, c2, 3, Withdrawn)",
            "Courses(s1, Year2, S1) = [c3(5, Withdrawn), c4(3, Withdrawn), c5(4, Passed)] ∧ RegisteredCredits(s1, S1) = 15"
        ],
        "questions": [
            "What is the student’s total accumulated credits after Year 2, semester S1?",
            "How many credits were withdrawn in Year 2, semester S1, and can the student withdraw another course in semester S2 of Year 2?"
        ],
        "answers": [
            "47",
            "8, No"
        ],
        "idx": [
            [
                1,
                6,
                7
            ],
            [
                1,
                3,
                5,
                7
            ]
        ],
        "explanation": [
            "Premise 6 gives 45 credits, with 2 withdrawals in Year 1 (C1: 4 credits, C2: 3 credits, penalty 2 × 0.5 = 1 credit per Premise 1). Adjusted credits: 45 − 1 = 44. Premise 7 adds: S1 registered 15 credits, C3 (5 credits, withdrawn, 0 credits), C4 (3 credits, withdrawn, 0 credits), C5 (4 credits, passed, +4 credits), 2 withdrawals (penalty 1 credit). Total credits: 44 + 4 = 48 − 1 = 47.",
            "Premise 7 gives S1 withdrawals: C3 (5 credits), C4 (3 credits), total 5 + 3 = 8 credits withdrawn. For S2 withdrawal (Premise 1): Year 2 requires remaining credits ≥ 10. Assume S2 registers 12 credits (Premise 3); withdrawing 3 credits leaves 12 − 3 = 9 < 10, fails. Premise 5: Total credits ≥ 8 (47 from Question 1), passes. Premise 1: 2 withdrawals in S1, 1 allowed in S2. Cannot withdraw in S2 due to insufficient semester credits."
        ]
    },
    {
        "premises-NL": [
            "Selecting a major requires ≥ 24 general education credits, general GPA ≥ 2.5 (scale 0–4), all general courses passed (grade ≥ 2.0).",
            "General courses are 3 credits; each retake after failing (grade < 2.0) costs $50 per attempt.",
            "Students must retake failed general courses until passed; no limit on attempts if fees paid.",
            "General GPA includes only passed courses; failed attempts contribute 0 credits.",
            "A student has 18 general credits, GPA 2.7, failed C1 (3 credits, grade 1.8, 2 attempts, $100 paid).",
            "The student retakes C1 (grade 2.2, $50), passes C2 (3 credits, grade 2.5), pays all fees."
        ],
        "premises-FOL": [
            "FORALL(x): MajorSelection(x) ↔ (GeneralCredits(x) ≥ 24 ∧ GeneralGPA(x) ≥ 2.5 ∧ FORALL(c, GeneralCourse(c) → Grade(x, c) ≥ 2.0))",
            "FORALL(c): GeneralCourse(c) → Credits(c) = 3 ∧ FORALL(x): (Attempts(x, c) > 1 → RetakeFee(x, c, 50 * (Attempts(x, c) − 1)))",
            "FORALL(x, c): (Grade(x, c) < 2.0 ∧ FeesPaid(x)) → RetakeCourse(x, c) ∧ ¬LimitRetakes(x, c)",
            "FORALL(x): GeneralGPA(x) = Sum(Grade(c) * Credits(c) for GeneralCourse(c), Grade(c) ≥ 2.0) / Sum(Credits(c)) ∧ (Grade(c) < 2.0 → Credits(c) = 0)",
            "Student(s1) ∧ GeneralCredits(s1) = 18 ∧ GeneralGPA(s1) = 2.7 ∧ Course(s1, c1, 3, 1.8, Attempts=2) ∧ RetakeFee(s1, c1, 100)",
            "Courses(s1) = [c1_reenroll(3, 2.2, Fee=50), c2(3, 2.5)] ∧ FeesPaid(s1)"
        ],
        "questions": [
            "What is the student’s updated general GPA after the new courses?",
            "How many general credits has the student accumulated, and can they select a major?"
        ],
        "answers": [
            "2.61",
            "24, Yes"
        ],
        "idx": [
            [
                3,
                4,
                5
            ],
            [
                0,
                3,
                4,
                5
            ]
        ],
        "explanation": [
            "Premise 4 gives 18 credits, GPA 2.7, C1 (3 credits, 1.8, failed, 0 credits per Premise 3). Passed credits: 18, points: 2.7 × 18 = 48.6. Premise 5 adds: C1 re-enroll (3 credits, 2.2, points 3 × 2.2 = 6.6), C2 (3 credits, 2.5, points 3 × 2.5 = 7.5). Total credits: 18 + 3 + 3 = 24, points: 48.6 + 6.6 + 7.5 = 62.7. GPA: 62.7 / 24 = 2.6125, rounded to 2.61.",
            "Premise 4 gives 18 credits. Premise 5 adds: C1 re-enroll (3 credits), C2 (3 credits). Total credits: 18 + 3 + 3 = 24. Premise 0 requires: ≥ 24 credits (24, passes), GPA ≥ 2.5 (2.61 from Q0, passes), all grades ≥ 2.0 (C1: 2.2, C2: 2.5, others ≥ 2.0 per initial GPA, passes). The student can select a major."
        ]
    },
    {
        "premises-NL": [
            "On-time graduation requires ≥ 45 credits, all courses scored ≥ 60/100, English test score ≥ 75/100 by 30/06/2025.",
            "Each course (3 credits) contributes credits = (score/100) × 3; scores < 60 contribute 0 credits.",
            "HT grades require $50/attempt removal fee; unresolved HTs by 15/06/2025 block graduation.",
            "English test results are released 10 days after the test; tests cost $30/attempt.",
            "Duy has 42 credits, 2 HT courses (Statistics, Economics, 3 credits each), scores pending.",
            "Duy submits HT removal for Statistics (score 85, $50, 10/06/2025) and Economics (score 55, $50, 12/06/2025).",
            "Duy takes English test on 25/06/2025 (score 80, $30)."
        ],
        "premises-FOL": [
            "FORALL(x): GraduateOnTime(x) ↔ (TotalCredits(x) ≥ 45 ∧ FORALL(c, Score(x, c) ≥ 60) ∧ EnglishScore(x) ≥ 75 ∧ EnglishResultDate(x) ≤ '30/06/2025')",
            "FORALL(x, c): Course(c, 3) → (Score(x, c) ≥ 60 → Credits(x, c) = (Score(x, c) / 100) * 3) ∧ (Score(x, c) < 60 → Credits(x, c) = 0)",
            "FORALL(x, c): HT(x, c) → (RemovalFee(x, c, 50 * Attempts(x, c)) ∧ (HTUnresolved(x, c, '15/06/2025') → ¬GraduateOnTime(x)))",
            "FORALL(x): EnglishResultDate(x) = EnglishTestDate(x) + 10 ∧ EnglishTestFee(x, 30)",
            "Student(Duy) ∧ TotalCredits(Duy) = 42 ∧ HT(Duy, 'Statistics') ∧ HT(Duy, 'Economics') ∧ Course('Statistics', 3) ∧ Course('Economics', 3)",
            "HTRemoval(Duy, 'Statistics', 85, 50, '10/06/2025') ∧ HTRemoval(Duy, 'Economics', 55, 50, '12/06/2025')",
            "EnglishTest(Duy, 80, 30, '25/06/2025')"
        ],
        "questions": [
            "How many total credits does Duy have after resolving HT grades?",
            "What is Duy’s total cost (HT removal and English test fees), and is he eligible to graduate on time?"
        ],
        "answers": [
            "44.55",
            "$130, No"
        ],
        "idx": [
            [
                1,
                4,
                5
            ],
            [
                0,
                2,
                3,
                5,
                6
            ]
        ],
        "explanation": [
            "Premise 4: Duy has 42 credits. Premise 5: Statistics HT resolved (score 85, credits = (85/100) × 3 = 2.55, Premise 1), Economics HT resolved (score 55, credits = 0). Total credits: 42 + 2.55 + 0 = 44.55.",
            "Premise 5: HT removal fees = $50 (Statistics) + $50 (Economics) = $100. Premise 6: English test fee = $30. Total cost: $100 + $30 = $130. Premise 0 requires: ≥ 45 credits (44.55, fails), all scores ≥ 60 (Economics 55, fails), English score ≥ 75 (80, passes), English results by 30/06/2025 (Premise 3: 25/06/2025 + 10 = 05/07/2025, fails). Premise 2: HTs resolved by 15/06/2025 (10/06, 12/06/2025, passes). Not eligible due to credits, Economics score, and English deadline."
        ]
    },
    {
        "premises-NL": [
            "Choosing a major requires ≥ 30 credits, GPA ≥ 2.5 (scale 0–4), ≤ 2 violations; second-year status (≥ 24 credits).",
            "Each failed course deducts 1 credit; each violation reduces GPA by 0.1.",
            "Students with > 2 violations cannot choose a major, regardless of credits or GPA.",
            "GPA is calculated from passed courses (grade ≥ 1.0); failed courses contribute 0 credits.",
            "A student in year 1 has 20 credits, GPA 2.8, 1 violation (GPA penalty 0.1), failed 1 course (3 credits, 1 credit deducted).",
            "In year 2, the student earns 10 credits (GPA 3.0 for new courses), fails 1 course (4 credits, 1 credit deducted), incurs 1 violation."
        ],
        "premises-FOL": [
            "FORALL(x): CanChooseMajor(x) ↔ (TotalCredits(x) ≥ 30 ∧ GPA(x) ≥ 2.5 ∧ Violations(x) ≤ 2 ∧ TotalCredits(x) ≥ 24)",
            "FORALL(x): FailedCourse(x, n) → CreditDeduction(x, n) ∧ Violation(x, m) → GPAPenalty(x, 0.1 * m)",
            "FORALL(x): Violations(x) > 2 → ¬CanChooseMajor(x)",
            "FORALL(x): GPA(x) = Sum(Grade(c) * Credits(c) for PassedCourse(c, Grade≥1.0)) / Sum(Credits(c)) ∧ FailedCourse(c) → Credits(c) = 0",
            "Student(s1) ∧ Year(s1) = 1 ∧ TotalCredits(s1) = 20 ∧ GPA(s1) = 2.8 ∧ Violations(s1) = 1 ∧ GPAPenalty(s1, 0.1) ∧ FailedCourse(s1, 1) ∧ CreditDeduction(s1, 1)",
            "Year(s1) = 2 ∧ NewCredits(s1, 10) ∧ NewGPA(s1, 3.0) ∧ FailedCourse(s1, 1) ∧ CreditDeduction(s1, 1) ∧ Violations(s1, 1)"
        ],
        "questions": [
            "What is the student’s updated GPA after year 2?",
            "How many total credits has the student accumulated, and can they choose a major?"
        ],
        "answers": [
            "2.6",
            "28, No"
        ],
        "idx": [
            [
                2,
                4,
                5,
                6
            ],
            [
                1,
                2,
                5,
                6
            ]
        ],
        "explanation": [
            "Premise 5 gives year 1: 20 credits, GPA 2.8, 1 violation (penalty 0.1, Premise 2), GPA = 2.8 − 0.1 = 2.7, points = 2.7 × 20 = 54.0. Failed course: 0 points (Premise 4). Premise 6 gives year 2: 10 credits, GPA 3.0, points = 3.0 × 10 = 30.0, 1 violation (total 2, penalty 2 × 0.1 = 0.2), failed course (0 points). Total credits: 20 + 10 = 30, points: 54.0 + 30.0 = 84.0, GPA = 84.0 / 30 = 2.8 − 0.2 = 2.6.",
            "Premise 5: Year 1 credits = 20 − 1 (failed course, Premise 2) = 19. Premise 6: Year 2 credits = 10 − 1 = 9. Total credits: 19 + 9 = 28. Premise 1 requires: ≥ 30 credits (28, fails), GPA ≥ 2.5 (2.6 from Q1, passes), ≤ 2 violations (2, passes), ≥ 24 credits (28, passes). Premise 3: 2 violations ≤ 2, passes. Cannot choose major due to insufficient credits."
        ]
    },
    {
        "premises-NL": [
            "Retaking for improvement is re-registering a previously passed course (same course code) to obtain a higher grade.",
            "Retaking a course (not improvement) means re-registering a failed course.",
            "For improvement retakes, use the highest score if ≥ 4.0; if any attempt fails, deduct 0.3 points per credit from the course’s grade points.",
            "A failed course (score < 4.0) contributes no credits.",
            "Improvement retakes do not change accumulated credits.",
            "A student has a GPA of 7.4 with 60 credits, including two courses: C1 (4 credits, original grade 6.8), C2 (3 credits, original grade 5.5).",
            "For C1, the student retook for improvement three times, scoring 7.2, 3.5 (failed), 6.0.",
            "For C2, the student retook for improvement twice, scoring 6.5, 7.0.",
            "After C1’s failure, the student retook C1 (as a failed course) and scored 5.8.",
            "The student took a new course, C3 (5 credits, scored 8.0)."
        ],
        "premises-FOL": [
            "FORALL(x): ImprovedCourse(x) → SameCourseCode(x) ∧ AlreadyPassed(x)",
            "FORALL(x): RetakeCourse(x) → ¬AlreadyPassed(x)",
            "FORALL(x): ImprovedCourse(x) → (GPAUse(x) = If Max(Score(All)) ≥ 4.0 then Max else 0; If AnyFailed(x) then Subtract(0.3 × Credits(x)))",
            "FORALL(x): Failed(x) → ¬AccumulatedCredits(x)",
            "FORALL(x): ImprovedCourse(x) → AccumulatedCreditsUnchanged(x)",
            "Student(s1) ∧ GPA(s1) = 7.4 ∧ AccumulatedCredits(s1) = 60 ∧ Course(c1, 4, 6.8) ∧ Course(c2, 3, 5.5)",
            "ImprovedGrades(s1, c1) = [Attempt1 = 7.2, Attempt2 = 3.5, Attempt3 = 6.0]",
            "ImprovedGrades(s1, c2) = [Attempt1 = 6.5, Attempt2 = 7.0]",
            "RetakeGrade(s1, c1, Attempt4) = 5.8",
            "NewCourse(s1, c3) = (5, 8.0)"
        ],
        "questions": [
            "What are the final grades used for GPA in the student’s retaken courses (C1, C2)?",
            "What is the student’s updated GPA after all course attempts?"
        ],
        "answers": [
            "7.2, 7.0",
            "7.52"
        ],
        "idx": [
            [
                3,
                6,
                7,
                8
            ],
            [
                3,
                5,
                6,
                7,
                8,
                10
            ]
        ],
        "explanation": [
            "Premise 6 states the student had a 4-credit course C1 with an original grade of 6.8 and a 3-credit course C2 with 5.5. Premise 7 says C1 was retaken for improvement three times, scoring 7.2, 3.5 (failed), and 6.0. Premise 8 says C2 was retaken twice, scoring 6.5 and 7.0. Premise 3 says for improvement retakes, use the highest score if ≥ 4.0, with a 0.3-point penalty per credit if any attempt failed. For C1, Max(6.8, 7.2, 3.5, 6.0) = 7.2, with a failure, but the score remains 7.2 (penalty affects grade points). For C2, Max(5.5, 6.5, 7.0) = 7.0, no failure, so score is 7.0. Final grades: 7.2 for C1, 7.0 for C2.",
            "Premise 6 gives a GPA of 7.4 over 60 credits, so grade points are 7.4 × 60 = 444, with C1 (4 credits, 6.8, points 27.2) and C2 (3 credits, 5.5, points 16.5), leaving 53 credits at 400.3 points. Premise 7 says C1 retakes scored 7.2, 3.5 (failed), 6.0; Premise 3 uses Max(6.8, 7.2, 3.5, 6.0) = 7.2, penalty 0.3 × 4 = 1.2 for failure, so points = 7.2 × 4 − 1.2 = 27.6, change = 27.6 − 27.2 = 0.4. Premise 8 says C2 retakes scored 6.5, 7.0; Max(5.5, 6.5, 7.0) = 7.0, no penalty, points = 7.0 × 3 = 21.0, change = 21.0 − 16.5 = 4.5. Premise 10 adds C3 (5 credits, 8.0, points 40). Total grade points: 400.3 + 27.6 + 21.0 + 40 = 488.9. Total credits (Premise 5): 60 + 5 = 65. GPA = 488.9 / 65 ≈ 7.5215, rounded to 7.52."
        ]
    },
    {
        "premises-NL": [
            "A student can withdraw up to 2 courses per semester if remaining credits ≥ 12; each withdrawal reduces GPA by 0.1 (scale 0–10).",
            "Failed courses (grade < 4.0) cannot be withdrawn; passing courses (≥ 4.0) contribute 3, 4, or 5 credits.",
            "First-year students (Year 1) need ≥ 15 remaining credits to withdraw; others need ≥ 12.",
            "No regulation limits total withdrawals, but max 2 per semester.",
            "A student with GPA < 4.0 cannot withdraw courses.",
            "A student (Year 2) has a GPA of 6.5, 40 credits, withdrew 2 courses in semester S1 (GPA penalty 0.2), including C1 (4 credits, 5.5, withdrawn), C2 (3 credits, 3.8, failed, not withdrawn).",
            "In semester S2, the student withdrew C3 (5 credits, 6.0), attempted C4 (3 credits, 4.5), withdrew C5 (4 credits, 5.0)."
        ],
        "premises-FOL": [
            "ForAll(x, s): (Withdrawals(x, s) ≤ 2 ∧ RemainingCredits(x, s) ≥ (Year(x) = 1 ? 15 : 12)) → CanWithdrawCourse(x, s) ∧ GPAPenalty(x, s, -0.1 * Withdrawals(x, s))",
            "ForAll(c): Grade(c) < 4.0 → ¬CanWithdrawCourse(c); Grade(c) ≥ 4.0 → Credits(c) ∈ {3, 4, 5}",
            "ForAll(x, s): Year(x) = 1 → (CanWithdrawCourse(x, s) → RemainingCredits(x, s) ≥ 15)",
            "¬Exists(r): Regulation(LimitTotalWithdrawals(r)) ∧ ForAll(s): Withdrawals(s) ≤ 2",
            "ForAll(x): GPA(x) < 4.0 → ¬CanWithdrawCourse(x, _)",
            "Student(s1) ∧ Year(s1) = 2 ∧ GPA(s1) = 6.5 ∧ AccumulatedCredits(s1) = 40 ∧ Withdrawals(s1, S1) = 2 ∧ GPAPenalty(s1, S1, -0.2) ∧ Course(s1, c1, 4, 5.5, Withdrawn) ∧ Course(s1, c2, 3, 3.8, Failed)",
            "Courses(s1, S2) = [c3(5, 6.0, Withdrawn), c4(3, 4.5), c5(4, 5.0, Withdrawn)]"
        ],
        "questions": [
            "What is the student’s updated GPA after semester S2?",
            "How many total credits remain after S2 withdrawals, and can the student withdraw another course in S3?"
        ],
        "answers": [
            "5.97",
            "43, No"
        ],
        "idx": [
            [
                1,
                2,
                6,
                7
            ],
            [
                1,
                5,
                6,
                7
            ]
        ],
        "explanation": [
            "Premise 6 gives a GPA of 6.5, 40 credits, grade points 6.5 × 40 = 260.0, with C1 (4 credits, 5.5, withdrawn, 0 credits/points), C2 (3 credits, 3.8, failed, 0 credits/points per Premise 2), 2 withdrawals (-0.2 GPA penalty per Premise 1). Adjusted GPA: 6.5 − 0.2 = 6.3, grade points 6.3 × 40 = 252.0. Premise 7 adds: C3 (5 credits, 6.0, withdrawn, 0 credits/points), C4 (3 credits, 4.5, points 3 × 4.5 = 13.5), C5 (4 credits, 5.0, withdrawn, 0 credits/points), 2 withdrawals (-0.2 penalty). Total credits: 40 + 3 = 43. Total grade points: 252.0 + 13.5 = 265.5. GPA before penalty: 265.5 / 43 ≈ 6.17442. After penalty: 6.17442 − 0.2 ≈ 5.97442, rounded to 5.97.",
            "Premise 6 gives 40 credits, with C1 (4 credits, withdrawn), C2 (3 credits, failed, 0 credits). Premise 7 adds: C3 (5 credits, withdrawn), C4 (3 credits, +3), C5 (4 credits, withdrawn). Total credits: 40 + 3 = 43. For S3 withdrawal (Premise 1): Year 2 requires ≥ 12 credits. Assuming 15 credits registered, withdrawing 4 credits leaves 15 − 4 = 11 < 12, fails. Premise 5: GPA ≥ 4.0 (5.97 from Question 1), passes. Withdrawals ≤ 2, passes. The student cannot withdraw another course in S3 due to insufficient credits."
        ]
    },
    {
        "premises-NL": [
            "Graduation requires ≥ 120 credits, GPA ≥ 5.0 (scale 0–10), and ≥ 100 hours of CTXH (social work).",
            "A failed course (grade < 4.0) contributes 0 credits and 0 CTXH hours.",
            "Improvement retakes of passed courses (grade ≥ 4.0) use the highest grade but add no credits or CTXH.",
            "Repeating a failed course adds credits and CTXH hours if grade ≥ 4.0.",
            "Each course contributes CTXH hours: 3-credit course = 10 hours, 4-credit = 15 hours, 5-credit = 20 hours, if grade ≥ 4.0.",
            "Students with ≥ 80 credits and < 100 CTXH hours can join extracurriculars, adding 10 CTXH hours.",
            "A student has a GPA of 6.5 with 85 credits and 200 CTXH hours, including C1 (4 credits, grade 5.8, CTXH 15), C2 (5 credits, grade 7.0, CTXH 20).",
            "The student retook C1 (grade 3.5, failed), repeated C1 (grade 6.2), took C3 (3 credits, grade 8.0), and C4 (4 credits, grade 3.8, failed).",
            "The student joined extracurriculars, adding CTXH hours."
        ],
        "premises-FOL": [
            "Graduate(s) ↔ AccumulatedCredits(s) ≥ 120 ∧ GPA(s) ≥ 5.0 ∧ CTXH_Hours(s) ≥ 100",
            "FORALL(c): Grade(c) < 4.0 → AccumulatedCredits(c) = 0 ∧ CTXH_Hours(c) = 0",
            "FORALL(c): ImprovedCourse(c) ∧ Grade(c) ≥ 4.0 → GPAUse(c) = Max(Grades(c)) ∧ AccumulatedCreditsUnchanged(c) ∧ CTXH_Unchanged(c)",
            "FORALL(c): RepeatCourse(c) ∧ Grade(c) ≥ 4.0 → AccumulatedCredits(c) ∧ CTXH_Hours(c)",
            "FORALL(c): Grade(c) ≥ 4.0 → (Credits(c) = 3 → CTXH_Hours(c) = 10) ∧ (Credits(c) = 4 → CTXH_Hours(c) = 15) ∧ (Credits(c) = 5 → CTXH_Hours(c) = 20)",
            "AccumulatedCredits(s) ≥ 80 ∧ CTXH_Hours(s) < 100 → CanJoinExtracurricular(s) ∧ CTXH_Hours(s) += 10",
            "Student(s1) ∧ GPA(s1) = 6.5 ∧ AccumulatedCredits(s1) = 85 ∧ CTXH_Hours(s1) = 200 ∧ Course(s1, c1, 4, 5.8, 15) ∧ Course(s1, c2, 5, 7.0, 20)",
            "Courses(s1) = [c1_retake(4, 3.5), c1_repeat(4, 6.2), c3(3, 8.0), c4(4, 3.8)]",
            "JoinedExtracurricular(s1) → CTXH_Hours(s1) += 10"
        ],
        "questions": [
            "What is the student’s updated GPA after all course attempts?",
            "How many CTXH hours has the student accumulated, and are they eligible for graduation?"
        ],
        "answers": [
            "6.57",
            "235, No"
        ],
        "idx": [
            [
                2,
                3,
                7,
                8
            ],
            [
                1,
                2,
                5,
                7,
                8,
                9
            ]
        ],
        "explanation": [
            "Premise 7 gives a GPA of 6.5 with 85 credits, grade points 6.5 × 85 = 552.5, including C1 (4 credits, 5.8, points 23.2), C2 (5 credits, 7.0, points 35.0), other 76 credits at 494.3 points. Premise 8 lists: C1 retake (3.5, failed, Max(5.8, 3.5) = 5.8 per Premise 3, points 23.2, no credits per Premise 2), C1 repeat (4 credits, 6.2, points 6.2 × 4 = 24.8, change 1.6 per Premise 4), C3 (3 credits, 8.0, points 24.0), C4 (4 credits, 3.8, failed, 0 points/credits per Premise 2). Total credits: 85 + 3 = 88. Total grade points: 494.3 + 24.8 + 35.0 + 24.0 = 578.1. GPA = 578.1 / 88 ≈ 6.56932, rounded to 6.57.",
            "Premise 7 gives 200 CTXH hours initially. Premise 8 adds: C1 retake (3.5, failed, 0 hours per Premise 2), C1 repeat (4 credits, 6.2, 15 hours per Premise 5), C3 (3 credits, 8.0, 10 hours), C4 (3.8, failed, 0 hours). Premise 9 adds 10 hours (extracurricular, eligible since 85 ≥ 80). Total CTXH: 200 + 15 + 10 + 10 = 235 hours. Premise 1 requires for graduation: ≥ 120 credits, GPA ≥ 5.0, ≥ 100 CTXH hours. Credits: 88 (Question 1), fails. GPA: 6.57, passes. CTXH: 235, passes. Not eligible due to credits."
        ]
    },
    {
        "premises-NL": [
            "Students begin specialization before internships or projects.",
            "Internship eligibility requires ≥ 80 credits, third year, and GPA ≥ 6.0 (scale 0–10).",
            "Major-specific project requires internship completion, ≥ 90 credits, and ≥ 12 social work days.",
            "Thesis eligibility requires ≥ 100 credits, ≥ 15 social work days, MOS certificate, and language certificate.",
            "A failed course (grade < 4.0) contributes 0 credits.",
            "Improvement retakes (passed courses) use the highest grade but add no credits.",
            "Repeating a failed course adds credits if grade ≥ 4.0.",
            "Graduation requires thesis completion, GPA ≥ 5.0, and ≥ 20 social work days.",
            "A student has a GPA of 6.8 with 82 credits, including C1 (4 credits, grade 5.5, failed retake at 3.8), C2 (3 credits, grade 7.0).",
            "The student took C3 (5 credits, grade 8.0), repeated C1 (grade 6.0), and took C4 (4 credits, grade 3.5, failed)."
        ],
        "premises-FOL": [
            "StartSpecialization(s) → Before(Internship(s) ∨ Project(s))",
            "EligibleInternship(s) ↔ AccumulatedCredits(s) ≥ 80 ∧ Year(s) = 3 ∧ GPA(s) ≥ 6.0",
            "EligibleMajorProject(s) ↔ After(Internship(s)) ∧ AccumulatedCredits(s) ≥ 90 ∧ SocialWorkDays(s) ≥ 12",
            "EligibleThesis(s) ↔ AccumulatedCredits(s) ≥ 100 ∧ SocialWorkDays(s) ≥ 15 ∧ HasMOSCertificate(s) ∧ HasLanguageCertificate(s)",
            "FORALL(c): Grade(c) < 4.0 → AccumulatedCredits(c) = 0",
            "FORALL(c): ImprovedCourse(c) → GPAUse(c) = Max(Grades(c)) ∧ AccumulatedCreditsUnchanged(c)",
            "FORALL(c): RepeatCourse(c) ∧ Grade(c) ≥ 4.0 → AccumulatedCredits(c)",
            "Graduate(s) ↔ CompletedThesis(s) ∧ GPA(s) ≥ 5.0 ∧ SocialWorkDays(s) ≥ 20",
            "Student(s1) ∧ GPA(s1) = 6.8 ∧ AccumulatedCredits(s1) = 82 ∧ Course(s1, c1, 4, 5.5, Retake=3.8) ∧ Course(s1, c2, 3, 7.0)",
            "NewCourses(s1) = [c3(5, 8.0), c1_repeat(4, 6.0), c4(4, 3.5)]"
        ],
        "questions": [
            "What is the student’s updated GPA after all course attempts?",
            "How many credits has the student accumulated, and are they eligible for the thesis?"
        ],
        "answers": [
            "6.89",
            "87, No"
        ],
        "idx": [
            [
                5,
                6,
                9,
                10
            ],
            [
                4,
                5,
                7,
                9,
                10
            ]
        ],
        "explanation": [
            "Premise 9 gives a GPA of 6.8 with 82 credits, so grade points are 6.8 × 82 = 557.6, including C1 (4 credits, 5.5, points 22.0), C2 (3 credits, 7.0, points 21.0), and 75 other credits at 514.6 points. Premise 9 says C1 retake scored 3.8 (failed); Premise 6 uses Max(5.5, 3.8) = 5.5, points unchanged at 22.0, as Premise 5 confirms no credits for failures. Premise 10 adds: C3 (5 credits, 8.0, points 40.0), C1 repeat (4 credits, 6.0, points 6.0 × 4 = 24.0, change 24.0 − 22.0 = 2.0 per Premise 7), C4 (4 credits, 3.5, failed, 0 points per Premise 5). Total grade points: 514.6 + 24.0 + 21.0 + 40.0 = 599.6. Total credits (Question 2): 87. GPA = 599.6 / 87 ≈ 6.89195, rounded to 6.89.",
            "Premise 9 gives 82 credits initially. Premise 10 adds: C3 (5 credits), C1 repeat (4 credits, grade 6.0 ≥ 4.0, but credits counted originally per Premise 7), C4 (4 credits, 3.5, failed, 0 credits per Premise 5). Total credits: 82 + 5 = 87. Premise 4 requires for thesis eligibility: ≥ 100 credits, ≥ 15 social work days, MOS and language certificates. With 87 credits, the student fails the credit requirement; social work and certificates are unspecified, so assumed unmet. Thus, the student has 87 credits and is not eligible for the thesis."
        ]
    },
    {
        "premises-NL": [
            "Scholarships require ≥ 20 credits, GPA ≥ 8.0 ($500 award), or GPA ≥ 9.0 ($1000 award); all courses must have grades ≥ 6.0 (scale 0–10).",
            "Credits earned = 0.5 × total grade points (sum of grades across courses); GPA = sum(grade × credits)/total credits.",
            "Scores locked on 15/03/2025; late updates (15/03–20/03/2025) incur $20/day penalty if Faculty-approved.",
            "Unapproved late scores are excluded; approved scores after 20/03/2025 are invalid.",
            "Minh has 15 credits, GPA 7.8, all grades ≥ 6.0, scores locked on 15/03/2025.",
            "Minh adds 3 courses: 9.0 (4 credits, updated 17/03/2025), 8.5 (5 credits, 17/03/2025), 7.5 (3 credits, 16/03/2025); Faculty approves delays.",
            "Minh’s initial courses: 6 credits at 8.0, 9 credits at 7.7."
        ],
        "premises-FOL": [
            "FORALL(x): eligibleScholarship(x) ↔ (creditsEarned(x) ≥ 20 ∧ FORALL(c, grade(x, c) ≥ 6.0) ∧ (gPA(x) ≥ 9.0 → award(x, 1000)) ∧ (gPA(x) ∈ [8.0, 9.0) → award(x, 500)))",
            "FORALL(x): creditsEarned(x) = 0.5 * sum(grade(x, c)) ∧ gPA(x) = sum(grade(x, c) * credits(c)) / sum(credits(c))",
            "scholarshipCutoffDate = 15/03/2025 ∧ FORALL(x): (scoreUpdated(x) > 15/03/2025 ∧ scoreUpdated(x) ≤ 20/03/2025 ∧ facultyApproved(x)) → penalty(x, 20 * daysLate(x))",
            "FORALL(x): (scoreUpdated(x) > 15/03/2025 ∧ (¬facultyApproved(x) ∨ scoreUpdated(x) > 20/03/2025)) → ¬consideredForScholarship(x)",
            "student(Minh) ∧ creditsEarned(Minh) = 15 ∧ gPA(Minh) = 7.8 ∧ FORALL(c, grade(Minh, c) ≥ 6.0) ∧ scoreUpdated(Minh) ≤ 15/03/2025",
            "newCourses(Minh) = [(9.0, 4, 17/03/2025), (8.5, 5, 17/03/2025), (7.5, 3, 16/03/2025)] ∧ facultyApproved(Minh)",
            "initialCourses(Minh) = [(8.0, 6), (7.7, 9)]"
        ],
        "questions": [
            "What is Minh’s scholarship award amount, if any, after new courses?",
            "What is the total penalty fee for Minh’s late score updates?"
        ],
        "answers": [
            "$500",
            "$100"
        ],
        "idx": [
            [
                0,
                1,
                4,
                5,
                6
            ],
            [
                2,
                5
            ]
        ],
        "explanation": [
            "Premise 6: Initial courses (6 credits at 8.0, 9 at 7.7), points = (6 × 8.0) + (9 × 7.7) = 117.3. Premise 4: 15 credits, GPA = 7.8 (117.3 / 15 ≈ 7.82). Premise 5: New courses (9.0, 4 credits, points = 36.0; 8.5, 5 credits, 42.5; 7.5, 3 credits, 22.5). Total credits: 15 + 12 = 27, points: 117.3 + 101.0 = 218.3, GPA = 218.3 / 27 ≈ 8.08519 (Premise 1). Premise 0: Credits ≥ 20 (27, passes), grades ≥ 6.0 (all pass), GPA ≥ 8.0, < 9.0 → $500 award.",
            "Premise 5: Course updates on 17/03/2025 (2 courses, 2 days late), 16/03/2025 (1 course, 1 day late). Premise 2: Penalty = $20/day, Faculty-approved. Fees: (2 × $20 × 2) + (1 × $20 × 1) = $80 + $20 = $100."
        ]
    },
    {
        "premises-NL": [
            "Registration requires an official schedule (≥ 12 enrolled credits), 12–18 credits/semester, full tuition ($50/credit), no violations.",
            "Partial tuition payment allows registration for credits proportional to payment (1 credit per $50 paid, rounded down).",
            "Each violation incurs a $25 penalty; unpaid penalties block registration.",
            "Official schedule requires ≥ 10 accumulated credits; max 3 violations allowed before registration ban.",
            "A student with < 8 accumulated credits cannot register, even if other conditions are met.",
            "A student has 15 credits, paid $400 tuition, 2 violations ($50 unpaid), no official schedule.",
            "The student pays $200 more tuition, clears 1 violation ($25), enrolls 14 credits (schedule granted), incurs 1 new violation ($25)."
        ],
        "premises-FOL": [
            "FORALL(x, s): CanRegister(x, s) ↔ (HasOfficialSchedule(x) ∧ RegisteredCredits(x, s) ∈ [12, 18] ∧ TuitionPaid(x, s, 50 * RegisteredCredits(x, s)) ∧ NoUnpaidPenalties(x))",
            "FORALL(x, s): PartialTuition(x, s, p) → MaxCredits(x, s, floor(p / 50))",
            "FORALL(x): Violation(x, n) → Penalty(x, 25 * n) ∧ UnpaidPenalty(x) → ¬CanRegister(x, _)",
            "FORALL(x): HasOfficialSchedule(x) ↔ TotalCredits(x) ≥ 10 ∧ Violations(x) ≤ 3",
            "FORALL(x): TotalCredits(x) < 8 → ¬CanRegister(x, _)",
            "Student(s1) ∧ TotalCredits(s1) = 15 ∧ TuitionPaid(s1, s1, 400) ∧ Violations(s1) = 2 ∧ Penalty(s1, 50) ∧ UnpaidPenalty(s1) ∧ ¬HasOfficialSchedule(s1)",
            "TuitionPaid(s1, s2, 200) ∧ ViolationsCleared(s1, 1) ∧ PenaltyPaid(s1, 25) ∧ RegisteredCredits(s1, s2, 14) ∧ HasOfficialSchedule(s1) ∧ Violations(s1, 1) ∧ Penalty(s1, 25)"
        ],
        "questions": [
            "What is the total cost (tuition + penalties paid) for semester S2?",
            "How many credits can the student register for in S2, and are they eligible to register for 14 credits again in S3?"
        ],
        "answers": [
            "$225",
            "12, No"
        ],
        "idx": [
            [
                3,
                7
            ],
            [
                1,
                2,
                3,
                4,
                7
            ]
        ],
        "explanation": [
            "Premise 7 gives S2: additional tuition $200, 1 violation cleared ($25 penalty paid), new violation ($25 unpaid). Total cost: tuition + penalties paid = $200 + $25 = $225.",
            "Premise 6 gives $400 tuition, Premise 7 adds $200, total $600. Premise 2: Max credits = floor($600 / 50) = 12 credits for S2, though 14 requested. For S3 (Premise 1): Official schedule (Premise 4: 15 + 12 = 27 credits ≥ 10, 1 violation ≤ 3, passes), 14 credits ∈ [12, 18], passes; but tuition $600 allows 12 credits < 14 (Premise 2), fails. Premise 3: $25 unpaid penalty, fails. Premise 5: 27 ≥ 8, passes. Not eligible for 14 credits in S3 due to tuition and penalty."
        ]
    },
    {
        "premises-NL": [
            "Graduation requires ≥ 130 credits, GPA ≥ 5.5 (scale 0–10), ≥ 120 CTXH hours, and a certificate.",
            "Each course (≥ 4.0 grade) contributes: 3 credits = 8 CTXH hours, 4 credits = 12 hours, 5 credits = 16 hours.",
            "Failed courses (grade < 4.0) add 0 credits, 0 CTXH hours.",
            "Social activities contribute CTXH: club = 20 hours, event = 10 hours; requires ≥ 50 credits to join.",
            "Students with GPA < 6.0 get 0.5 CTXH hours per credit instead of standard course hours.",
            "A student has a GPA of 5.8 with 90 credits, 180 CTXH hours, no certificate, including C1 (3 credits, grade 6.0, CTXH 0), C2 (4 credits, grade 5.5, CTXH 0).",
            "The student took C3 (5 credits, grade 7.0), C4 (3 credits, grade 3.8, failed), joined 2 clubs and 3 events."
        ],
        "premises-FOL": [
            "Graduate(s) ↔ AccumulatedCredits(s) ≥ 130 ∧ GPA(s) ≥ 5.5 ∧ CTXH_Hours(s) ≥ 120 ∧ HasCertificate(s)",
            "FORALL(c): Grade(c) ≥ 4.0 → (Credits(c) = 3 → CTXH_Hours(c) = 8) ∧ (Credits(c) = 4 → CTXH_Hours(c) = 12) ∧ (Credits(c) = 5 → CTXH_Hours(c) = 16)",
            "FORALL(c): Grade(c) < 4.0 → AccumulatedCredits(c) = 0 ∧ CTXH_Hours(c) = 0",
            "AccumulatedCredits(s) ≥ 50 → (Club(s) → CTXH_Hours(s) += 20) ∧ (Event(s) → CTXH_Hours(s) += 10)",
            "GPA(s) < 6.0 → CTXH_Hours(c) = 0.5 × AccumulatedCredits(c)",
            "Student(s1) ∧ GPA(s1) = 5.8 ∧ AccumulatedCredits(s1) = 90 ∧ CTXH_Hours(s1) = 180 ∧ ¬HasCertificate(s1) ∧ Course(s1, c1, 3, 6.0, 0) ∧ Course(s1, c2, 4, 5.5, 0)",
            "Courses(s1) = [c3(5, 7.0), c4(3, 3.8)] ∧ Clubs(s1) = 2 ∧ Events(s1) = 3"
        ],
        "questions": [
            "What is the student’s updated GPA after all courses and activities?",
            "How many CTXH hours has the student accumulated, and are they eligible for graduation?"
        ],
        "answers": [
            "5.86",
            "266, No"
        ],
        "idx": [
            [
                3,
                6,
                7
            ],
            [
                1,
                2,
                3,
                4,
                5,
                6,
                7
            ]
        ],
        "explanation": [
            "Premise 6 gives a GPA of 5.8, 90 credits, grade points 5.8 × 90 = 522.0, with C1 (3 credits, 6.0, points 18.0), C2 (4 credits, 5.5, points 22.0), other 83 credits at 482.0 points. Premise 7 adds: C3 (5 credits, 7.0, points 5 × 7.0 = 35.0), C4 (3 credits, 3.8, failed, 0 credits/points per Premise 3). Total credits: 90 + 5 = 95. Total grade points: 482.0 + 18.0 + 22.0 + 35.0 = 557.0. GPA = 557.0 / 95 ≈ 5.86316, rounded to 5.86.",
            "Premise 6 gives 180 CTXH hours initially. Premise 5 says GPA 5.8 < 6.0 gives 0 hours for C1, C2, but uses initial 180 hours. Premise 7 adds: C3 (5 credits, 7.0, 16 hours per Premise 2), C4 (3.8, failed, 0 hours per Premise 3), 2 clubs (2 × 20 = 40 hours), 3 events (3 × 10 = 30 hours) per Premise 4 (90 ≥ 50). Total CTXH: 180 + 16 + 40 + 30 = 266 hours. Premise 1 requires: ≥ 130 credits, GPA ≥ 5.5, ≥ 120 CTXH hours, certificate. Credits: 95 (Question 1), fails. GPA: 5.86, passes. CTXH: 266, passes. Certificate: none, fails. Not eligible for graduation."
        ]
    },
    {
        "premises-NL": [
            "Electives require 3 courses from group A (6 credits each), 3 from group B (4 credits each), and 1 from group C (3 credits) for a total of 21 credits.",
            "DTBTL = sum(grade × credits) / total credits for selected electives (scale 0–10); DTBTLN excludes non-major courses.",
            "Extra elective courses incur $10/credit fee; highest-scoring subset selected to meet A:3, B:3, C:1.",
            "Student takes 4 group A courses (grades: 8.0, 7.0, 9.0, 6.5; 6 credits each), 4 group B courses (6.0, 7.5, 8.0, 8.5; 4 credits each), 2 group C courses (7.0, 8.0; 3 credits each); group A is non-major."
        ],
        "premises-FOL": [
            "FORALL(x): RequiredElectives(x) = {A:3, Credits=6; B:3, Credits=4; C:1, Credits=3} ∧ TotalCredits(x) = 21",
            "FORALL(x): DTBTL(x) = Sum(Grade(x, c) * Credits(c)) / Sum(Credits(c)) ∧ DTBTLN(x) = Sum(Grade(x, c) * Credits(c) | MajorCourse(c)) / Sum(Credits(c) | MajorCourse(c))",
            "FORALL(x): ExtraElectives(x) → (Fee(x, 10 * Credits(c)) ∧ SelectHighestScoring(x, {A:3, B:3, C:1}))",
            "Courses(x) = {A: [(8.0, 6), (7.0, 6), (9.0, 6), (6.5, 6)], B: [(6.0, 4), (7.5, 4), (8.0, 4), (8.5, 4)], C: [(7.0, 3), (8.0, 3)]} ∧ ¬MajorCourse(A)"
        ],
        "questions": [
            "What is the student’s DTBTL for selected electives?",
            "What is the total fee for extra electives, and what is the DTBTLN?"
        ],
        "answers": [
            "8.0",
            "$130, 8.0"
        ],
        "idx": [
            [
                2,
                3,
                4
            ],
            [
                2,
                3,
                4
            ]
        ],
        "explanation": [
            "Premise 4: Courses A (9.0, 8.0, 7.0), B (8.5, 8.0, 7.5), C (8.0). Premise 3: Select highest. Premise 2: DTBTL = (9.0 × 6 + 8.0 × 6 + 7.0 × 6 + 8.5 × 4 + 8.0 × 4 + 7.5 × 4 + 8.0 × 3) / 33 = 264 / 33 = 8.0.",
            "Premise 4: Extra courses: 1A (6 credits), 1B (4 credits), 1C (3 credits). Premise 3: Fee = (6 + 4 + 3) × 10 = $130. Premise 4: A non-major. Premise 2: DTBTLN = (8.5 × 4 + 8.0 × 4 + 7.5 × 4 + 8.0 × 3) / 15 = 120 / 15 = 8.0."
        ]
    },
    {
        "premises-NL": [
            "Total program credits are 120; internship eligibility requires ≥ 78 credits (65%), GPA ≥ 6.0 (scale 0–10), and ≥ 50 internship prep hours.",
            "First-year students (Year 1) have < 40 credits.",
            "Failed courses (grade < 4.0) contribute 0 credits.",
            "Improvement retakes (grade ≥ 4.0) use highest grade, no extra credits.",
            "Each course (grade ≥ 4.0) adds prep hours: 3 credits = 5 hours, 4 credits = 7 hours, 5 credits = 10 hours.",
            "Third-year students (Year 3) with < 78 credits can join prep workshops (20 hours), if GPA ≥ 5.5.",
            "A student (Year 2) has a GPA of 6.2, 80 credits, 120 prep hours, including C1 (3 credits, 5.8, 5 hours), C2 (4 credits, 6.5, 7 hours).",
            "The student took C3 (5 credits, 7.0), retook C1 (6.8), took C4 (3 credits, 3.5, failed)."
        ],
        "premises-FOL": [
            "TotalCredits = 120 ∧ EligibleForInternship(s) ↔ AccumulatedCredits(s) ≥ 78 ∧ GPA(s) ≥ 6.0 ∧ PrepHours(s) ≥ 50",
            "FORALL(x): Year(x) = 1 → AccumulatedCredits(x) < 40",
            "FORALL(c): Grade(c) < 4.0 → AccumulatedCredits(c) = 0",
            "FORALL(c): ImprovedCourse(c) ∧ Grade(c) ≥ 4.0 → GPAUse(c) = Max(Grades(c)) ∧ AccumulatedCreditsUnchanged(c)",
            "FORALL(c): Grade(c) ≥ 4.0 → (Credits(c) = 3 → PrepHours(c) = 5) ∧ (Credits(c) = 4 → PrepHours(c) = 7) ∧ (Credits(c) = 5 → PrepHours(c) = 10)",
            "Year(x) = 3 ∧ AccumulatedCredits(x) < 78 ∧ GPA(x) ≥ 5.5 → PrepHours(x) += 20",
            "Student(s1) ∧ Year(s1) = 2 ∧ GPA(s1) = 6.2 ∧ AccumulatedCredits(s1) = 80 ∧ PrepHours(s1) = 120 ∧ Course(s1, c1, 3, 5.8, 5) ∧ Course(s1, c2, 4, 6.5, 7)",
            "Courses(s1) = [c3(5, 7.0), c1_retake(3, 6.8), c4(3, 3.5)]"
        ],
        "questions": [
            "What is the student’s updated GPA after all course attempts?",
            "How many internship prep hours has the student accumulated, and are they eligible for an internship?"
        ],
        "answers": [
            "6.28",
            "130, Yes"
        ],
        "idx": [
            [
                3,
                4,
                7,
                8
            ],
            [
                1,
                3,
                5,
                7,
                8
            ]
        ],
        "explanation": [
            "Premise 7 gives a GPA of 6.2, 80 credits, grade points 6.2 × 80 = 496.0, with C1 (3 credits, 5.8, points 17.4), C2 (4 credits, 6.5, points 26.0), other 73 credits at 452.6 points. Premise 8 adds: C3 (5 credits, 7.0, points 5 × 7.0 = 35.0), C1 retake (6.8, Max(5.8, 6.8) = 6.8, points 3 × 6.8 = 20.4, change 3.0 per Premise 4), C4 (3 credits, 3.5, failed, 0 credits/points per Premise 3). Total credits: 80 + 5 = 85. Total grade points: 452.6 + 20.4 + 26.0 + 35.0 = 534.0. GPA = 534.0 / 85 ≈ 6.28235, rounded to 6.28.",
            "Premise 7 gives 120 prep hours. Premise 8 adds: C3 (5 credits, 7.0, 10 hours per Premise 5), C1 retake (6.8, 0 hours per Premise 4), C4 (3.5, failed, 0 hours per Premise 3). No workshops (Year 2, Premise 6). Total prep hours: 120 + 10 = 130. Premise 1 requires: ≥ 78 credits, GPA ≥ 6.0, ≥ 50 prep hours. Credits: 85 (Question 1), passes. GPA: 6.28, passes. Prep hours: 130, passes. The student is eligible for an internship."
        ]
    },
    {
        "premises-NL": [
            "Thesis eligibility requires ≥ 100 credits, GPA ≥ 5.5 (scale 0–10), capstone completion, and ≥ 80 capstone hours.",
            "Capstone completion requires ≥ 80 credits and a 5-credit capstone course (grade ≥ 4.0).",
            "Failed courses (grade < 4.0) add 0 credits, 0 capstone hours.",
            "Improvement retakes (grade ≥ 4.0) use highest grade, no extra credits/hours.",
            "Each course (grade ≥ 4.0) adds capstone hours: 3 credits = 6 hours, 4 credits = 8 hours, 5 credits = 10 hours.",
            "Final-year students (Year 4) with capstone but < 80 hours can join capstone workshops (15 hours), if GPA ≥ 5.0.",
            "A student (Year 3) has a GPA of 5.8, 85 credits, 100 capstone hours, no capstone course, including C1 (3 credits, 6.0, 6 hours), C2 (4 credits, 5.5, 8 hours).",
            "The student took capstone course C3 (5 credits, 4.5), retook C1 (6.5), took C4 (3 credits, 3.8, failed), joined 2 workshops."
        ],
        "premises-FOL": [
            "EligibleForThesis(s) ↔ AccumulatedCredits(s) ≥ 100 ∧ GPA(s) ≥ 5.5 ∧ CompletedCapstone(s) ∧ CapstoneHours(s) ≥ 80",
            "CompletedCapstone(s) ↔ AccumulatedCredits(s) ≥ 80 ∧ ∃c: CapstoneCourse(c) ∧ Credits(c) = 5 ∧ Grade(c) ≥ 4.0",
            "FORALL(c): Grade(c) < 4.0 → AccumulatedCredits(c) = 0 ∧ CapstoneHours(c) = 0",
            "FORALL(c): ImprovedCourse(c) ∧ Grade(c) ≥ 4.0 → GPAUse(c) = Max(Grades(c)) ∧ AccumulatedCreditsUnchanged(c) ∧ CapstoneHoursUnchanged(c)",
            "FORALL(c): Grade(c) ≥ 4.0 → (Credits(c) = 3 → CapstoneHours(c) = 6) ∧ (Credits(c) = 4 → CapstoneHours(c) = 8) ∧ (Credits(c) = 5 → CapstoneHours(c) = 10)",
            "Year(x) = 4 ∧ CompletedCapstone(x) ∧ CapstoneHours(x) < 80 ∧ GPA(x) ≥ 5.0 → CapstoneHours(x) += 15",
            "Student(s1) ∧ Year(s1) = 3 ∧ GPA(s1) = 5.8 ∧ AccumulatedCredits(s1) = 85 ∧ CapstoneHours(s1) = 100 ∧ ¬CompletedCapstone(s1) ∧ Course(s1, c1, 3, 6.0, 6) ∧ Course(s1, c2, 4, 5.5, 8)",
            "Courses(s1) = [c3_capstone(5, 4.5), c1_retake(3, 6.5), c4(3, 3.8)] ∧ Workshops(s1) = 2"
        ],
        "questions": [
            "What is the student’s updated GPA after all course attempts?",
            "How many capstone hours has the student accumulated, and are they eligible for the thesis?"
        ],
        "answers": [
            "5.74",
            "140, No"
        ],
        "idx": [
            [
                3,
                4,
                7,
                8
            ],
            [
                1,
                2,
                3,
                5,
                7,
                8
            ]
        ],
        "explanation": [
            "Premise 7 gives a GPA of 5.8, 85 credits, grade points 5.8 × 85 = 493.0, with C1 (3 credits, 6.0, points 18.0), C2 (4 credits, 5.5, points 22.0), other 78 credits at 453.0 points. Premise 8 adds: C3 (capstone, 5 credits, 4.5, points 5 × 4.5 = 22.5), C1 retake (6.5, Max(6.0, 6.5) = 6.5, points 3 × 6.5 = 19.5, change 1.5 per Premise 4), C4 (3 credits, 3.8, failed, 0 credits/points per Premise 3). Total credits: 85 + 5 = 90. Total grade points: 453.0 + 19.5 + 22.0 + 22.5 = 517.0. GPA = 517.0 / 90 ≈ 5.74444, rounded to 5.74.",
            "Premise 7 gives 100 capstone hours. Premise 8 adds: C3 (5 credits, 4.5, 10 hours per Premise 5), C1 retake (6.5, 0 hours per Premise 4), C4 (3.8, failed, 0 hours per Premise 3), 2 workshops (2 × 15 = 30 hours, assumed eligible). Total hours: 100 + 10 + 30 = 140. Premise 1 requires: ≥ 100 credits, GPA ≥ 5.5, capstone completion, ≥ 80 hours. Credits: 90 (Question 1), fails. GPA: 5.74, passes. Capstone: C3 (4.5), credits 90 ≥ 80, passes (Premise 2). Hours: 140, passes. Not eligible due to credits."
        ]
    }
]